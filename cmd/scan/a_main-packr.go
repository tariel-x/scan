// Code generated by github.com/gobuffalo/packr. DO NOT EDIT.

package main

import "github.com/gobuffalo/packr"

// You can use the "packr clean" command to clean up this,
// and any other packr generated files.
func init() {
	packr.PackJSONBytes("../../web/public", "build/bundle.css", "\"\"")
	packr.PackJSONBytes("../../web/public", "build/bundle.js", "\"CihmdW5jdGlvbihsLCByKSB7IGlmIChsLmdldEVsZW1lbnRCeUlkKCdsaXZlcmVsb2Fkc2NyaXB0JykpIHJldHVybjsgciA9IGwuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7IHIuYXN5bmMgPSAxOyByLnNyYyA9ICcvLycgKyAod2luZG93LmxvY2F0aW9uLmhvc3QgfHwgJ2xvY2FsaG9zdCcpLnNwbGl0KCc6JylbMF0gKyAnOjM1NzI5L2xpdmVyZWxvYWQuanM/c25pcHZlcj0xJzsgci5pZCA9ICdsaXZlcmVsb2Fkc2NyaXB0JzsgbC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnaGVhZCcpWzBdLmFwcGVuZENoaWxkKHIpIH0pKHdpbmRvdy5kb2N1bWVudCk7CnZhciBhcHAgPSAoZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwoKICAgIGZ1bmN0aW9uIG5vb3AoKSB7IH0KICAgIGZ1bmN0aW9uIGFzc2lnbih0YXIsIHNyYykgewogICAgICAgIC8vIEB0cy1pZ25vcmUKICAgICAgICBmb3IgKGNvbnN0IGsgaW4gc3JjKQogICAgICAgICAgICB0YXJba10gPSBzcmNba107CiAgICAgICAgcmV0dXJuIHRhcjsKICAgIH0KICAgIGZ1bmN0aW9uIGFkZF9sb2NhdGlvbihlbGVtZW50LCBmaWxlLCBsaW5lLCBjb2x1bW4sIGNoYXIpIHsKICAgICAgICBlbGVtZW50Ll9fc3ZlbHRlX21ldGEgPSB7CiAgICAgICAgICAgIGxvYzogeyBmaWxlLCBsaW5lLCBjb2x1bW4sIGNoYXIgfQogICAgICAgIH07CiAgICB9CiAgICBmdW5jdGlvbiBydW4oZm4pIHsKICAgICAgICByZXR1cm4gZm4oKTsKICAgIH0KICAgIGZ1bmN0aW9uIGJsYW5rX29iamVjdCgpIHsKICAgICAgICByZXR1cm4gT2JqZWN0LmNyZWF0ZShudWxsKTsKICAgIH0KICAgIGZ1bmN0aW9uIHJ1bl9hbGwoZm5zKSB7CiAgICAgICAgZm5zLmZvckVhY2gocnVuKTsKICAgIH0KICAgIGZ1bmN0aW9uIGlzX2Z1bmN0aW9uKHRoaW5nKSB7CiAgICAgICAgcmV0dXJuIHR5cGVvZiB0aGluZyA9PT0gJ2Z1bmN0aW9uJzsKICAgIH0KICAgIGZ1bmN0aW9uIHNhZmVfbm90X2VxdWFsKGEsIGIpIHsKICAgICAgICByZXR1cm4gYSAhPSBhID8gYiA9PSBiIDogYSAhPT0gYiB8fCAoKGEgJiYgdHlwZW9mIGEgPT09ICdvYmplY3QnKSB8fCB0eXBlb2YgYSA9PT0gJ2Z1bmN0aW9uJyk7CiAgICB9CiAgICBmdW5jdGlvbiBpc19lbXB0eShvYmopIHsKICAgICAgICByZXR1cm4gT2JqZWN0LmtleXMob2JqKS5sZW5ndGggPT09IDA7CiAgICB9CiAgICBmdW5jdGlvbiBjcmVhdGVfc2xvdChkZWZpbml0aW9uLCBjdHgsICQkc2NvcGUsIGZuKSB7CiAgICAgICAgaWYgKGRlZmluaXRpb24pIHsKICAgICAgICAgICAgY29uc3Qgc2xvdF9jdHggPSBnZXRfc2xvdF9jb250ZXh0KGRlZmluaXRpb24sIGN0eCwgJCRzY29wZSwgZm4pOwogICAgICAgICAgICByZXR1cm4gZGVmaW5pdGlvblswXShzbG90X2N0eCk7CiAgICAgICAgfQogICAgfQogICAgZnVuY3Rpb24gZ2V0X3Nsb3RfY29udGV4dChkZWZpbml0aW9uLCBjdHgsICQkc2NvcGUsIGZuKSB7CiAgICAgICAgcmV0dXJuIGRlZmluaXRpb25bMV0gJiYgZm4KICAgICAgICAgICAgPyBhc3NpZ24oJCRzY29wZS5jdHguc2xpY2UoKSwgZGVmaW5pdGlvblsxXShmbihjdHgpKSkKICAgICAgICAgICAgOiAkJHNjb3BlLmN0eDsKICAgIH0KICAgIGZ1bmN0aW9uIGdldF9zbG90X2NoYW5nZXMoZGVmaW5pdGlvbiwgJCRzY29wZSwgZGlydHksIGZuKSB7CiAgICAgICAgaWYgKGRlZmluaXRpb25bMl0gJiYgZm4pIHsKICAgICAgICAgICAgY29uc3QgbGV0cyA9IGRlZmluaXRpb25bMl0oZm4oZGlydHkpKTsKICAgICAgICAgICAgaWYgKCQkc2NvcGUuZGlydHkgPT09IHVuZGVmaW5lZCkgewogICAgICAgICAgICAgICAgcmV0dXJuIGxldHM7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKHR5cGVvZiBsZXRzID09PSAnb2JqZWN0JykgewogICAgICAgICAgICAgICAgY29uc3QgbWVyZ2VkID0gW107CiAgICAgICAgICAgICAgICBjb25zdCBsZW4gPSBNYXRoLm1heCgkJHNjb3BlLmRpcnR5Lmxlbmd0aCwgbGV0cy5sZW5ndGgpOwogICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW47IGkgKz0gMSkgewogICAgICAgICAgICAgICAgICAgIG1lcmdlZFtpXSA9ICQkc2NvcGUuZGlydHlbaV0gfCBsZXRzW2ldOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgcmV0dXJuIG1lcmdlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gJCRzY29wZS5kaXJ0eSB8IGxldHM7CiAgICAgICAgfQogICAgICAgIHJldHVybiAkJHNjb3BlLmRpcnR5OwogICAgfQogICAgZnVuY3Rpb24gdXBkYXRlX3Nsb3Qoc2xvdCwgc2xvdF9kZWZpbml0aW9uLCBjdHgsICQkc2NvcGUsIGRpcnR5LCBnZXRfc2xvdF9jaGFuZ2VzX2ZuLCBnZXRfc2xvdF9jb250ZXh0X2ZuKSB7CiAgICAgICAgY29uc3Qgc2xvdF9jaGFuZ2VzID0gZ2V0X3Nsb3RfY2hhbmdlcyhzbG90X2RlZmluaXRpb24sICQkc2NvcGUsIGRpcnR5LCBnZXRfc2xvdF9jaGFuZ2VzX2ZuKTsKICAgICAgICBpZiAoc2xvdF9jaGFuZ2VzKSB7CiAgICAgICAgICAgIGNvbnN0IHNsb3RfY29udGV4dCA9IGdldF9zbG90X2NvbnRleHQoc2xvdF9kZWZpbml0aW9uLCBjdHgsICQkc2NvcGUsIGdldF9zbG90X2NvbnRleHRfZm4pOwogICAgICAgICAgICBzbG90LnAoc2xvdF9jb250ZXh0LCBzbG90X2NoYW5nZXMpOwogICAgICAgIH0KICAgIH0KICAgIGZ1bmN0aW9uIGV4Y2x1ZGVfaW50ZXJuYWxfcHJvcHMocHJvcHMpIHsKICAgICAgICBjb25zdCByZXN1bHQgPSB7fTsKICAgICAgICBmb3IgKGNvbnN0IGsgaW4gcHJvcHMpCiAgICAgICAgICAgIGlmIChrWzBdICE9PSAnJCcpCiAgICAgICAgICAgICAgICByZXN1bHRba10gPSBwcm9wc1trXTsKICAgICAgICByZXR1cm4gcmVzdWx0OwogICAgfQogICAgZnVuY3Rpb24gY29tcHV0ZV9yZXN0X3Byb3BzKHByb3BzLCBrZXlzKSB7CiAgICAgICAgY29uc3QgcmVzdCA9IHt9OwogICAgICAgIGtleXMgPSBuZXcgU2V0KGtleXMpOwogICAgICAgIGZvciAoY29uc3QgayBpbiBwcm9wcykKICAgICAgICAgICAgaWYgKCFrZXlzLmhhcyhrKSAmJiBrWzBdICE9PSAnJCcpCiAgICAgICAgICAgICAgICByZXN0W2tdID0gcHJvcHNba107CiAgICAgICAgcmV0dXJuIHJlc3Q7CiAgICB9CgogICAgZnVuY3Rpb24gYXBwZW5kKHRhcmdldCwgbm9kZSkgewogICAgICAgIHRhcmdldC5hcHBlbmRDaGlsZChub2RlKTsKICAgIH0KICAgIGZ1bmN0aW9uIGluc2VydCh0YXJnZXQsIG5vZGUsIGFuY2hvcikgewogICAgICAgIHRhcmdldC5pbnNlcnRCZWZvcmUobm9kZSwgYW5jaG9yIHx8IG51bGwpOwogICAgfQogICAgZnVuY3Rpb24gZGV0YWNoKG5vZGUpIHsKICAgICAgICBub2RlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQobm9kZSk7CiAgICB9CiAgICBmdW5jdGlvbiBkZXN0cm95X2VhY2goaXRlcmF0aW9ucywgZGV0YWNoaW5nKSB7CiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBpdGVyYXRpb25zLmxlbmd0aDsgaSArPSAxKSB7CiAgICAgICAgICAgIGlmIChpdGVyYXRpb25zW2ldKQogICAgICAgICAgICAgICAgaXRlcmF0aW9uc1tpXS5kKGRldGFjaGluZyk7CiAgICAgICAgfQogICAgfQogICAgZnVuY3Rpb24gZWxlbWVudChuYW1lKSB7CiAgICAgICAgcmV0dXJuIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQobmFtZSk7CiAgICB9CiAgICBmdW5jdGlvbiB0ZXh0KGRhdGEpIHsKICAgICAgICByZXR1cm4gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoZGF0YSk7CiAgICB9CiAgICBmdW5jdGlvbiBzcGFjZSgpIHsKICAgICAgICByZXR1cm4gdGV4dCgnICcpOwogICAgfQogICAgZnVuY3Rpb24gZW1wdHkoKSB7CiAgICAgICAgcmV0dXJuIHRleHQoJycpOwogICAgfQogICAgZnVuY3Rpb24gbGlzdGVuKG5vZGUsIGV2ZW50LCBoYW5kbGVyLCBvcHRpb25zKSB7CiAgICAgICAgbm9kZS5hZGRFdmVudExpc3RlbmVyKGV2ZW50LCBoYW5kbGVyLCBvcHRpb25zKTsKICAgICAgICByZXR1cm4gKCkgPT4gbm9kZS5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50LCBoYW5kbGVyLCBvcHRpb25zKTsKICAgIH0KICAgIGZ1bmN0aW9uIGF0dHIobm9kZSwgYXR0cmlidXRlLCB2YWx1ZSkgewogICAgICAgIGlmICh2YWx1ZSA9PSBudWxsKQogICAgICAgICAgICBub2RlLnJlbW92ZUF0dHJpYnV0ZShhdHRyaWJ1dGUpOwogICAgICAgIGVsc2UgaWYgKG5vZGUuZ2V0QXR0cmlidXRlKGF0dHJpYnV0ZSkgIT09IHZhbHVlKQogICAgICAgICAgICBub2RlLnNldEF0dHJpYnV0ZShhdHRyaWJ1dGUsIHZhbHVlKTsKICAgIH0KICAgIGZ1bmN0aW9uIHNldF9hdHRyaWJ1dGVzKG5vZGUsIGF0dHJpYnV0ZXMpIHsKICAgICAgICAvLyBAdHMtaWdub3JlCiAgICAgICAgY29uc3QgZGVzY3JpcHRvcnMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhub2RlLl9fcHJvdG9fXyk7CiAgICAgICAgZm9yIChjb25zdCBrZXkgaW4gYXR0cmlidXRlcykgewogICAgICAgICAgICBpZiAoYXR0cmlidXRlc1trZXldID09IG51bGwpIHsKICAgICAgICAgICAgICAgIG5vZGUucmVtb3ZlQXR0cmlidXRlKGtleSk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZSBpZiAoa2V5ID09PSAnc3R5bGUnKSB7CiAgICAgICAgICAgICAgICBub2RlLnN0eWxlLmNzc1RleHQgPSBhdHRyaWJ1dGVzW2tleV07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZSBpZiAoa2V5ID09PSAnX192YWx1ZScpIHsKICAgICAgICAgICAgICAgIG5vZGUudmFsdWUgPSBub2RlW2tleV0gPSBhdHRyaWJ1dGVzW2tleV07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZSBpZiAoZGVzY3JpcHRvcnNba2V5XSAmJiBkZXNjcmlwdG9yc1trZXldLnNldCkgewogICAgICAgICAgICAgICAgbm9kZVtrZXldID0gYXR0cmlidXRlc1trZXldOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgYXR0cihub2RlLCBrZXksIGF0dHJpYnV0ZXNba2V5XSk7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9CiAgICBmdW5jdGlvbiB0b19udW1iZXIodmFsdWUpIHsKICAgICAgICByZXR1cm4gdmFsdWUgPT09ICcnID8gbnVsbCA6ICt2YWx1ZTsKICAgIH0KICAgIGZ1bmN0aW9uIGNoaWxkcmVuKGVsZW1lbnQpIHsKICAgICAgICByZXR1cm4gQXJyYXkuZnJvbShlbGVtZW50LmNoaWxkTm9kZXMpOwogICAgfQogICAgZnVuY3Rpb24gc2V0X2lucHV0X3ZhbHVlKGlucHV0LCB2YWx1ZSkgewogICAgICAgIGlucHV0LnZhbHVlID0gdmFsdWUgPT0gbnVsbCA/ICcnIDogdmFsdWU7CiAgICB9CiAgICBmdW5jdGlvbiBzZWxlY3Rfb3B0aW9uKHNlbGVjdCwgdmFsdWUpIHsKICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNlbGVjdC5vcHRpb25zLmxlbmd0aDsgaSArPSAxKSB7CiAgICAgICAgICAgIGNvbnN0IG9wdGlvbiA9IHNlbGVjdC5vcHRpb25zW2ldOwogICAgICAgICAgICBpZiAob3B0aW9uLl9fdmFsdWUgPT09IHZhbHVlKSB7CiAgICAgICAgICAgICAgICBvcHRpb24uc2VsZWN0ZWQgPSB0cnVlOwogICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQogICAgZnVuY3Rpb24gc2VsZWN0X29wdGlvbnMoc2VsZWN0LCB2YWx1ZSkgewogICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc2VsZWN0Lm9wdGlvbnMubGVuZ3RoOyBpICs9IDEpIHsKICAgICAgICAgICAgY29uc3Qgb3B0aW9uID0gc2VsZWN0Lm9wdGlvbnNbaV07CiAgICAgICAgICAgIG9wdGlvbi5zZWxlY3RlZCA9IH52YWx1ZS5pbmRleE9mKG9wdGlvbi5fX3ZhbHVlKTsKICAgICAgICB9CiAgICB9CiAgICBmdW5jdGlvbiBzZWxlY3RfdmFsdWUoc2VsZWN0KSB7CiAgICAgICAgY29uc3Qgc2VsZWN0ZWRfb3B0aW9uID0gc2VsZWN0LnF1ZXJ5U2VsZWN0b3IoJzpjaGVja2VkJykgfHwgc2VsZWN0Lm9wdGlvbnNbMF07CiAgICAgICAgcmV0dXJuIHNlbGVjdGVkX29wdGlvbiAmJiBzZWxlY3RlZF9vcHRpb24uX192YWx1ZTsKICAgIH0KICAgIGZ1bmN0aW9uIGN1c3RvbV9ldmVudCh0eXBlLCBkZXRhaWwpIHsKICAgICAgICBjb25zdCBlID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoJ0N1c3RvbUV2ZW50Jyk7CiAgICAgICAgZS5pbml0Q3VzdG9tRXZlbnQodHlwZSwgZmFsc2UsIGZhbHNlLCBkZXRhaWwpOwogICAgICAgIHJldHVybiBlOwogICAgfQoKICAgIGxldCBjdXJyZW50X2NvbXBvbmVudDsKICAgIGZ1bmN0aW9uIHNldF9jdXJyZW50X2NvbXBvbmVudChjb21wb25lbnQpIHsKICAgICAgICBjdXJyZW50X2NvbXBvbmVudCA9IGNvbXBvbmVudDsKICAgIH0KICAgIGZ1bmN0aW9uIGdldF9jdXJyZW50X2NvbXBvbmVudCgpIHsKICAgICAgICBpZiAoIWN1cnJlbnRfY29tcG9uZW50KQogICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0Z1bmN0aW9uIGNhbGxlZCBvdXRzaWRlIGNvbXBvbmVudCBpbml0aWFsaXphdGlvbicpOwogICAgICAgIHJldHVybiBjdXJyZW50X2NvbXBvbmVudDsKICAgIH0KICAgIGZ1bmN0aW9uIG9uTW91bnQoZm4pIHsKICAgICAgICBnZXRfY3VycmVudF9jb21wb25lbnQoKS4kJC5vbl9tb3VudC5wdXNoKGZuKTsKICAgIH0KICAgIC8vIFRPRE8gZmlndXJlIG91dCBpZiB3ZSBzdGlsbCB3YW50IHRvIHN1cHBvcnQKICAgIC8vIHNob3J0aGFuZCBldmVudHMsIG9yIGlmIHdlIHdhbnQgdG8gaW1wbGVtZW50CiAgICAvLyBhIHJlYWwgYnViYmxpbmcgbWVjaGFuaXNtCiAgICBmdW5jdGlvbiBidWJibGUoY29tcG9uZW50LCBldmVudCkgewogICAgICAgIGNvbnN0IGNhbGxiYWNrcyA9IGNvbXBvbmVudC4kJC5jYWxsYmFja3NbZXZlbnQudHlwZV07CiAgICAgICAgaWYgKGNhbGxiYWNrcykgewogICAgICAgICAgICBjYWxsYmFja3Muc2xpY2UoKS5mb3JFYWNoKGZuID0+IGZuKGV2ZW50KSk7CiAgICAgICAgfQogICAgfQoKICAgIGNvbnN0IGRpcnR5X2NvbXBvbmVudHMgPSBbXTsKICAgIGNvbnN0IGJpbmRpbmdfY2FsbGJhY2tzID0gW107CiAgICBjb25zdCByZW5kZXJfY2FsbGJhY2tzID0gW107CiAgICBjb25zdCBmbHVzaF9jYWxsYmFja3MgPSBbXTsKICAgIGNvbnN0IHJlc29sdmVkX3Byb21pc2UgPSBQcm9taXNlLnJlc29sdmUoKTsKICAgIGxldCB1cGRhdGVfc2NoZWR1bGVkID0gZmFsc2U7CiAgICBmdW5jdGlvbiBzY2hlZHVsZV91cGRhdGUoKSB7CiAgICAgICAgaWYgKCF1cGRhdGVfc2NoZWR1bGVkKSB7CiAgICAgICAgICAgIHVwZGF0ZV9zY2hlZHVsZWQgPSB0cnVlOwogICAgICAgICAgICByZXNvbHZlZF9wcm9taXNlLnRoZW4oZmx1c2gpOwogICAgICAgIH0KICAgIH0KICAgIGZ1bmN0aW9uIGFkZF9yZW5kZXJfY2FsbGJhY2soZm4pIHsKICAgICAgICByZW5kZXJfY2FsbGJhY2tzLnB1c2goZm4pOwogICAgfQogICAgZnVuY3Rpb24gYWRkX2ZsdXNoX2NhbGxiYWNrKGZuKSB7CiAgICAgICAgZmx1c2hfY2FsbGJhY2tzLnB1c2goZm4pOwogICAgfQogICAgbGV0IGZsdXNoaW5nID0gZmFsc2U7CiAgICBjb25zdCBzZWVuX2NhbGxiYWNrcyA9IG5ldyBTZXQoKTsKICAgIGZ1bmN0aW9uIGZsdXNoKCkgewogICAgICAgIGlmIChmbHVzaGluZykKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIGZsdXNoaW5nID0gdHJ1ZTsKICAgICAgICBkbyB7CiAgICAgICAgICAgIC8vIGZpcnN0LCBjYWxsIGJlZm9yZVVwZGF0ZSBmdW5jdGlvbnMKICAgICAgICAgICAgLy8gYW5kIHVwZGF0ZSBjb21wb25lbnRzCiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZGlydHlfY29tcG9uZW50cy5sZW5ndGg7IGkgKz0gMSkgewogICAgICAgICAgICAgICAgY29uc3QgY29tcG9uZW50ID0gZGlydHlfY29tcG9uZW50c1tpXTsKICAgICAgICAgICAgICAgIHNldF9jdXJyZW50X2NvbXBvbmVudChjb21wb25lbnQpOwogICAgICAgICAgICAgICAgdXBkYXRlKGNvbXBvbmVudC4kJCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgc2V0X2N1cnJlbnRfY29tcG9uZW50KG51bGwpOwogICAgICAgICAgICBkaXJ0eV9jb21wb25lbnRzLmxlbmd0aCA9IDA7CiAgICAgICAgICAgIHdoaWxlIChiaW5kaW5nX2NhbGxiYWNrcy5sZW5ndGgpCiAgICAgICAgICAgICAgICBiaW5kaW5nX2NhbGxiYWNrcy5wb3AoKSgpOwogICAgICAgICAgICAvLyB0aGVuLCBvbmNlIGNvbXBvbmVudHMgYXJlIHVwZGF0ZWQsIGNhbGwKICAgICAgICAgICAgLy8gYWZ0ZXJVcGRhdGUgZnVuY3Rpb25zLiBUaGlzIG1heSBjYXVzZQogICAgICAgICAgICAvLyBzdWJzZXF1ZW50IHVwZGF0ZXMuLi4KICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCByZW5kZXJfY2FsbGJhY2tzLmxlbmd0aDsgaSArPSAxKSB7CiAgICAgICAgICAgICAgICBjb25zdCBjYWxsYmFjayA9IHJlbmRlcl9jYWxsYmFja3NbaV07CiAgICAgICAgICAgICAgICBpZiAoIXNlZW5fY2FsbGJhY2tzLmhhcyhjYWxsYmFjaykpIHsKICAgICAgICAgICAgICAgICAgICAvLyAuLi5zbyBndWFyZCBhZ2FpbnN0IGluZmluaXRlIGxvb3BzCiAgICAgICAgICAgICAgICAgICAgc2Vlbl9jYWxsYmFja3MuYWRkKGNhbGxiYWNrKTsKICAgICAgICAgICAgICAgICAgICBjYWxsYmFjaygpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIHJlbmRlcl9jYWxsYmFja3MubGVuZ3RoID0gMDsKICAgICAgICB9IHdoaWxlIChkaXJ0eV9jb21wb25lbnRzLmxlbmd0aCk7CiAgICAgICAgd2hpbGUgKGZsdXNoX2NhbGxiYWNrcy5sZW5ndGgpIHsKICAgICAgICAgICAgZmx1c2hfY2FsbGJhY2tzLnBvcCgpKCk7CiAgICAgICAgfQogICAgICAgIHVwZGF0ZV9zY2hlZHVsZWQgPSBmYWxzZTsKICAgICAgICBmbHVzaGluZyA9IGZhbHNlOwogICAgICAgIHNlZW5fY2FsbGJhY2tzLmNsZWFyKCk7CiAgICB9CiAgICBmdW5jdGlvbiB1cGRhdGUoJCQpIHsKICAgICAgICBpZiAoJCQuZnJhZ21lbnQgIT09IG51bGwpIHsKICAgICAgICAgICAgJCQudXBkYXRlKCk7CiAgICAgICAgICAgIHJ1bl9hbGwoJCQuYmVmb3JlX3VwZGF0ZSk7CiAgICAgICAgICAgIGNvbnN0IGRpcnR5ID0gJCQuZGlydHk7CiAgICAgICAgICAgICQkLmRpcnR5ID0gWy0xXTsKICAgICAgICAgICAgJCQuZnJhZ21lbnQgJiYgJCQuZnJhZ21lbnQucCgkJC5jdHgsIGRpcnR5KTsKICAgICAgICAgICAgJCQuYWZ0ZXJfdXBkYXRlLmZvckVhY2goYWRkX3JlbmRlcl9jYWxsYmFjayk7CiAgICAgICAgfQogICAgfQogICAgY29uc3Qgb3V0cm9pbmcgPSBuZXcgU2V0KCk7CiAgICBsZXQgb3V0cm9zOwogICAgZnVuY3Rpb24gZ3JvdXBfb3V0cm9zKCkgewogICAgICAgIG91dHJvcyA9IHsKICAgICAgICAgICAgcjogMCwKICAgICAgICAgICAgYzogW10sCiAgICAgICAgICAgIHA6IG91dHJvcyAvLyBwYXJlbnQgZ3JvdXAKICAgICAgICB9OwogICAgfQogICAgZnVuY3Rpb24gY2hlY2tfb3V0cm9zKCkgewogICAgICAgIGlmICghb3V0cm9zLnIpIHsKICAgICAgICAgICAgcnVuX2FsbChvdXRyb3MuYyk7CiAgICAgICAgfQogICAgICAgIG91dHJvcyA9IG91dHJvcy5wOwogICAgfQogICAgZnVuY3Rpb24gdHJhbnNpdGlvbl9pbihibG9jaywgbG9jYWwpIHsKICAgICAgICBpZiAoYmxvY2sgJiYgYmxvY2suaSkgewogICAgICAgICAgICBvdXRyb2luZy5kZWxldGUoYmxvY2spOwogICAgICAgICAgICBibG9jay5pKGxvY2FsKTsKICAgICAgICB9CiAgICB9CiAgICBmdW5jdGlvbiB0cmFuc2l0aW9uX291dChibG9jaywgbG9jYWwsIGRldGFjaCwgY2FsbGJhY2spIHsKICAgICAgICBpZiAoYmxvY2sgJiYgYmxvY2subykgewogICAgICAgICAgICBpZiAob3V0cm9pbmcuaGFzKGJsb2NrKSkKICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgb3V0cm9pbmcuYWRkKGJsb2NrKTsKICAgICAgICAgICAgb3V0cm9zLmMucHVzaCgoKSA9PiB7CiAgICAgICAgICAgICAgICBvdXRyb2luZy5kZWxldGUoYmxvY2spOwogICAgICAgICAgICAgICAgaWYgKGNhbGxiYWNrKSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKGRldGFjaCkKICAgICAgICAgICAgICAgICAgICAgICAgYmxvY2suZCgxKTsKICAgICAgICAgICAgICAgICAgICBjYWxsYmFjaygpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICAgICAgYmxvY2subyhsb2NhbCk7CiAgICAgICAgfQogICAgfQoKICAgIGNvbnN0IGdsb2JhbHMgPSAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcKICAgICAgICA/IHdpbmRvdwogICAgICAgIDogdHlwZW9mIGdsb2JhbFRoaXMgIT09ICd1bmRlZmluZWQnCiAgICAgICAgICAgID8gZ2xvYmFsVGhpcwogICAgICAgICAgICA6IGdsb2JhbCk7CgogICAgZnVuY3Rpb24gZ2V0X3NwcmVhZF91cGRhdGUobGV2ZWxzLCB1cGRhdGVzKSB7CiAgICAgICAgY29uc3QgdXBkYXRlID0ge307CiAgICAgICAgY29uc3QgdG9fbnVsbF9vdXQgPSB7fTsKICAgICAgICBjb25zdCBhY2NvdW50ZWRfZm9yID0geyAkJHNjb3BlOiAxIH07CiAgICAgICAgbGV0IGkgPSBsZXZlbHMubGVuZ3RoOwogICAgICAgIHdoaWxlIChpLS0pIHsKICAgICAgICAgICAgY29uc3QgbyA9IGxldmVsc1tpXTsKICAgICAgICAgICAgY29uc3QgbiA9IHVwZGF0ZXNbaV07CiAgICAgICAgICAgIGlmIChuKSB7CiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGtleSBpbiBvKSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKCEoa2V5IGluIG4pKQogICAgICAgICAgICAgICAgICAgICAgICB0b19udWxsX291dFtrZXldID0gMTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGZvciAoY29uc3Qga2V5IGluIG4pIHsKICAgICAgICAgICAgICAgICAgICBpZiAoIWFjY291bnRlZF9mb3Jba2V5XSkgewogICAgICAgICAgICAgICAgICAgICAgICB1cGRhdGVba2V5XSA9IG5ba2V5XTsKICAgICAgICAgICAgICAgICAgICAgICAgYWNjb3VudGVkX2ZvcltrZXldID0gMTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBsZXZlbHNbaV0gPSBuOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgZm9yIChjb25zdCBrZXkgaW4gbykgewogICAgICAgICAgICAgICAgICAgIGFjY291bnRlZF9mb3Jba2V5XSA9IDE7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgZm9yIChjb25zdCBrZXkgaW4gdG9fbnVsbF9vdXQpIHsKICAgICAgICAgICAgaWYgKCEoa2V5IGluIHVwZGF0ZSkpCiAgICAgICAgICAgICAgICB1cGRhdGVba2V5XSA9IHVuZGVmaW5lZDsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHVwZGF0ZTsKICAgIH0KCiAgICBmdW5jdGlvbiBiaW5kKGNvbXBvbmVudCwgbmFtZSwgY2FsbGJhY2spIHsKICAgICAgICBjb25zdCBpbmRleCA9IGNvbXBvbmVudC4kJC5wcm9wc1tuYW1lXTsKICAgICAgICBpZiAoaW5kZXggIT09IHVuZGVmaW5lZCkgewogICAgICAgICAgICBjb21wb25lbnQuJCQuYm91bmRbaW5kZXhdID0gY2FsbGJhY2s7CiAgICAgICAgICAgIGNhbGxiYWNrKGNvbXBvbmVudC4kJC5jdHhbaW5kZXhdKTsKICAgICAgICB9CiAgICB9CiAgICBmdW5jdGlvbiBjcmVhdGVfY29tcG9uZW50KGJsb2NrKSB7CiAgICAgICAgYmxvY2sgJiYgYmxvY2suYygpOwogICAgfQogICAgZnVuY3Rpb24gbW91bnRfY29tcG9uZW50KGNvbXBvbmVudCwgdGFyZ2V0LCBhbmNob3IpIHsKICAgICAgICBjb25zdCB7IGZyYWdtZW50LCBvbl9tb3VudCwgb25fZGVzdHJveSwgYWZ0ZXJfdXBkYXRlIH0gPSBjb21wb25lbnQuJCQ7CiAgICAgICAgZnJhZ21lbnQgJiYgZnJhZ21lbnQubSh0YXJnZXQsIGFuY2hvcik7CiAgICAgICAgLy8gb25Nb3VudCBoYXBwZW5zIGJlZm9yZSB0aGUgaW5pdGlhbCBhZnRlclVwZGF0ZQogICAgICAgIGFkZF9yZW5kZXJfY2FsbGJhY2soKCkgPT4gewogICAgICAgICAgICBjb25zdCBuZXdfb25fZGVzdHJveSA9IG9uX21vdW50Lm1hcChydW4pLmZpbHRlcihpc19mdW5jdGlvbik7CiAgICAgICAgICAgIGlmIChvbl9kZXN0cm95KSB7CiAgICAgICAgICAgICAgICBvbl9kZXN0cm95LnB1c2goLi4ubmV3X29uX2Rlc3Ryb3kpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgLy8gRWRnZSBjYXNlIC0gY29tcG9uZW50IHdhcyBkZXN0cm95ZWQgaW1tZWRpYXRlbHksCiAgICAgICAgICAgICAgICAvLyBtb3N0IGxpa2VseSBhcyBhIHJlc3VsdCBvZiBhIGJpbmRpbmcgaW5pdGlhbGlzaW5nCiAgICAgICAgICAgICAgICBydW5fYWxsKG5ld19vbl9kZXN0cm95KTsKICAgICAgICAgICAgfQogICAgICAgICAgICBjb21wb25lbnQuJCQub25fbW91bnQgPSBbXTsKICAgICAgICB9KTsKICAgICAgICBhZnRlcl91cGRhdGUuZm9yRWFjaChhZGRfcmVuZGVyX2NhbGxiYWNrKTsKICAgIH0KICAgIGZ1bmN0aW9uIGRlc3Ryb3lfY29tcG9uZW50KGNvbXBvbmVudCwgZGV0YWNoaW5nKSB7CiAgICAgICAgY29uc3QgJCQgPSBjb21wb25lbnQuJCQ7CiAgICAgICAgaWYgKCQkLmZyYWdtZW50ICE9PSBudWxsKSB7CiAgICAgICAgICAgIHJ1bl9hbGwoJCQub25fZGVzdHJveSk7CiAgICAgICAgICAgICQkLmZyYWdtZW50ICYmICQkLmZyYWdtZW50LmQoZGV0YWNoaW5nKTsKICAgICAgICAgICAgLy8gVE9ETyBudWxsIG91dCBvdGhlciByZWZzLCBpbmNsdWRpbmcgY29tcG9uZW50LiQkIChidXQgbmVlZCB0bwogICAgICAgICAgICAvLyBwcmVzZXJ2ZSBmaW5hbCBzdGF0ZT8pCiAgICAgICAgICAgICQkLm9uX2Rlc3Ryb3kgPSAkJC5mcmFnbWVudCA9IG51bGw7CiAgICAgICAgICAgICQkLmN0eCA9IFtdOwogICAgICAgIH0KICAgIH0KICAgIGZ1bmN0aW9uIG1ha2VfZGlydHkoY29tcG9uZW50LCBpKSB7CiAgICAgICAgaWYgKGNvbXBvbmVudC4kJC5kaXJ0eVswXSA9PT0gLTEpIHsKICAgICAgICAgICAgZGlydHlfY29tcG9uZW50cy5wdXNoKGNvbXBvbmVudCk7CiAgICAgICAgICAgIHNjaGVkdWxlX3VwZGF0ZSgpOwogICAgICAgICAgICBjb21wb25lbnQuJCQuZGlydHkuZmlsbCgwKTsKICAgICAgICB9CiAgICAgICAgY29tcG9uZW50LiQkLmRpcnR5WyhpIC8gMzEpIHwgMF0gfD0gKDEgPDwgKGkgJSAzMSkpOwogICAgfQogICAgZnVuY3Rpb24gaW5pdChjb21wb25lbnQsIG9wdGlvbnMsIGluc3RhbmNlLCBjcmVhdGVfZnJhZ21lbnQsIG5vdF9lcXVhbCwgcHJvcHMsIGRpcnR5ID0gWy0xXSkgewogICAgICAgIGNvbnN0IHBhcmVudF9jb21wb25lbnQgPSBjdXJyZW50X2NvbXBvbmVudDsKICAgICAgICBzZXRfY3VycmVudF9jb21wb25lbnQoY29tcG9uZW50KTsKICAgICAgICBjb25zdCBwcm9wX3ZhbHVlcyA9IG9wdGlvbnMucHJvcHMgfHwge307CiAgICAgICAgY29uc3QgJCQgPSBjb21wb25lbnQuJCQgPSB7CiAgICAgICAgICAgIGZyYWdtZW50OiBudWxsLAogICAgICAgICAgICBjdHg6IG51bGwsCiAgICAgICAgICAgIC8vIHN0YXRlCiAgICAgICAgICAgIHByb3BzLAogICAgICAgICAgICB1cGRhdGU6IG5vb3AsCiAgICAgICAgICAgIG5vdF9lcXVhbCwKICAgICAgICAgICAgYm91bmQ6IGJsYW5rX29iamVjdCgpLAogICAgICAgICAgICAvLyBsaWZlY3ljbGUKICAgICAgICAgICAgb25fbW91bnQ6IFtdLAogICAgICAgICAgICBvbl9kZXN0cm95OiBbXSwKICAgICAgICAgICAgYmVmb3JlX3VwZGF0ZTogW10sCiAgICAgICAgICAgIGFmdGVyX3VwZGF0ZTogW10sCiAgICAgICAgICAgIGNvbnRleHQ6IG5ldyBNYXAocGFyZW50X2NvbXBvbmVudCA/IHBhcmVudF9jb21wb25lbnQuJCQuY29udGV4dCA6IFtdKSwKICAgICAgICAgICAgLy8gZXZlcnl0aGluZyBlbHNlCiAgICAgICAgICAgIGNhbGxiYWNrczogYmxhbmtfb2JqZWN0KCksCiAgICAgICAgICAgIGRpcnR5LAogICAgICAgICAgICBza2lwX2JvdW5kOiBmYWxzZQogICAgICAgIH07CiAgICAgICAgbGV0IHJlYWR5ID0gZmFsc2U7CiAgICAgICAgJCQuY3R4ID0gaW5zdGFuY2UKICAgICAgICAgICAgPyBpbnN0YW5jZShjb21wb25lbnQsIHByb3BfdmFsdWVzLCAoaSwgcmV0LCAuLi5yZXN0KSA9PiB7CiAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZSA9IHJlc3QubGVuZ3RoID8gcmVzdFswXSA6IHJldDsKICAgICAgICAgICAgICAgIGlmICgkJC5jdHggJiYgbm90X2VxdWFsKCQkLmN0eFtpXSwgJCQuY3R4W2ldID0gdmFsdWUpKSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKCEkJC5za2lwX2JvdW5kICYmICQkLmJvdW5kW2ldKQogICAgICAgICAgICAgICAgICAgICAgICAkJC5ib3VuZFtpXSh2YWx1ZSk7CiAgICAgICAgICAgICAgICAgICAgaWYgKHJlYWR5KQogICAgICAgICAgICAgICAgICAgICAgICBtYWtlX2RpcnR5KGNvbXBvbmVudCwgaSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICByZXR1cm4gcmV0OwogICAgICAgICAgICB9KQogICAgICAgICAgICA6IFtdOwogICAgICAgICQkLnVwZGF0ZSgpOwogICAgICAgIHJlYWR5ID0gdHJ1ZTsKICAgICAgICBydW5fYWxsKCQkLmJlZm9yZV91cGRhdGUpOwogICAgICAgIC8vIGBmYWxzZWAgYXMgYSBzcGVjaWFsIGNhc2Ugb2Ygbm8gRE9NIGNvbXBvbmVudAogICAgICAgICQkLmZyYWdtZW50ID0gY3JlYXRlX2ZyYWdtZW50ID8gY3JlYXRlX2ZyYWdtZW50KCQkLmN0eCkgOiBmYWxzZTsKICAgICAgICBpZiAob3B0aW9ucy50YXJnZXQpIHsKICAgICAgICAgICAgaWYgKG9wdGlvbnMuaHlkcmF0ZSkgewogICAgICAgICAgICAgICAgY29uc3Qgbm9kZXMgPSBjaGlsZHJlbihvcHRpb25zLnRhcmdldCk7CiAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLW5vbi1udWxsLWFzc2VydGlvbgogICAgICAgICAgICAgICAgJCQuZnJhZ21lbnQgJiYgJCQuZnJhZ21lbnQubChub2Rlcyk7CiAgICAgICAgICAgICAgICBub2Rlcy5mb3JFYWNoKGRldGFjaCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLW5vbi1udWxsLWFzc2VydGlvbgogICAgICAgICAgICAgICAgJCQuZnJhZ21lbnQgJiYgJCQuZnJhZ21lbnQuYygpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChvcHRpb25zLmludHJvKQogICAgICAgICAgICAgICAgdHJhbnNpdGlvbl9pbihjb21wb25lbnQuJCQuZnJhZ21lbnQpOwogICAgICAgICAgICBtb3VudF9jb21wb25lbnQoY29tcG9uZW50LCBvcHRpb25zLnRhcmdldCwgb3B0aW9ucy5hbmNob3IpOwogICAgICAgICAgICBmbHVzaCgpOwogICAgICAgIH0KICAgICAgICBzZXRfY3VycmVudF9jb21wb25lbnQocGFyZW50X2NvbXBvbmVudCk7CiAgICB9CiAgICAvKioKICAgICAqIEJhc2UgY2xhc3MgZm9yIFN2ZWx0ZSBjb21wb25lbnRzLiBVc2VkIHdoZW4gZGV2PWZhbHNlLgogICAgICovCiAgICBjbGFzcyBTdmVsdGVDb21wb25lbnQgewogICAgICAgICRkZXN0cm95KCkgewogICAgICAgICAgICBkZXN0cm95X2NvbXBvbmVudCh0aGlzLCAxKTsKICAgICAgICAgICAgdGhpcy4kZGVzdHJveSA9IG5vb3A7CiAgICAgICAgfQogICAgICAgICRvbih0eXBlLCBjYWxsYmFjaykgewogICAgICAgICAgICBjb25zdCBjYWxsYmFja3MgPSAodGhpcy4kJC5jYWxsYmFja3NbdHlwZV0gfHwgKHRoaXMuJCQuY2FsbGJhY2tzW3R5cGVdID0gW10pKTsKICAgICAgICAgICAgY2FsbGJhY2tzLnB1c2goY2FsbGJhY2spOwogICAgICAgICAgICByZXR1cm4gKCkgPT4gewogICAgICAgICAgICAgICAgY29uc3QgaW5kZXggPSBjYWxsYmFja3MuaW5kZXhPZihjYWxsYmFjayk7CiAgICAgICAgICAgICAgICBpZiAoaW5kZXggIT09IC0xKQogICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrcy5zcGxpY2UoaW5kZXgsIDEpOwogICAgICAgICAgICB9OwogICAgICAgIH0KICAgICAgICAkc2V0KCQkcHJvcHMpIHsKICAgICAgICAgICAgaWYgKHRoaXMuJCRzZXQgJiYgIWlzX2VtcHR5KCQkcHJvcHMpKSB7CiAgICAgICAgICAgICAgICB0aGlzLiQkLnNraXBfYm91bmQgPSB0cnVlOwogICAgICAgICAgICAgICAgdGhpcy4kJHNldCgkJHByb3BzKTsKICAgICAgICAgICAgICAgIHRoaXMuJCQuc2tpcF9ib3VuZCA9IGZhbHNlOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQoKICAgIGZ1bmN0aW9uIGRpc3BhdGNoX2Rldih0eXBlLCBkZXRhaWwpIHsKICAgICAgICBkb2N1bWVudC5kaXNwYXRjaEV2ZW50KGN1c3RvbV9ldmVudCh0eXBlLCBPYmplY3QuYXNzaWduKHsgdmVyc2lvbjogJzMuMzEuMicgfSwgZGV0YWlsKSkpOwogICAgfQogICAgZnVuY3Rpb24gYXBwZW5kX2Rldih0YXJnZXQsIG5vZGUpIHsKICAgICAgICBkaXNwYXRjaF9kZXYoJ1N2ZWx0ZURPTUluc2VydCcsIHsgdGFyZ2V0LCBub2RlIH0pOwogICAgICAgIGFwcGVuZCh0YXJnZXQsIG5vZGUpOwogICAgfQogICAgZnVuY3Rpb24gaW5zZXJ0X2Rldih0YXJnZXQsIG5vZGUsIGFuY2hvcikgewogICAgICAgIGRpc3BhdGNoX2RldignU3ZlbHRlRE9NSW5zZXJ0JywgeyB0YXJnZXQsIG5vZGUsIGFuY2hvciB9KTsKICAgICAgICBpbnNlcnQodGFyZ2V0LCBub2RlLCBhbmNob3IpOwogICAgfQogICAgZnVuY3Rpb24gZGV0YWNoX2Rldihub2RlKSB7CiAgICAgICAgZGlzcGF0Y2hfZGV2KCdTdmVsdGVET01SZW1vdmUnLCB7IG5vZGUgfSk7CiAgICAgICAgZGV0YWNoKG5vZGUpOwogICAgfQogICAgZnVuY3Rpb24gbGlzdGVuX2Rldihub2RlLCBldmVudCwgaGFuZGxlciwgb3B0aW9ucywgaGFzX3ByZXZlbnRfZGVmYXVsdCwgaGFzX3N0b3BfcHJvcGFnYXRpb24pIHsKICAgICAgICBjb25zdCBtb2RpZmllcnMgPSBvcHRpb25zID09PSB0cnVlID8gWydjYXB0dXJlJ10gOiBvcHRpb25zID8gQXJyYXkuZnJvbShPYmplY3Qua2V5cyhvcHRpb25zKSkgOiBbXTsKICAgICAgICBpZiAoaGFzX3ByZXZlbnRfZGVmYXVsdCkKICAgICAgICAgICAgbW9kaWZpZXJzLnB1c2goJ3ByZXZlbnREZWZhdWx0Jyk7CiAgICAgICAgaWYgKGhhc19zdG9wX3Byb3BhZ2F0aW9uKQogICAgICAgICAgICBtb2RpZmllcnMucHVzaCgnc3RvcFByb3BhZ2F0aW9uJyk7CiAgICAgICAgZGlzcGF0Y2hfZGV2KCdTdmVsdGVET01BZGRFdmVudExpc3RlbmVyJywgeyBub2RlLCBldmVudCwgaGFuZGxlciwgbW9kaWZpZXJzIH0pOwogICAgICAgIGNvbnN0IGRpc3Bvc2UgPSBsaXN0ZW4obm9kZSwgZXZlbnQsIGhhbmRsZXIsIG9wdGlvbnMpOwogICAgICAgIHJldHVybiAoKSA9PiB7CiAgICAgICAgICAgIGRpc3BhdGNoX2RldignU3ZlbHRlRE9NUmVtb3ZlRXZlbnRMaXN0ZW5lcicsIHsgbm9kZSwgZXZlbnQsIGhhbmRsZXIsIG1vZGlmaWVycyB9KTsKICAgICAgICAgICAgZGlzcG9zZSgpOwogICAgICAgIH07CiAgICB9CiAgICBmdW5jdGlvbiBhdHRyX2Rldihub2RlLCBhdHRyaWJ1dGUsIHZhbHVlKSB7CiAgICAgICAgYXR0cihub2RlLCBhdHRyaWJ1dGUsIHZhbHVlKTsKICAgICAgICBpZiAodmFsdWUgPT0gbnVsbCkKICAgICAgICAgICAgZGlzcGF0Y2hfZGV2KCdTdmVsdGVET01SZW1vdmVBdHRyaWJ1dGUnLCB7IG5vZGUsIGF0dHJpYnV0ZSB9KTsKICAgICAgICBlbHNlCiAgICAgICAgICAgIGRpc3BhdGNoX2RldignU3ZlbHRlRE9NU2V0QXR0cmlidXRlJywgeyBub2RlLCBhdHRyaWJ1dGUsIHZhbHVlIH0pOwogICAgfQogICAgZnVuY3Rpb24gcHJvcF9kZXYobm9kZSwgcHJvcGVydHksIHZhbHVlKSB7CiAgICAgICAgbm9kZVtwcm9wZXJ0eV0gPSB2YWx1ZTsKICAgICAgICBkaXNwYXRjaF9kZXYoJ1N2ZWx0ZURPTVNldFByb3BlcnR5JywgeyBub2RlLCBwcm9wZXJ0eSwgdmFsdWUgfSk7CiAgICB9CiAgICBmdW5jdGlvbiBzZXRfZGF0YV9kZXYodGV4dCwgZGF0YSkgewogICAgICAgIGRhdGEgPSAnJyArIGRhdGE7CiAgICAgICAgaWYgKHRleHQud2hvbGVUZXh0ID09PSBkYXRhKQogICAgICAgICAgICByZXR1cm47CiAgICAgICAgZGlzcGF0Y2hfZGV2KCdTdmVsdGVET01TZXREYXRhJywgeyBub2RlOiB0ZXh0LCBkYXRhIH0pOwogICAgICAgIHRleHQuZGF0YSA9IGRhdGE7CiAgICB9CiAgICBmdW5jdGlvbiB2YWxpZGF0ZV9lYWNoX2FyZ3VtZW50KGFyZykgewogICAgICAgIGlmICh0eXBlb2YgYXJnICE9PSAnc3RyaW5nJyAmJiAhKGFyZyAmJiB0eXBlb2YgYXJnID09PSAnb2JqZWN0JyAmJiAnbGVuZ3RoJyBpbiBhcmcpKSB7CiAgICAgICAgICAgIGxldCBtc2cgPSAneyNlYWNofSBvbmx5IGl0ZXJhdGVzIG92ZXIgYXJyYXktbGlrZSBvYmplY3RzLic7CiAgICAgICAgICAgIGlmICh0eXBlb2YgU3ltYm9sID09PSAnZnVuY3Rpb24nICYmIGFyZyAmJiBTeW1ib2wuaXRlcmF0b3IgaW4gYXJnKSB7CiAgICAgICAgICAgICAgICBtc2cgKz0gJyBZb3UgY2FuIHVzZSBhIHNwcmVhZCB0byBjb252ZXJ0IHRoaXMgaXRlcmFibGUgaW50byBhbiBhcnJheS4nOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihtc2cpOwogICAgICAgIH0KICAgIH0KICAgIGZ1bmN0aW9uIHZhbGlkYXRlX3Nsb3RzKG5hbWUsIHNsb3QsIGtleXMpIHsKICAgICAgICBmb3IgKGNvbnN0IHNsb3Rfa2V5IG9mIE9iamVjdC5rZXlzKHNsb3QpKSB7CiAgICAgICAgICAgIGlmICghfmtleXMuaW5kZXhPZihzbG90X2tleSkpIHsKICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybihgPCR7bmFtZX0+IHJlY2VpdmVkIGFuIHVuZXhwZWN0ZWQgc2xvdCAiJHtzbG90X2tleX0iLmApOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQogICAgLyoqCiAgICAgKiBCYXNlIGNsYXNzIGZvciBTdmVsdGUgY29tcG9uZW50cyB3aXRoIHNvbWUgbWlub3IgZGV2LWVuaGFuY2VtZW50cy4gVXNlZCB3aGVuIGRldj10cnVlLgogICAgICovCiAgICBjbGFzcyBTdmVsdGVDb21wb25lbnREZXYgZXh0ZW5kcyBTdmVsdGVDb21wb25lbnQgewogICAgICAgIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHsKICAgICAgICAgICAgaWYgKCFvcHRpb25zIHx8ICghb3B0aW9ucy50YXJnZXQgJiYgIW9wdGlvbnMuJCRpbmxpbmUpKSB7CiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoIid0YXJnZXQnIGlzIGEgcmVxdWlyZWQgb3B0aW9uIik7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgc3VwZXIoKTsKICAgICAgICB9CiAgICAgICAgJGRlc3Ryb3koKSB7CiAgICAgICAgICAgIHN1cGVyLiRkZXN0cm95KCk7CiAgICAgICAgICAgIHRoaXMuJGRlc3Ryb3kgPSAoKSA9PiB7CiAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oJ0NvbXBvbmVudCB3YXMgYWxyZWFkeSBkZXN0cm95ZWQnKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1jb25zb2xlCiAgICAgICAgICAgIH07CiAgICAgICAgfQogICAgICAgICRjYXB0dXJlX3N0YXRlKCkgeyB9CiAgICAgICAgJGluamVjdF9zdGF0ZSgpIHsgfQogICAgfQoKICAgIGZ1bmN0aW9uIGlzT2JqZWN0KHZhbHVlKSB7CiAgICAgIGNvbnN0IHR5cGUgPSB0eXBlb2YgdmFsdWU7CiAgICAgIHJldHVybiB2YWx1ZSAhPSBudWxsICYmICh0eXBlID09ICdvYmplY3QnIHx8IHR5cGUgPT0gJ2Z1bmN0aW9uJyk7CiAgICB9CgogICAgZnVuY3Rpb24gZ2V0Q29sdW1uU2l6ZUNsYXNzKGlzWHMsIGNvbFdpZHRoLCBjb2xTaXplKSB7CiAgICAgIGlmIChjb2xTaXplID09PSB0cnVlIHx8IGNvbFNpemUgPT09ICcnKSB7CiAgICAgICAgcmV0dXJuIGlzWHMgPyAnY29sJyA6IGBjb2wtJHtjb2xXaWR0aH1gOwogICAgICB9IGVsc2UgaWYgKGNvbFNpemUgPT09ICdhdXRvJykgewogICAgICAgIHJldHVybiBpc1hzID8gJ2NvbC1hdXRvJyA6IGBjb2wtJHtjb2xXaWR0aH0tYXV0b2A7CiAgICAgIH0KCiAgICAgIHJldHVybiBpc1hzID8gYGNvbC0ke2NvbFNpemV9YCA6IGBjb2wtJHtjb2xXaWR0aH0tJHtjb2xTaXplfWA7CiAgICB9CgogICAgZnVuY3Rpb24gdG9DbGFzc05hbWUodmFsdWUpIHsKICAgICAgbGV0IHJlc3VsdCA9ICcnOwoKICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIHZhbHVlID09PSAnbnVtYmVyJykgewogICAgICAgIHJlc3VsdCArPSB2YWx1ZTsKICAgICAgfSBlbHNlIGlmICh0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnKSB7CiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7CiAgICAgICAgICByZXN1bHQgPSB2YWx1ZS5tYXAodG9DbGFzc05hbWUpLmZpbHRlcihCb29sZWFuKS5qb2luKCcgJyk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGZvciAobGV0IGtleSBpbiB2YWx1ZSkgewogICAgICAgICAgICBpZiAodmFsdWVba2V5XSkgewogICAgICAgICAgICAgIHJlc3VsdCAmJiAocmVzdWx0ICs9ICcgJyk7CiAgICAgICAgICAgICAgcmVzdWx0ICs9IGtleTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIHJlc3VsdDsKICAgIH0KCiAgICBmdW5jdGlvbiBjbGFzc25hbWVzKC4uLmFyZ3MpIHsKICAgICAgcmV0dXJuIGFyZ3MubWFwKHRvQ2xhc3NOYW1lKS5maWx0ZXIoQm9vbGVhbikuam9pbignICcpOwogICAgfQoKICAgIC8qIG5vZGVfbW9kdWxlcy9zdmVsdGVzdHJhcC9zcmMvQnV0dG9uLnN2ZWx0ZSBnZW5lcmF0ZWQgYnkgU3ZlbHRlIHYzLjMxLjIgKi8KICAgIGNvbnN0IGZpbGUgPSAibm9kZV9tb2R1bGVzL3N2ZWx0ZXN0cmFwL3NyYy9CdXR0b24uc3ZlbHRlIjsKCiAgICAvLyAoNDg6MCkgezplbHNlfQogICAgZnVuY3Rpb24gY3JlYXRlX2Vsc2VfYmxvY2tfMShjdHgpIHsKICAgIAlsZXQgYnV0dG9uOwogICAgCWxldCBidXR0b25fYXJpYV9sYWJlbF92YWx1ZTsKICAgIAlsZXQgY3VycmVudDsKICAgIAlsZXQgbW91bnRlZDsKICAgIAlsZXQgZGlzcG9zZTsKICAgIAljb25zdCBkZWZhdWx0X3Nsb3RfdGVtcGxhdGUgPSAvKiNzbG90cyovIGN0eFsxN10uZGVmYXVsdDsKICAgIAljb25zdCBkZWZhdWx0X3Nsb3QgPSBjcmVhdGVfc2xvdChkZWZhdWx0X3Nsb3RfdGVtcGxhdGUsIGN0eCwgLyokJHNjb3BlKi8gY3R4WzE2XSwgbnVsbCk7CiAgICAJY29uc3QgZGVmYXVsdF9zbG90X29yX2ZhbGxiYWNrID0gZGVmYXVsdF9zbG90IHx8IGZhbGxiYWNrX2Jsb2NrKGN0eCk7CgogICAgCWxldCBidXR0b25fbGV2ZWxzID0gWwogICAgCQkvKiQkcmVzdFByb3BzKi8gY3R4WzldLAogICAgCQl7IGNsYXNzOiAvKmNsYXNzZXMqLyBjdHhbN10gfSwKICAgIAkJeyBkaXNhYmxlZDogLypkaXNhYmxlZCovIGN0eFsyXSB9LAogICAgCQl7IHZhbHVlOiAvKnZhbHVlKi8gY3R4WzVdIH0sCiAgICAJCXsKICAgIAkJCSJhcmlhLWxhYmVsIjogYnV0dG9uX2FyaWFfbGFiZWxfdmFsdWUgPSAvKmFyaWFMYWJlbCovIGN0eFs2XSB8fCAvKmRlZmF1bHRBcmlhTGFiZWwqLyBjdHhbOF0KICAgIAkJfSwKICAgIAkJeyBzdHlsZTogLypzdHlsZSovIGN0eFs0XSB9CiAgICAJXTsKCiAgICAJbGV0IGJ1dHRvbl9kYXRhID0ge307CgogICAgCWZvciAobGV0IGkgPSAwOyBpIDwgYnV0dG9uX2xldmVscy5sZW5ndGg7IGkgKz0gMSkgewogICAgCQlidXR0b25fZGF0YSA9IGFzc2lnbihidXR0b25fZGF0YSwgYnV0dG9uX2xldmVsc1tpXSk7CiAgICAJfQoKICAgIAljb25zdCBibG9ja18xID0gewogICAgCQljOiBmdW5jdGlvbiBjcmVhdGUoKSB7CiAgICAJCQlidXR0b24gPSBlbGVtZW50KCJidXR0b24iKTsKICAgIAkJCWlmIChkZWZhdWx0X3Nsb3Rfb3JfZmFsbGJhY2spIGRlZmF1bHRfc2xvdF9vcl9mYWxsYmFjay5jKCk7CiAgICAJCQlzZXRfYXR0cmlidXRlcyhidXR0b24sIGJ1dHRvbl9kYXRhKTsKICAgIAkJCWFkZF9sb2NhdGlvbihidXR0b24sIGZpbGUsIDQ4LCAyLCA5ODUpOwogICAgCQl9LAogICAgCQltOiBmdW5jdGlvbiBtb3VudCh0YXJnZXQsIGFuY2hvcikgewogICAgCQkJaW5zZXJ0X2Rldih0YXJnZXQsIGJ1dHRvbiwgYW5jaG9yKTsKCiAgICAJCQlpZiAoZGVmYXVsdF9zbG90X29yX2ZhbGxiYWNrKSB7CiAgICAJCQkJZGVmYXVsdF9zbG90X29yX2ZhbGxiYWNrLm0oYnV0dG9uLCBudWxsKTsKICAgIAkJCX0KCiAgICAJCQljdXJyZW50ID0gdHJ1ZTsKCiAgICAJCQlpZiAoIW1vdW50ZWQpIHsKICAgIAkJCQlkaXNwb3NlID0gbGlzdGVuX2RldihidXR0b24sICJjbGljayIsIC8qY2xpY2tfaGFuZGxlcl8xKi8gY3R4WzE5XSwgZmFsc2UsIGZhbHNlLCBmYWxzZSk7CiAgICAJCQkJbW91bnRlZCA9IHRydWU7CiAgICAJCQl9CiAgICAJCX0sCiAgICAJCXA6IGZ1bmN0aW9uIHVwZGF0ZShjdHgsIGRpcnR5KSB7CiAgICAJCQlpZiAoZGVmYXVsdF9zbG90KSB7CiAgICAJCQkJaWYgKGRlZmF1bHRfc2xvdC5wICYmIGRpcnR5ICYgLyokJHNjb3BlKi8gNjU1MzYpIHsKICAgIAkJCQkJdXBkYXRlX3Nsb3QoZGVmYXVsdF9zbG90LCBkZWZhdWx0X3Nsb3RfdGVtcGxhdGUsIGN0eCwgLyokJHNjb3BlKi8gY3R4WzE2XSwgZGlydHksIG51bGwsIG51bGwpOwogICAgCQkJCX0KICAgIAkJCX0gZWxzZSB7CiAgICAJCQkJaWYgKGRlZmF1bHRfc2xvdF9vcl9mYWxsYmFjayAmJiBkZWZhdWx0X3Nsb3Rfb3JfZmFsbGJhY2sucCAmJiBkaXJ0eSAmIC8qY2xvc2UsIGNoaWxkcmVuLCAkJHNjb3BlKi8gNjU1MzkpIHsKICAgIAkJCQkJZGVmYXVsdF9zbG90X29yX2ZhbGxiYWNrLnAoY3R4LCBkaXJ0eSk7CiAgICAJCQkJfQogICAgCQkJfQoKICAgIAkJCXNldF9hdHRyaWJ1dGVzKGJ1dHRvbiwgYnV0dG9uX2RhdGEgPSBnZXRfc3ByZWFkX3VwZGF0ZShidXR0b25fbGV2ZWxzLCBbCiAgICAJCQkJZGlydHkgJiAvKiQkcmVzdFByb3BzKi8gNTEyICYmIC8qJCRyZXN0UHJvcHMqLyBjdHhbOV0sCiAgICAJCQkJKCFjdXJyZW50IHx8IGRpcnR5ICYgLypjbGFzc2VzKi8gMTI4KSAmJiB7IGNsYXNzOiAvKmNsYXNzZXMqLyBjdHhbN10gfSwKICAgIAkJCQkoIWN1cnJlbnQgfHwgZGlydHkgJiAvKmRpc2FibGVkKi8gNCkgJiYgeyBkaXNhYmxlZDogLypkaXNhYmxlZCovIGN0eFsyXSB9LAogICAgCQkJCSghY3VycmVudCB8fCBkaXJ0eSAmIC8qdmFsdWUqLyAzMikgJiYgeyB2YWx1ZTogLyp2YWx1ZSovIGN0eFs1XSB9LAogICAgCQkJCSghY3VycmVudCB8fCBkaXJ0eSAmIC8qYXJpYUxhYmVsLCBkZWZhdWx0QXJpYUxhYmVsKi8gMzIwICYmIGJ1dHRvbl9hcmlhX2xhYmVsX3ZhbHVlICE9PSAoYnV0dG9uX2FyaWFfbGFiZWxfdmFsdWUgPSAvKmFyaWFMYWJlbCovIGN0eFs2XSB8fCAvKmRlZmF1bHRBcmlhTGFiZWwqLyBjdHhbOF0pKSAmJiB7ICJhcmlhLWxhYmVsIjogYnV0dG9uX2FyaWFfbGFiZWxfdmFsdWUgfSwKICAgIAkJCQkoIWN1cnJlbnQgfHwgZGlydHkgJiAvKnN0eWxlKi8gMTYpICYmIHsgc3R5bGU6IC8qc3R5bGUqLyBjdHhbNF0gfQogICAgCQkJXSkpOwogICAgCQl9LAogICAgCQlpOiBmdW5jdGlvbiBpbnRybyhsb2NhbCkgewogICAgCQkJaWYgKGN1cnJlbnQpIHJldHVybjsKICAgIAkJCXRyYW5zaXRpb25faW4oZGVmYXVsdF9zbG90X29yX2ZhbGxiYWNrLCBsb2NhbCk7CiAgICAJCQljdXJyZW50ID0gdHJ1ZTsKICAgIAkJfSwKICAgIAkJbzogZnVuY3Rpb24gb3V0cm8obG9jYWwpIHsKICAgIAkJCXRyYW5zaXRpb25fb3V0KGRlZmF1bHRfc2xvdF9vcl9mYWxsYmFjaywgbG9jYWwpOwogICAgCQkJY3VycmVudCA9IGZhbHNlOwogICAgCQl9LAogICAgCQlkOiBmdW5jdGlvbiBkZXN0cm95KGRldGFjaGluZykgewogICAgCQkJaWYgKGRldGFjaGluZykgZGV0YWNoX2RldihidXR0b24pOwogICAgCQkJaWYgKGRlZmF1bHRfc2xvdF9vcl9mYWxsYmFjaykgZGVmYXVsdF9zbG90X29yX2ZhbGxiYWNrLmQoZGV0YWNoaW5nKTsKICAgIAkJCW1vdW50ZWQgPSBmYWxzZTsKICAgIAkJCWRpc3Bvc2UoKTsKICAgIAkJfQogICAgCX07CgogICAgCWRpc3BhdGNoX2RldigiU3ZlbHRlUmVnaXN0ZXJCbG9jayIsIHsKICAgIAkJYmxvY2s6IGJsb2NrXzEsCiAgICAJCWlkOiBjcmVhdGVfZWxzZV9ibG9ja18xLm5hbWUsCiAgICAJCXR5cGU6ICJlbHNlIiwKICAgIAkJc291cmNlOiAiKDQ4OjApIHs6ZWxzZX0iLAogICAgCQljdHgKICAgIAl9KTsKCiAgICAJcmV0dXJuIGJsb2NrXzE7CiAgICB9CgogICAgLy8gKDMzOjApIHsjaWYgaHJlZn0KICAgIGZ1bmN0aW9uIGNyZWF0ZV9pZl9ibG9jayhjdHgpIHsKICAgIAlsZXQgYTsKICAgIAlsZXQgY3VycmVudF9ibG9ja190eXBlX2luZGV4OwogICAgCWxldCBpZl9ibG9jazsKICAgIAlsZXQgYV9hcmlhX2xhYmVsX3ZhbHVlOwogICAgCWxldCBjdXJyZW50OwogICAgCWxldCBtb3VudGVkOwogICAgCWxldCBkaXNwb3NlOwogICAgCWNvbnN0IGlmX2Jsb2NrX2NyZWF0b3JzID0gW2NyZWF0ZV9pZl9ibG9ja18xLCBjcmVhdGVfZWxzZV9ibG9ja107CiAgICAJY29uc3QgaWZfYmxvY2tzID0gW107CgogICAgCWZ1bmN0aW9uIHNlbGVjdF9ibG9ja190eXBlXzEoY3R4LCBkaXJ0eSkgewogICAgCQlpZiAoLypjaGlsZHJlbiovIGN0eFswXSkgcmV0dXJuIDA7CiAgICAJCXJldHVybiAxOwogICAgCX0KCiAgICAJY3VycmVudF9ibG9ja190eXBlX2luZGV4ID0gc2VsZWN0X2Jsb2NrX3R5cGVfMShjdHgpOwogICAgCWlmX2Jsb2NrID0gaWZfYmxvY2tzW2N1cnJlbnRfYmxvY2tfdHlwZV9pbmRleF0gPSBpZl9ibG9ja19jcmVhdG9yc1tjdXJyZW50X2Jsb2NrX3R5cGVfaW5kZXhdKGN0eCk7CgogICAgCWxldCBhX2xldmVscyA9IFsKICAgIAkJLyokJHJlc3RQcm9wcyovIGN0eFs5XSwKICAgIAkJeyBjbGFzczogLypjbGFzc2VzKi8gY3R4WzddIH0sCiAgICAJCXsgZGlzYWJsZWQ6IC8qZGlzYWJsZWQqLyBjdHhbMl0gfSwKICAgIAkJeyBocmVmOiAvKmhyZWYqLyBjdHhbM10gfSwKICAgIAkJewogICAgCQkJImFyaWEtbGFiZWwiOiBhX2FyaWFfbGFiZWxfdmFsdWUgPSAvKmFyaWFMYWJlbCovIGN0eFs2XSB8fCAvKmRlZmF1bHRBcmlhTGFiZWwqLyBjdHhbOF0KICAgIAkJfSwKICAgIAkJeyBzdHlsZTogLypzdHlsZSovIGN0eFs0XSB9CiAgICAJXTsKCiAgICAJbGV0IGFfZGF0YSA9IHt9OwoKICAgIAlmb3IgKGxldCBpID0gMDsgaSA8IGFfbGV2ZWxzLmxlbmd0aDsgaSArPSAxKSB7CiAgICAJCWFfZGF0YSA9IGFzc2lnbihhX2RhdGEsIGFfbGV2ZWxzW2ldKTsKICAgIAl9CgogICAgCWNvbnN0IGJsb2NrXzEgPSB7CiAgICAJCWM6IGZ1bmN0aW9uIGNyZWF0ZSgpIHsKICAgIAkJCWEgPSBlbGVtZW50KCJhIik7CiAgICAJCQlpZl9ibG9jay5jKCk7CiAgICAJCQlzZXRfYXR0cmlidXRlcyhhLCBhX2RhdGEpOwogICAgCQkJYWRkX2xvY2F0aW9uKGEsIGZpbGUsIDMzLCAyLCA3NTIpOwogICAgCQl9LAogICAgCQltOiBmdW5jdGlvbiBtb3VudCh0YXJnZXQsIGFuY2hvcikgewogICAgCQkJaW5zZXJ0X2Rldih0YXJnZXQsIGEsIGFuY2hvcik7CiAgICAJCQlpZl9ibG9ja3NbY3VycmVudF9ibG9ja190eXBlX2luZGV4XS5tKGEsIG51bGwpOwogICAgCQkJY3VycmVudCA9IHRydWU7CgogICAgCQkJaWYgKCFtb3VudGVkKSB7CiAgICAJCQkJZGlzcG9zZSA9IGxpc3Rlbl9kZXYoYSwgImNsaWNrIiwgLypjbGlja19oYW5kbGVyKi8gY3R4WzE4XSwgZmFsc2UsIGZhbHNlLCBmYWxzZSk7CiAgICAJCQkJbW91bnRlZCA9IHRydWU7CiAgICAJCQl9CiAgICAJCX0sCiAgICAJCXA6IGZ1bmN0aW9uIHVwZGF0ZShjdHgsIGRpcnR5KSB7CiAgICAJCQlsZXQgcHJldmlvdXNfYmxvY2tfaW5kZXggPSBjdXJyZW50X2Jsb2NrX3R5cGVfaW5kZXg7CiAgICAJCQljdXJyZW50X2Jsb2NrX3R5cGVfaW5kZXggPSBzZWxlY3RfYmxvY2tfdHlwZV8xKGN0eCk7CgogICAgCQkJaWYgKGN1cnJlbnRfYmxvY2tfdHlwZV9pbmRleCA9PT0gcHJldmlvdXNfYmxvY2tfaW5kZXgpIHsKICAgIAkJCQlpZl9ibG9ja3NbY3VycmVudF9ibG9ja190eXBlX2luZGV4XS5wKGN0eCwgZGlydHkpOwogICAgCQkJfSBlbHNlIHsKICAgIAkJCQlncm91cF9vdXRyb3MoKTsKCiAgICAJCQkJdHJhbnNpdGlvbl9vdXQoaWZfYmxvY2tzW3ByZXZpb3VzX2Jsb2NrX2luZGV4XSwgMSwgMSwgKCkgPT4gewogICAgCQkJCQlpZl9ibG9ja3NbcHJldmlvdXNfYmxvY2tfaW5kZXhdID0gbnVsbDsKICAgIAkJCQl9KTsKCiAgICAJCQkJY2hlY2tfb3V0cm9zKCk7CiAgICAJCQkJaWZfYmxvY2sgPSBpZl9ibG9ja3NbY3VycmVudF9ibG9ja190eXBlX2luZGV4XTsKCiAgICAJCQkJaWYgKCFpZl9ibG9jaykgewogICAgCQkJCQlpZl9ibG9jayA9IGlmX2Jsb2Nrc1tjdXJyZW50X2Jsb2NrX3R5cGVfaW5kZXhdID0gaWZfYmxvY2tfY3JlYXRvcnNbY3VycmVudF9ibG9ja190eXBlX2luZGV4XShjdHgpOwogICAgCQkJCQlpZl9ibG9jay5jKCk7CiAgICAJCQkJfSBlbHNlIHsKICAgIAkJCQkJaWZfYmxvY2sucChjdHgsIGRpcnR5KTsKICAgIAkJCQl9CgogICAgCQkJCXRyYW5zaXRpb25faW4oaWZfYmxvY2ssIDEpOwogICAgCQkJCWlmX2Jsb2NrLm0oYSwgbnVsbCk7CiAgICAJCQl9CgogICAgCQkJc2V0X2F0dHJpYnV0ZXMoYSwgYV9kYXRhID0gZ2V0X3NwcmVhZF91cGRhdGUoYV9sZXZlbHMsIFsKICAgIAkJCQlkaXJ0eSAmIC8qJCRyZXN0UHJvcHMqLyA1MTIgJiYgLyokJHJlc3RQcm9wcyovIGN0eFs5XSwKICAgIAkJCQkoIWN1cnJlbnQgfHwgZGlydHkgJiAvKmNsYXNzZXMqLyAxMjgpICYmIHsgY2xhc3M6IC8qY2xhc3NlcyovIGN0eFs3XSB9LAogICAgCQkJCSghY3VycmVudCB8fCBkaXJ0eSAmIC8qZGlzYWJsZWQqLyA0KSAmJiB7IGRpc2FibGVkOiAvKmRpc2FibGVkKi8gY3R4WzJdIH0sCiAgICAJCQkJKCFjdXJyZW50IHx8IGRpcnR5ICYgLypocmVmKi8gOCkgJiYgeyBocmVmOiAvKmhyZWYqLyBjdHhbM10gfSwKICAgIAkJCQkoIWN1cnJlbnQgfHwgZGlydHkgJiAvKmFyaWFMYWJlbCwgZGVmYXVsdEFyaWFMYWJlbCovIDMyMCAmJiBhX2FyaWFfbGFiZWxfdmFsdWUgIT09IChhX2FyaWFfbGFiZWxfdmFsdWUgPSAvKmFyaWFMYWJlbCovIGN0eFs2XSB8fCAvKmRlZmF1bHRBcmlhTGFiZWwqLyBjdHhbOF0pKSAmJiB7ICJhcmlhLWxhYmVsIjogYV9hcmlhX2xhYmVsX3ZhbHVlIH0sCiAgICAJCQkJKCFjdXJyZW50IHx8IGRpcnR5ICYgLypzdHlsZSovIDE2KSAmJiB7IHN0eWxlOiAvKnN0eWxlKi8gY3R4WzRdIH0KICAgIAkJCV0pKTsKICAgIAkJfSwKICAgIAkJaTogZnVuY3Rpb24gaW50cm8obG9jYWwpIHsKICAgIAkJCWlmIChjdXJyZW50KSByZXR1cm47CiAgICAJCQl0cmFuc2l0aW9uX2luKGlmX2Jsb2NrKTsKICAgIAkJCWN1cnJlbnQgPSB0cnVlOwogICAgCQl9LAogICAgCQlvOiBmdW5jdGlvbiBvdXRybyhsb2NhbCkgewogICAgCQkJdHJhbnNpdGlvbl9vdXQoaWZfYmxvY2spOwogICAgCQkJY3VycmVudCA9IGZhbHNlOwogICAgCQl9LAogICAgCQlkOiBmdW5jdGlvbiBkZXN0cm95KGRldGFjaGluZykgewogICAgCQkJaWYgKGRldGFjaGluZykgZGV0YWNoX2RldihhKTsKICAgIAkJCWlmX2Jsb2Nrc1tjdXJyZW50X2Jsb2NrX3R5cGVfaW5kZXhdLmQoKTsKICAgIAkJCW1vdW50ZWQgPSBmYWxzZTsKICAgIAkJCWRpc3Bvc2UoKTsKICAgIAkJfQogICAgCX07CgogICAgCWRpc3BhdGNoX2RldigiU3ZlbHRlUmVnaXN0ZXJCbG9jayIsIHsKICAgIAkJYmxvY2s6IGJsb2NrXzEsCiAgICAJCWlkOiBjcmVhdGVfaWZfYmxvY2submFtZSwKICAgIAkJdHlwZTogImlmIiwKICAgIAkJc291cmNlOiAiKDMzOjApIHsjaWYgaHJlZn0iLAogICAgCQljdHgKICAgIAl9KTsKCiAgICAJcmV0dXJuIGJsb2NrXzE7CiAgICB9CgogICAgLy8gKDYyOjYpIHs6ZWxzZX0KICAgIGZ1bmN0aW9uIGNyZWF0ZV9lbHNlX2Jsb2NrXzIoY3R4KSB7CiAgICAJbGV0IGN1cnJlbnQ7CiAgICAJY29uc3QgZGVmYXVsdF9zbG90X3RlbXBsYXRlID0gLyojc2xvdHMqLyBjdHhbMTddLmRlZmF1bHQ7CiAgICAJY29uc3QgZGVmYXVsdF9zbG90ID0gY3JlYXRlX3Nsb3QoZGVmYXVsdF9zbG90X3RlbXBsYXRlLCBjdHgsIC8qJCRzY29wZSovIGN0eFsxNl0sIG51bGwpOwoKICAgIAljb25zdCBibG9ja18xID0gewogICAgCQljOiBmdW5jdGlvbiBjcmVhdGUoKSB7CiAgICAJCQlpZiAoZGVmYXVsdF9zbG90KSBkZWZhdWx0X3Nsb3QuYygpOwogICAgCQl9LAogICAgCQltOiBmdW5jdGlvbiBtb3VudCh0YXJnZXQsIGFuY2hvcikgewogICAgCQkJaWYgKGRlZmF1bHRfc2xvdCkgewogICAgCQkJCWRlZmF1bHRfc2xvdC5tKHRhcmdldCwgYW5jaG9yKTsKICAgIAkJCX0KCiAgICAJCQljdXJyZW50ID0gdHJ1ZTsKICAgIAkJfSwKICAgIAkJcDogZnVuY3Rpb24gdXBkYXRlKGN0eCwgZGlydHkpIHsKICAgIAkJCWlmIChkZWZhdWx0X3Nsb3QpIHsKICAgIAkJCQlpZiAoZGVmYXVsdF9zbG90LnAgJiYgZGlydHkgJiAvKiQkc2NvcGUqLyA2NTUzNikgewogICAgCQkJCQl1cGRhdGVfc2xvdChkZWZhdWx0X3Nsb3QsIGRlZmF1bHRfc2xvdF90ZW1wbGF0ZSwgY3R4LCAvKiQkc2NvcGUqLyBjdHhbMTZdLCBkaXJ0eSwgbnVsbCwgbnVsbCk7CiAgICAJCQkJfQogICAgCQkJfQogICAgCQl9LAogICAgCQlpOiBmdW5jdGlvbiBpbnRybyhsb2NhbCkgewogICAgCQkJaWYgKGN1cnJlbnQpIHJldHVybjsKICAgIAkJCXRyYW5zaXRpb25faW4oZGVmYXVsdF9zbG90LCBsb2NhbCk7CiAgICAJCQljdXJyZW50ID0gdHJ1ZTsKICAgIAkJfSwKICAgIAkJbzogZnVuY3Rpb24gb3V0cm8obG9jYWwpIHsKICAgIAkJCXRyYW5zaXRpb25fb3V0KGRlZmF1bHRfc2xvdCwgbG9jYWwpOwogICAgCQkJY3VycmVudCA9IGZhbHNlOwogICAgCQl9LAogICAgCQlkOiBmdW5jdGlvbiBkZXN0cm95KGRldGFjaGluZykgewogICAgCQkJaWYgKGRlZmF1bHRfc2xvdCkgZGVmYXVsdF9zbG90LmQoZGV0YWNoaW5nKTsKICAgIAkJfQogICAgCX07CgogICAgCWRpc3BhdGNoX2RldigiU3ZlbHRlUmVnaXN0ZXJCbG9jayIsIHsKICAgIAkJYmxvY2s6IGJsb2NrXzEsCiAgICAJCWlkOiBjcmVhdGVfZWxzZV9ibG9ja18yLm5hbWUsCiAgICAJCXR5cGU6ICJlbHNlIiwKICAgIAkJc291cmNlOiAiKDYyOjYpIHs6ZWxzZX0iLAogICAgCQljdHgKICAgIAl9KTsKCiAgICAJcmV0dXJuIGJsb2NrXzE7CiAgICB9CgogICAgLy8gKDYwOjI1KSAKICAgIGZ1bmN0aW9uIGNyZWF0ZV9pZl9ibG9ja18zKGN0eCkgewogICAgCWxldCB0OwoKICAgIAljb25zdCBibG9ja18xID0gewogICAgCQljOiBmdW5jdGlvbiBjcmVhdGUoKSB7CiAgICAJCQl0ID0gdGV4dCgvKmNoaWxkcmVuKi8gY3R4WzBdKTsKICAgIAkJfSwKICAgIAkJbTogZnVuY3Rpb24gbW91bnQodGFyZ2V0LCBhbmNob3IpIHsKICAgIAkJCWluc2VydF9kZXYodGFyZ2V0LCB0LCBhbmNob3IpOwogICAgCQl9LAogICAgCQlwOiBmdW5jdGlvbiB1cGRhdGUoY3R4LCBkaXJ0eSkgewogICAgCQkJaWYgKGRpcnR5ICYgLypjaGlsZHJlbiovIDEpIHNldF9kYXRhX2Rldih0LCAvKmNoaWxkcmVuKi8gY3R4WzBdKTsKICAgIAkJfSwKICAgIAkJaTogbm9vcCwKICAgIAkJbzogbm9vcCwKICAgIAkJZDogZnVuY3Rpb24gZGVzdHJveShkZXRhY2hpbmcpIHsKICAgIAkJCWlmIChkZXRhY2hpbmcpIGRldGFjaF9kZXYodCk7CiAgICAJCX0KICAgIAl9OwoKICAgIAlkaXNwYXRjaF9kZXYoIlN2ZWx0ZVJlZ2lzdGVyQmxvY2siLCB7CiAgICAJCWJsb2NrOiBibG9ja18xLAogICAgCQlpZDogY3JlYXRlX2lmX2Jsb2NrXzMubmFtZSwKICAgIAkJdHlwZTogImlmIiwKICAgIAkJc291cmNlOiAiKDYwOjI1KSAiLAogICAgCQljdHgKICAgIAl9KTsKCiAgICAJcmV0dXJuIGJsb2NrXzE7CiAgICB9CgogICAgLy8gKDU4OjYpIHsjaWYgY2xvc2V9CiAgICBmdW5jdGlvbiBjcmVhdGVfaWZfYmxvY2tfMihjdHgpIHsKICAgIAlsZXQgc3BhbjsKCiAgICAJY29uc3QgYmxvY2tfMSA9IHsKICAgIAkJYzogZnVuY3Rpb24gY3JlYXRlKCkgewogICAgCQkJc3BhbiA9IGVsZW1lbnQoInNwYW4iKTsKICAgIAkJCXNwYW4udGV4dENvbnRlbnQgPSAiw5ciOwogICAgCQkJYXR0cl9kZXYoc3BhbiwgImFyaWEtaGlkZGVuIiwgInRydWUiKTsKICAgIAkJCWFkZF9sb2NhdGlvbihzcGFuLCBmaWxlLCA1OCwgOCwgMTE3MSk7CiAgICAJCX0sCiAgICAJCW06IGZ1bmN0aW9uIG1vdW50KHRhcmdldCwgYW5jaG9yKSB7CiAgICAJCQlpbnNlcnRfZGV2KHRhcmdldCwgc3BhbiwgYW5jaG9yKTsKICAgIAkJfSwKICAgIAkJcDogbm9vcCwKICAgIAkJaTogbm9vcCwKICAgIAkJbzogbm9vcCwKICAgIAkJZDogZnVuY3Rpb24gZGVzdHJveShkZXRhY2hpbmcpIHsKICAgIAkJCWlmIChkZXRhY2hpbmcpIGRldGFjaF9kZXYoc3Bhbik7CiAgICAJCX0KICAgIAl9OwoKICAgIAlkaXNwYXRjaF9kZXYoIlN2ZWx0ZVJlZ2lzdGVyQmxvY2siLCB7CiAgICAJCWJsb2NrOiBibG9ja18xLAogICAgCQlpZDogY3JlYXRlX2lmX2Jsb2NrXzIubmFtZSwKICAgIAkJdHlwZTogImlmIiwKICAgIAkJc291cmNlOiAiKDU4OjYpIHsjaWYgY2xvc2V9IiwKICAgIAkJY3R4CiAgICAJfSk7CgogICAgCXJldHVybiBibG9ja18xOwogICAgfQoKICAgIC8vICg1NzoxMCkgICAgICAgIAogICAgZnVuY3Rpb24gZmFsbGJhY2tfYmxvY2soY3R4KSB7CiAgICAJbGV0IGN1cnJlbnRfYmxvY2tfdHlwZV9pbmRleDsKICAgIAlsZXQgaWZfYmxvY2s7CiAgICAJbGV0IGlmX2Jsb2NrX2FuY2hvcjsKICAgIAlsZXQgY3VycmVudDsKICAgIAljb25zdCBpZl9ibG9ja19jcmVhdG9ycyA9IFtjcmVhdGVfaWZfYmxvY2tfMiwgY3JlYXRlX2lmX2Jsb2NrXzMsIGNyZWF0ZV9lbHNlX2Jsb2NrXzJdOwogICAgCWNvbnN0IGlmX2Jsb2NrcyA9IFtdOwoKICAgIAlmdW5jdGlvbiBzZWxlY3RfYmxvY2tfdHlwZV8yKGN0eCwgZGlydHkpIHsKICAgIAkJaWYgKC8qY2xvc2UqLyBjdHhbMV0pIHJldHVybiAwOwogICAgCQlpZiAoLypjaGlsZHJlbiovIGN0eFswXSkgcmV0dXJuIDE7CiAgICAJCXJldHVybiAyOwogICAgCX0KCiAgICAJY3VycmVudF9ibG9ja190eXBlX2luZGV4ID0gc2VsZWN0X2Jsb2NrX3R5cGVfMihjdHgpOwogICAgCWlmX2Jsb2NrID0gaWZfYmxvY2tzW2N1cnJlbnRfYmxvY2tfdHlwZV9pbmRleF0gPSBpZl9ibG9ja19jcmVhdG9yc1tjdXJyZW50X2Jsb2NrX3R5cGVfaW5kZXhdKGN0eCk7CgogICAgCWNvbnN0IGJsb2NrXzEgPSB7CiAgICAJCWM6IGZ1bmN0aW9uIGNyZWF0ZSgpIHsKICAgIAkJCWlmX2Jsb2NrLmMoKTsKICAgIAkJCWlmX2Jsb2NrX2FuY2hvciA9IGVtcHR5KCk7CiAgICAJCX0sCiAgICAJCW06IGZ1bmN0aW9uIG1vdW50KHRhcmdldCwgYW5jaG9yKSB7CiAgICAJCQlpZl9ibG9ja3NbY3VycmVudF9ibG9ja190eXBlX2luZGV4XS5tKHRhcmdldCwgYW5jaG9yKTsKICAgIAkJCWluc2VydF9kZXYodGFyZ2V0LCBpZl9ibG9ja19hbmNob3IsIGFuY2hvcik7CiAgICAJCQljdXJyZW50ID0gdHJ1ZTsKICAgIAkJfSwKICAgIAkJcDogZnVuY3Rpb24gdXBkYXRlKGN0eCwgZGlydHkpIHsKICAgIAkJCWxldCBwcmV2aW91c19ibG9ja19pbmRleCA9IGN1cnJlbnRfYmxvY2tfdHlwZV9pbmRleDsKICAgIAkJCWN1cnJlbnRfYmxvY2tfdHlwZV9pbmRleCA9IHNlbGVjdF9ibG9ja190eXBlXzIoY3R4KTsKCiAgICAJCQlpZiAoY3VycmVudF9ibG9ja190eXBlX2luZGV4ID09PSBwcmV2aW91c19ibG9ja19pbmRleCkgewogICAgCQkJCWlmX2Jsb2Nrc1tjdXJyZW50X2Jsb2NrX3R5cGVfaW5kZXhdLnAoY3R4LCBkaXJ0eSk7CiAgICAJCQl9IGVsc2UgewogICAgCQkJCWdyb3VwX291dHJvcygpOwoKICAgIAkJCQl0cmFuc2l0aW9uX291dChpZl9ibG9ja3NbcHJldmlvdXNfYmxvY2tfaW5kZXhdLCAxLCAxLCAoKSA9PiB7CiAgICAJCQkJCWlmX2Jsb2Nrc1twcmV2aW91c19ibG9ja19pbmRleF0gPSBudWxsOwogICAgCQkJCX0pOwoKICAgIAkJCQljaGVja19vdXRyb3MoKTsKICAgIAkJCQlpZl9ibG9jayA9IGlmX2Jsb2Nrc1tjdXJyZW50X2Jsb2NrX3R5cGVfaW5kZXhdOwoKICAgIAkJCQlpZiAoIWlmX2Jsb2NrKSB7CiAgICAJCQkJCWlmX2Jsb2NrID0gaWZfYmxvY2tzW2N1cnJlbnRfYmxvY2tfdHlwZV9pbmRleF0gPSBpZl9ibG9ja19jcmVhdG9yc1tjdXJyZW50X2Jsb2NrX3R5cGVfaW5kZXhdKGN0eCk7CiAgICAJCQkJCWlmX2Jsb2NrLmMoKTsKICAgIAkJCQl9IGVsc2UgewogICAgCQkJCQlpZl9ibG9jay5wKGN0eCwgZGlydHkpOwogICAgCQkJCX0KCiAgICAJCQkJdHJhbnNpdGlvbl9pbihpZl9ibG9jaywgMSk7CiAgICAJCQkJaWZfYmxvY2subShpZl9ibG9ja19hbmNob3IucGFyZW50Tm9kZSwgaWZfYmxvY2tfYW5jaG9yKTsKICAgIAkJCX0KICAgIAkJfSwKICAgIAkJaTogZnVuY3Rpb24gaW50cm8obG9jYWwpIHsKICAgIAkJCWlmIChjdXJyZW50KSByZXR1cm47CiAgICAJCQl0cmFuc2l0aW9uX2luKGlmX2Jsb2NrKTsKICAgIAkJCWN1cnJlbnQgPSB0cnVlOwogICAgCQl9LAogICAgCQlvOiBmdW5jdGlvbiBvdXRybyhsb2NhbCkgewogICAgCQkJdHJhbnNpdGlvbl9vdXQoaWZfYmxvY2spOwogICAgCQkJY3VycmVudCA9IGZhbHNlOwogICAgCQl9LAogICAgCQlkOiBmdW5jdGlvbiBkZXN0cm95KGRldGFjaGluZykgewogICAgCQkJaWZfYmxvY2tzW2N1cnJlbnRfYmxvY2tfdHlwZV9pbmRleF0uZChkZXRhY2hpbmcpOwogICAgCQkJaWYgKGRldGFjaGluZykgZGV0YWNoX2RldihpZl9ibG9ja19hbmNob3IpOwogICAgCQl9CiAgICAJfTsKCiAgICAJZGlzcGF0Y2hfZGV2KCJTdmVsdGVSZWdpc3RlckJsb2NrIiwgewogICAgCQlibG9jazogYmxvY2tfMSwKICAgIAkJaWQ6IGZhbGxiYWNrX2Jsb2NrLm5hbWUsCiAgICAJCXR5cGU6ICJmYWxsYmFjayIsCiAgICAJCXNvdXJjZTogIig1NzoxMCkgICAgICAgICIsCiAgICAJCWN0eAogICAgCX0pOwoKICAgIAlyZXR1cm4gYmxvY2tfMTsKICAgIH0KCiAgICAvLyAoNDQ6NCkgezplbHNlfQogICAgZnVuY3Rpb24gY3JlYXRlX2Vsc2VfYmxvY2soY3R4KSB7CiAgICAJbGV0IGN1cnJlbnQ7CiAgICAJY29uc3QgZGVmYXVsdF9zbG90X3RlbXBsYXRlID0gLyojc2xvdHMqLyBjdHhbMTddLmRlZmF1bHQ7CiAgICAJY29uc3QgZGVmYXVsdF9zbG90ID0gY3JlYXRlX3Nsb3QoZGVmYXVsdF9zbG90X3RlbXBsYXRlLCBjdHgsIC8qJCRzY29wZSovIGN0eFsxNl0sIG51bGwpOwoKICAgIAljb25zdCBibG9ja18xID0gewogICAgCQljOiBmdW5jdGlvbiBjcmVhdGUoKSB7CiAgICAJCQlpZiAoZGVmYXVsdF9zbG90KSBkZWZhdWx0X3Nsb3QuYygpOwogICAgCQl9LAogICAgCQltOiBmdW5jdGlvbiBtb3VudCh0YXJnZXQsIGFuY2hvcikgewogICAgCQkJaWYgKGRlZmF1bHRfc2xvdCkgewogICAgCQkJCWRlZmF1bHRfc2xvdC5tKHRhcmdldCwgYW5jaG9yKTsKICAgIAkJCX0KCiAgICAJCQljdXJyZW50ID0gdHJ1ZTsKICAgIAkJfSwKICAgIAkJcDogZnVuY3Rpb24gdXBkYXRlKGN0eCwgZGlydHkpIHsKICAgIAkJCWlmIChkZWZhdWx0X3Nsb3QpIHsKICAgIAkJCQlpZiAoZGVmYXVsdF9zbG90LnAgJiYgZGlydHkgJiAvKiQkc2NvcGUqLyA2NTUzNikgewogICAgCQkJCQl1cGRhdGVfc2xvdChkZWZhdWx0X3Nsb3QsIGRlZmF1bHRfc2xvdF90ZW1wbGF0ZSwgY3R4LCAvKiQkc2NvcGUqLyBjdHhbMTZdLCBkaXJ0eSwgbnVsbCwgbnVsbCk7CiAgICAJCQkJfQogICAgCQkJfQogICAgCQl9LAogICAgCQlpOiBmdW5jdGlvbiBpbnRybyhsb2NhbCkgewogICAgCQkJaWYgKGN1cnJlbnQpIHJldHVybjsKICAgIAkJCXRyYW5zaXRpb25faW4oZGVmYXVsdF9zbG90LCBsb2NhbCk7CiAgICAJCQljdXJyZW50ID0gdHJ1ZTsKICAgIAkJfSwKICAgIAkJbzogZnVuY3Rpb24gb3V0cm8obG9jYWwpIHsKICAgIAkJCXRyYW5zaXRpb25fb3V0KGRlZmF1bHRfc2xvdCwgbG9jYWwpOwogICAgCQkJY3VycmVudCA9IGZhbHNlOwogICAgCQl9LAogICAgCQlkOiBmdW5jdGlvbiBkZXN0cm95KGRldGFjaGluZykgewogICAgCQkJaWYgKGRlZmF1bHRfc2xvdCkgZGVmYXVsdF9zbG90LmQoZGV0YWNoaW5nKTsKICAgIAkJfQogICAgCX07CgogICAgCWRpc3BhdGNoX2RldigiU3ZlbHRlUmVnaXN0ZXJCbG9jayIsIHsKICAgIAkJYmxvY2s6IGJsb2NrXzEsCiAgICAJCWlkOiBjcmVhdGVfZWxzZV9ibG9jay5uYW1lLAogICAgCQl0eXBlOiAiZWxzZSIsCiAgICAJCXNvdXJjZTogIig0NDo0KSB7OmVsc2V9IiwKICAgIAkJY3R4CiAgICAJfSk7CgogICAgCXJldHVybiBibG9ja18xOwogICAgfQoKICAgIC8vICg0Mjo0KSB7I2lmIGNoaWxkcmVufQogICAgZnVuY3Rpb24gY3JlYXRlX2lmX2Jsb2NrXzEoY3R4KSB7CiAgICAJbGV0IHQ7CgogICAgCWNvbnN0IGJsb2NrXzEgPSB7CiAgICAJCWM6IGZ1bmN0aW9uIGNyZWF0ZSgpIHsKICAgIAkJCXQgPSB0ZXh0KC8qY2hpbGRyZW4qLyBjdHhbMF0pOwogICAgCQl9LAogICAgCQltOiBmdW5jdGlvbiBtb3VudCh0YXJnZXQsIGFuY2hvcikgewogICAgCQkJaW5zZXJ0X2Rldih0YXJnZXQsIHQsIGFuY2hvcik7CiAgICAJCX0sCiAgICAJCXA6IGZ1bmN0aW9uIHVwZGF0ZShjdHgsIGRpcnR5KSB7CiAgICAJCQlpZiAoZGlydHkgJiAvKmNoaWxkcmVuKi8gMSkgc2V0X2RhdGFfZGV2KHQsIC8qY2hpbGRyZW4qLyBjdHhbMF0pOwogICAgCQl9LAogICAgCQlpOiBub29wLAogICAgCQlvOiBub29wLAogICAgCQlkOiBmdW5jdGlvbiBkZXN0cm95KGRldGFjaGluZykgewogICAgCQkJaWYgKGRldGFjaGluZykgZGV0YWNoX2Rldih0KTsKICAgIAkJfQogICAgCX07CgogICAgCWRpc3BhdGNoX2RldigiU3ZlbHRlUmVnaXN0ZXJCbG9jayIsIHsKICAgIAkJYmxvY2s6IGJsb2NrXzEsCiAgICAJCWlkOiBjcmVhdGVfaWZfYmxvY2tfMS5uYW1lLAogICAgCQl0eXBlOiAiaWYiLAogICAgCQlzb3VyY2U6ICIoNDI6NCkgeyNpZiBjaGlsZHJlbn0iLAogICAgCQljdHgKICAgIAl9KTsKCiAgICAJcmV0dXJuIGJsb2NrXzE7CiAgICB9CgogICAgZnVuY3Rpb24gY3JlYXRlX2ZyYWdtZW50KGN0eCkgewogICAgCWxldCBjdXJyZW50X2Jsb2NrX3R5cGVfaW5kZXg7CiAgICAJbGV0IGlmX2Jsb2NrOwogICAgCWxldCBpZl9ibG9ja19hbmNob3I7CiAgICAJbGV0IGN1cnJlbnQ7CiAgICAJY29uc3QgaWZfYmxvY2tfY3JlYXRvcnMgPSBbY3JlYXRlX2lmX2Jsb2NrLCBjcmVhdGVfZWxzZV9ibG9ja18xXTsKICAgIAljb25zdCBpZl9ibG9ja3MgPSBbXTsKCiAgICAJZnVuY3Rpb24gc2VsZWN0X2Jsb2NrX3R5cGUoY3R4LCBkaXJ0eSkgewogICAgCQlpZiAoLypocmVmKi8gY3R4WzNdKSByZXR1cm4gMDsKICAgIAkJcmV0dXJuIDE7CiAgICAJfQoKICAgIAljdXJyZW50X2Jsb2NrX3R5cGVfaW5kZXggPSBzZWxlY3RfYmxvY2tfdHlwZShjdHgpOwogICAgCWlmX2Jsb2NrID0gaWZfYmxvY2tzW2N1cnJlbnRfYmxvY2tfdHlwZV9pbmRleF0gPSBpZl9ibG9ja19jcmVhdG9yc1tjdXJyZW50X2Jsb2NrX3R5cGVfaW5kZXhdKGN0eCk7CgogICAgCWNvbnN0IGJsb2NrXzEgPSB7CiAgICAJCWM6IGZ1bmN0aW9uIGNyZWF0ZSgpIHsKICAgIAkJCWlmX2Jsb2NrLmMoKTsKICAgIAkJCWlmX2Jsb2NrX2FuY2hvciA9IGVtcHR5KCk7CiAgICAJCX0sCiAgICAJCWw6IGZ1bmN0aW9uIGNsYWltKG5vZGVzKSB7CiAgICAJCQl0aHJvdyBuZXcgRXJyb3IoIm9wdGlvbnMuaHlkcmF0ZSBvbmx5IHdvcmtzIGlmIHRoZSBjb21wb25lbnQgd2FzIGNvbXBpbGVkIHdpdGggdGhlIGBoeWRyYXRhYmxlOiB0cnVlYCBvcHRpb24iKTsKICAgIAkJfSwKICAgIAkJbTogZnVuY3Rpb24gbW91bnQodGFyZ2V0LCBhbmNob3IpIHsKICAgIAkJCWlmX2Jsb2Nrc1tjdXJyZW50X2Jsb2NrX3R5cGVfaW5kZXhdLm0odGFyZ2V0LCBhbmNob3IpOwogICAgCQkJaW5zZXJ0X2Rldih0YXJnZXQsIGlmX2Jsb2NrX2FuY2hvciwgYW5jaG9yKTsKICAgIAkJCWN1cnJlbnQgPSB0cnVlOwogICAgCQl9LAogICAgCQlwOiBmdW5jdGlvbiB1cGRhdGUoY3R4LCBbZGlydHldKSB7CiAgICAJCQlsZXQgcHJldmlvdXNfYmxvY2tfaW5kZXggPSBjdXJyZW50X2Jsb2NrX3R5cGVfaW5kZXg7CiAgICAJCQljdXJyZW50X2Jsb2NrX3R5cGVfaW5kZXggPSBzZWxlY3RfYmxvY2tfdHlwZShjdHgpOwoKICAgIAkJCWlmIChjdXJyZW50X2Jsb2NrX3R5cGVfaW5kZXggPT09IHByZXZpb3VzX2Jsb2NrX2luZGV4KSB7CiAgICAJCQkJaWZfYmxvY2tzW2N1cnJlbnRfYmxvY2tfdHlwZV9pbmRleF0ucChjdHgsIGRpcnR5KTsKICAgIAkJCX0gZWxzZSB7CiAgICAJCQkJZ3JvdXBfb3V0cm9zKCk7CgogICAgCQkJCXRyYW5zaXRpb25fb3V0KGlmX2Jsb2Nrc1twcmV2aW91c19ibG9ja19pbmRleF0sIDEsIDEsICgpID0+IHsKICAgIAkJCQkJaWZfYmxvY2tzW3ByZXZpb3VzX2Jsb2NrX2luZGV4XSA9IG51bGw7CiAgICAJCQkJfSk7CgogICAgCQkJCWNoZWNrX291dHJvcygpOwogICAgCQkJCWlmX2Jsb2NrID0gaWZfYmxvY2tzW2N1cnJlbnRfYmxvY2tfdHlwZV9pbmRleF07CgogICAgCQkJCWlmICghaWZfYmxvY2spIHsKICAgIAkJCQkJaWZfYmxvY2sgPSBpZl9ibG9ja3NbY3VycmVudF9ibG9ja190eXBlX2luZGV4XSA9IGlmX2Jsb2NrX2NyZWF0b3JzW2N1cnJlbnRfYmxvY2tfdHlwZV9pbmRleF0oY3R4KTsKICAgIAkJCQkJaWZfYmxvY2suYygpOwogICAgCQkJCX0gZWxzZSB7CiAgICAJCQkJCWlmX2Jsb2NrLnAoY3R4LCBkaXJ0eSk7CiAgICAJCQkJfQoKICAgIAkJCQl0cmFuc2l0aW9uX2luKGlmX2Jsb2NrLCAxKTsKICAgIAkJCQlpZl9ibG9jay5tKGlmX2Jsb2NrX2FuY2hvci5wYXJlbnROb2RlLCBpZl9ibG9ja19hbmNob3IpOwogICAgCQkJfQogICAgCQl9LAogICAgCQlpOiBmdW5jdGlvbiBpbnRybyhsb2NhbCkgewogICAgCQkJaWYgKGN1cnJlbnQpIHJldHVybjsKICAgIAkJCXRyYW5zaXRpb25faW4oaWZfYmxvY2spOwogICAgCQkJY3VycmVudCA9IHRydWU7CiAgICAJCX0sCiAgICAJCW86IGZ1bmN0aW9uIG91dHJvKGxvY2FsKSB7CiAgICAJCQl0cmFuc2l0aW9uX291dChpZl9ibG9jayk7CiAgICAJCQljdXJyZW50ID0gZmFsc2U7CiAgICAJCX0sCiAgICAJCWQ6IGZ1bmN0aW9uIGRlc3Ryb3koZGV0YWNoaW5nKSB7CiAgICAJCQlpZl9ibG9ja3NbY3VycmVudF9ibG9ja190eXBlX2luZGV4XS5kKGRldGFjaGluZyk7CiAgICAJCQlpZiAoZGV0YWNoaW5nKSBkZXRhY2hfZGV2KGlmX2Jsb2NrX2FuY2hvcik7CiAgICAJCX0KICAgIAl9OwoKICAgIAlkaXNwYXRjaF9kZXYoIlN2ZWx0ZVJlZ2lzdGVyQmxvY2siLCB7CiAgICAJCWJsb2NrOiBibG9ja18xLAogICAgCQlpZDogY3JlYXRlX2ZyYWdtZW50Lm5hbWUsCiAgICAJCXR5cGU6ICJjb21wb25lbnQiLAogICAgCQlzb3VyY2U6ICIiLAogICAgCQljdHgKICAgIAl9KTsKCiAgICAJcmV0dXJuIGJsb2NrXzE7CiAgICB9CgogICAgZnVuY3Rpb24gaW5zdGFuY2UoJCRzZWxmLCAkJHByb3BzLCAkJGludmFsaWRhdGUpIHsKICAgIAlsZXQgYXJpYUxhYmVsOwogICAgCWxldCBjbGFzc2VzOwogICAgCWxldCBkZWZhdWx0QXJpYUxhYmVsOwoKICAgIAljb25zdCBvbWl0X3Byb3BzX25hbWVzID0gWwogICAgCQkiY2xhc3MiLCJhY3RpdmUiLCJibG9jayIsImNoaWxkcmVuIiwiY2xvc2UiLCJjb2xvciIsImRpc2FibGVkIiwiaHJlZiIsIm91dGxpbmUiLCJzaXplIiwic3R5bGUiLCJ2YWx1ZSIKICAgIAldOwoKICAgIAlsZXQgJCRyZXN0UHJvcHMgPSBjb21wdXRlX3Jlc3RfcHJvcHMoJCRwcm9wcywgb21pdF9wcm9wc19uYW1lcyk7CiAgICAJbGV0IHsgJCRzbG90czogc2xvdHMgPSB7fSwgJCRzY29wZSB9ID0gJCRwcm9wczsKICAgIAl2YWxpZGF0ZV9zbG90cygiQnV0dG9uIiwgc2xvdHMsIFsnZGVmYXVsdCddKTsKICAgIAlsZXQgeyBjbGFzczogY2xhc3NOYW1lID0gIiIgfSA9ICQkcHJvcHM7CiAgICAJbGV0IHsgYWN0aXZlID0gZmFsc2UgfSA9ICQkcHJvcHM7CiAgICAJbGV0IHsgYmxvY2sgPSBmYWxzZSB9ID0gJCRwcm9wczsKICAgIAlsZXQgeyBjaGlsZHJlbiA9IHVuZGVmaW5lZCB9ID0gJCRwcm9wczsKICAgIAlsZXQgeyBjbG9zZSA9IGZhbHNlIH0gPSAkJHByb3BzOwogICAgCWxldCB7IGNvbG9yID0gInNlY29uZGFyeSIgfSA9ICQkcHJvcHM7CiAgICAJbGV0IHsgZGlzYWJsZWQgPSBmYWxzZSB9ID0gJCRwcm9wczsKICAgIAlsZXQgeyBocmVmID0gIiIgfSA9ICQkcHJvcHM7CiAgICAJbGV0IHsgb3V0bGluZSA9IGZhbHNlIH0gPSAkJHByb3BzOwogICAgCWxldCB7IHNpemUgPSBudWxsIH0gPSAkJHByb3BzOwogICAgCWxldCB7IHN0eWxlID0gIiIgfSA9ICQkcHJvcHM7CiAgICAJbGV0IHsgdmFsdWUgPSAiIiB9ID0gJCRwcm9wczsKCiAgICAJZnVuY3Rpb24gY2xpY2tfaGFuZGxlcihldmVudCkgewogICAgCQlidWJibGUoJCRzZWxmLCBldmVudCk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBjbGlja19oYW5kbGVyXzEoZXZlbnQpIHsKICAgIAkJYnViYmxlKCQkc2VsZiwgZXZlbnQpOwogICAgCX0KCiAgICAJJCRzZWxmLiQkc2V0ID0gJCRuZXdfcHJvcHMgPT4gewogICAgCQkkJGludmFsaWRhdGUoMjAsICQkcHJvcHMgPSBhc3NpZ24oYXNzaWduKHt9LCAkJHByb3BzKSwgZXhjbHVkZV9pbnRlcm5hbF9wcm9wcygkJG5ld19wcm9wcykpKTsKICAgIAkJJCRpbnZhbGlkYXRlKDksICQkcmVzdFByb3BzID0gY29tcHV0ZV9yZXN0X3Byb3BzKCQkcHJvcHMsIG9taXRfcHJvcHNfbmFtZXMpKTsKICAgIAkJaWYgKCJjbGFzcyIgaW4gJCRuZXdfcHJvcHMpICQkaW52YWxpZGF0ZSgxMCwgY2xhc3NOYW1lID0gJCRuZXdfcHJvcHMuY2xhc3MpOwogICAgCQlpZiAoImFjdGl2ZSIgaW4gJCRuZXdfcHJvcHMpICQkaW52YWxpZGF0ZSgxMSwgYWN0aXZlID0gJCRuZXdfcHJvcHMuYWN0aXZlKTsKICAgIAkJaWYgKCJibG9jayIgaW4gJCRuZXdfcHJvcHMpICQkaW52YWxpZGF0ZSgxMiwgYmxvY2sgPSAkJG5ld19wcm9wcy5ibG9jayk7CiAgICAJCWlmICgiY2hpbGRyZW4iIGluICQkbmV3X3Byb3BzKSAkJGludmFsaWRhdGUoMCwgY2hpbGRyZW4gPSAkJG5ld19wcm9wcy5jaGlsZHJlbik7CiAgICAJCWlmICgiY2xvc2UiIGluICQkbmV3X3Byb3BzKSAkJGludmFsaWRhdGUoMSwgY2xvc2UgPSAkJG5ld19wcm9wcy5jbG9zZSk7CiAgICAJCWlmICgiY29sb3IiIGluICQkbmV3X3Byb3BzKSAkJGludmFsaWRhdGUoMTMsIGNvbG9yID0gJCRuZXdfcHJvcHMuY29sb3IpOwogICAgCQlpZiAoImRpc2FibGVkIiBpbiAkJG5ld19wcm9wcykgJCRpbnZhbGlkYXRlKDIsIGRpc2FibGVkID0gJCRuZXdfcHJvcHMuZGlzYWJsZWQpOwogICAgCQlpZiAoImhyZWYiIGluICQkbmV3X3Byb3BzKSAkJGludmFsaWRhdGUoMywgaHJlZiA9ICQkbmV3X3Byb3BzLmhyZWYpOwogICAgCQlpZiAoIm91dGxpbmUiIGluICQkbmV3X3Byb3BzKSAkJGludmFsaWRhdGUoMTQsIG91dGxpbmUgPSAkJG5ld19wcm9wcy5vdXRsaW5lKTsKICAgIAkJaWYgKCJzaXplIiBpbiAkJG5ld19wcm9wcykgJCRpbnZhbGlkYXRlKDE1LCBzaXplID0gJCRuZXdfcHJvcHMuc2l6ZSk7CiAgICAJCWlmICgic3R5bGUiIGluICQkbmV3X3Byb3BzKSAkJGludmFsaWRhdGUoNCwgc3R5bGUgPSAkJG5ld19wcm9wcy5zdHlsZSk7CiAgICAJCWlmICgidmFsdWUiIGluICQkbmV3X3Byb3BzKSAkJGludmFsaWRhdGUoNSwgdmFsdWUgPSAkJG5ld19wcm9wcy52YWx1ZSk7CiAgICAJCWlmICgiJCRzY29wZSIgaW4gJCRuZXdfcHJvcHMpICQkaW52YWxpZGF0ZSgxNiwgJCRzY29wZSA9ICQkbmV3X3Byb3BzLiQkc2NvcGUpOwogICAgCX07CgogICAgCSQkc2VsZi4kY2FwdHVyZV9zdGF0ZSA9ICgpID0+ICh7CiAgICAJCWNsYXNzbmFtZXMsCiAgICAJCWNsYXNzTmFtZSwKICAgIAkJYWN0aXZlLAogICAgCQlibG9jaywKICAgIAkJY2hpbGRyZW4sCiAgICAJCWNsb3NlLAogICAgCQljb2xvciwKICAgIAkJZGlzYWJsZWQsCiAgICAJCWhyZWYsCiAgICAJCW91dGxpbmUsCiAgICAJCXNpemUsCiAgICAJCXN0eWxlLAogICAgCQl2YWx1ZSwKICAgIAkJYXJpYUxhYmVsLAogICAgCQljbGFzc2VzLAogICAgCQlkZWZhdWx0QXJpYUxhYmVsCiAgICAJfSk7CgogICAgCSQkc2VsZi4kaW5qZWN0X3N0YXRlID0gJCRuZXdfcHJvcHMgPT4gewogICAgCQkkJGludmFsaWRhdGUoMjAsICQkcHJvcHMgPSBhc3NpZ24oYXNzaWduKHt9LCAkJHByb3BzKSwgJCRuZXdfcHJvcHMpKTsKICAgIAkJaWYgKCJjbGFzc05hbWUiIGluICQkcHJvcHMpICQkaW52YWxpZGF0ZSgxMCwgY2xhc3NOYW1lID0gJCRuZXdfcHJvcHMuY2xhc3NOYW1lKTsKICAgIAkJaWYgKCJhY3RpdmUiIGluICQkcHJvcHMpICQkaW52YWxpZGF0ZSgxMSwgYWN0aXZlID0gJCRuZXdfcHJvcHMuYWN0aXZlKTsKICAgIAkJaWYgKCJibG9jayIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDEyLCBibG9jayA9ICQkbmV3X3Byb3BzLmJsb2NrKTsKICAgIAkJaWYgKCJjaGlsZHJlbiIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDAsIGNoaWxkcmVuID0gJCRuZXdfcHJvcHMuY2hpbGRyZW4pOwogICAgCQlpZiAoImNsb3NlIiBpbiAkJHByb3BzKSAkJGludmFsaWRhdGUoMSwgY2xvc2UgPSAkJG5ld19wcm9wcy5jbG9zZSk7CiAgICAJCWlmICgiY29sb3IiIGluICQkcHJvcHMpICQkaW52YWxpZGF0ZSgxMywgY29sb3IgPSAkJG5ld19wcm9wcy5jb2xvcik7CiAgICAJCWlmICgiZGlzYWJsZWQiIGluICQkcHJvcHMpICQkaW52YWxpZGF0ZSgyLCBkaXNhYmxlZCA9ICQkbmV3X3Byb3BzLmRpc2FibGVkKTsKICAgIAkJaWYgKCJocmVmIiBpbiAkJHByb3BzKSAkJGludmFsaWRhdGUoMywgaHJlZiA9ICQkbmV3X3Byb3BzLmhyZWYpOwogICAgCQlpZiAoIm91dGxpbmUiIGluICQkcHJvcHMpICQkaW52YWxpZGF0ZSgxNCwgb3V0bGluZSA9ICQkbmV3X3Byb3BzLm91dGxpbmUpOwogICAgCQlpZiAoInNpemUiIGluICQkcHJvcHMpICQkaW52YWxpZGF0ZSgxNSwgc2l6ZSA9ICQkbmV3X3Byb3BzLnNpemUpOwogICAgCQlpZiAoInN0eWxlIiBpbiAkJHByb3BzKSAkJGludmFsaWRhdGUoNCwgc3R5bGUgPSAkJG5ld19wcm9wcy5zdHlsZSk7CiAgICAJCWlmICgidmFsdWUiIGluICQkcHJvcHMpICQkaW52YWxpZGF0ZSg1LCB2YWx1ZSA9ICQkbmV3X3Byb3BzLnZhbHVlKTsKICAgIAkJaWYgKCJhcmlhTGFiZWwiIGluICQkcHJvcHMpICQkaW52YWxpZGF0ZSg2LCBhcmlhTGFiZWwgPSAkJG5ld19wcm9wcy5hcmlhTGFiZWwpOwogICAgCQlpZiAoImNsYXNzZXMiIGluICQkcHJvcHMpICQkaW52YWxpZGF0ZSg3LCBjbGFzc2VzID0gJCRuZXdfcHJvcHMuY2xhc3Nlcyk7CiAgICAJCWlmICgiZGVmYXVsdEFyaWFMYWJlbCIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDgsIGRlZmF1bHRBcmlhTGFiZWwgPSAkJG5ld19wcm9wcy5kZWZhdWx0QXJpYUxhYmVsKTsKICAgIAl9OwoKICAgIAlpZiAoJCRwcm9wcyAmJiAiJCRpbmplY3QiIGluICQkcHJvcHMpIHsKICAgIAkJJCRzZWxmLiRpbmplY3Rfc3RhdGUoJCRwcm9wcy4kJGluamVjdCk7CiAgICAJfQoKICAgIAkkJHNlbGYuJCQudXBkYXRlID0gKCkgPT4gewogICAgCQkgJCRpbnZhbGlkYXRlKDYsIGFyaWFMYWJlbCA9ICQkcHJvcHNbImFyaWEtbGFiZWwiXSk7CgogICAgCQlpZiAoJCRzZWxmLiQkLmRpcnR5ICYgLypjbGFzc05hbWUsIGNsb3NlLCBvdXRsaW5lLCBjb2xvciwgc2l6ZSwgYmxvY2ssIGFjdGl2ZSovIDY0NTE0KSB7CiAgICAJCQkgJCRpbnZhbGlkYXRlKDcsIGNsYXNzZXMgPSBjbGFzc25hbWVzKGNsYXNzTmFtZSwgeyBjbG9zZSB9LCBjbG9zZSB8fCAiYnRuIiwgY2xvc2UgfHwgYGJ0biR7b3V0bGluZSA/ICItb3V0bGluZSIgOiAiIn0tJHtjb2xvcn1gLCBzaXplID8gYGJ0bi0ke3NpemV9YCA6IGZhbHNlLCBibG9jayA/ICJidG4tYmxvY2siIDogZmFsc2UsIHsgYWN0aXZlIH0pKTsKICAgIAkJfQoKICAgIAkJaWYgKCQkc2VsZi4kJC5kaXJ0eSAmIC8qY2xvc2UqLyAyKSB7CiAgICAJCQkgJCRpbnZhbGlkYXRlKDgsIGRlZmF1bHRBcmlhTGFiZWwgPSBjbG9zZSA/ICJDbG9zZSIgOiBudWxsKTsKICAgIAkJfQogICAgCX07CgogICAgCSQkcHJvcHMgPSBleGNsdWRlX2ludGVybmFsX3Byb3BzKCQkcHJvcHMpOwoKICAgIAlyZXR1cm4gWwogICAgCQljaGlsZHJlbiwKICAgIAkJY2xvc2UsCiAgICAJCWRpc2FibGVkLAogICAgCQlocmVmLAogICAgCQlzdHlsZSwKICAgIAkJdmFsdWUsCiAgICAJCWFyaWFMYWJlbCwKICAgIAkJY2xhc3NlcywKICAgIAkJZGVmYXVsdEFyaWFMYWJlbCwKICAgIAkJJCRyZXN0UHJvcHMsCiAgICAJCWNsYXNzTmFtZSwKICAgIAkJYWN0aXZlLAogICAgCQlibG9jaywKICAgIAkJY29sb3IsCiAgICAJCW91dGxpbmUsCiAgICAJCXNpemUsCiAgICAJCSQkc2NvcGUsCiAgICAJCXNsb3RzLAogICAgCQljbGlja19oYW5kbGVyLAogICAgCQljbGlja19oYW5kbGVyXzEKICAgIAldOwogICAgfQoKICAgIGNsYXNzIEJ1dHRvbiBleHRlbmRzIFN2ZWx0ZUNvbXBvbmVudERldiB7CiAgICAJY29uc3RydWN0b3Iob3B0aW9ucykgewogICAgCQlzdXBlcihvcHRpb25zKTsKCiAgICAJCWluaXQodGhpcywgb3B0aW9ucywgaW5zdGFuY2UsIGNyZWF0ZV9mcmFnbWVudCwgc2FmZV9ub3RfZXF1YWwsIHsKICAgIAkJCWNsYXNzOiAxMCwKICAgIAkJCWFjdGl2ZTogMTEsCiAgICAJCQlibG9jazogMTIsCiAgICAJCQljaGlsZHJlbjogMCwKICAgIAkJCWNsb3NlOiAxLAogICAgCQkJY29sb3I6IDEzLAogICAgCQkJZGlzYWJsZWQ6IDIsCiAgICAJCQlocmVmOiAzLAogICAgCQkJb3V0bGluZTogMTQsCiAgICAJCQlzaXplOiAxNSwKICAgIAkJCXN0eWxlOiA0LAogICAgCQkJdmFsdWU6IDUKICAgIAkJfSk7CgogICAgCQlkaXNwYXRjaF9kZXYoIlN2ZWx0ZVJlZ2lzdGVyQ29tcG9uZW50IiwgewogICAgCQkJY29tcG9uZW50OiB0aGlzLAogICAgCQkJdGFnTmFtZTogIkJ1dHRvbiIsCiAgICAJCQlvcHRpb25zLAogICAgCQkJaWQ6IGNyZWF0ZV9mcmFnbWVudC5uYW1lCiAgICAJCX0pOwogICAgCX0KCiAgICAJZ2V0IGNsYXNzKCkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxCdXR0b24+OiBQcm9wcyBjYW5ub3QgYmUgcmVhZCBkaXJlY3RseSBmcm9tIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlzZXQgY2xhc3ModmFsdWUpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8QnV0dG9uPjogUHJvcHMgY2Fubm90IGJlIHNldCBkaXJlY3RseSBvbiB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJZ2V0IGFjdGl2ZSgpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8QnV0dG9uPjogUHJvcHMgY2Fubm90IGJlIHJlYWQgZGlyZWN0bHkgZnJvbSB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJc2V0IGFjdGl2ZSh2YWx1ZSkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxCdXR0b24+OiBQcm9wcyBjYW5ub3QgYmUgc2V0IGRpcmVjdGx5IG9uIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlnZXQgYmxvY2soKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPEJ1dHRvbj46IFByb3BzIGNhbm5vdCBiZSByZWFkIGRpcmVjdGx5IGZyb20gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCXNldCBibG9jayh2YWx1ZSkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxCdXR0b24+OiBQcm9wcyBjYW5ub3QgYmUgc2V0IGRpcmVjdGx5IG9uIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlnZXQgY2hpbGRyZW4oKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPEJ1dHRvbj46IFByb3BzIGNhbm5vdCBiZSByZWFkIGRpcmVjdGx5IGZyb20gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCXNldCBjaGlsZHJlbih2YWx1ZSkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxCdXR0b24+OiBQcm9wcyBjYW5ub3QgYmUgc2V0IGRpcmVjdGx5IG9uIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlnZXQgY2xvc2UoKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPEJ1dHRvbj46IFByb3BzIGNhbm5vdCBiZSByZWFkIGRpcmVjdGx5IGZyb20gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCXNldCBjbG9zZSh2YWx1ZSkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxCdXR0b24+OiBQcm9wcyBjYW5ub3QgYmUgc2V0IGRpcmVjdGx5IG9uIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlnZXQgY29sb3IoKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPEJ1dHRvbj46IFByb3BzIGNhbm5vdCBiZSByZWFkIGRpcmVjdGx5IGZyb20gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCXNldCBjb2xvcih2YWx1ZSkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxCdXR0b24+OiBQcm9wcyBjYW5ub3QgYmUgc2V0IGRpcmVjdGx5IG9uIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlnZXQgZGlzYWJsZWQoKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPEJ1dHRvbj46IFByb3BzIGNhbm5vdCBiZSByZWFkIGRpcmVjdGx5IGZyb20gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCXNldCBkaXNhYmxlZCh2YWx1ZSkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxCdXR0b24+OiBQcm9wcyBjYW5ub3QgYmUgc2V0IGRpcmVjdGx5IG9uIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlnZXQgaHJlZigpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8QnV0dG9uPjogUHJvcHMgY2Fubm90IGJlIHJlYWQgZGlyZWN0bHkgZnJvbSB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJc2V0IGhyZWYodmFsdWUpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8QnV0dG9uPjogUHJvcHMgY2Fubm90IGJlIHNldCBkaXJlY3RseSBvbiB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJZ2V0IG91dGxpbmUoKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPEJ1dHRvbj46IFByb3BzIGNhbm5vdCBiZSByZWFkIGRpcmVjdGx5IGZyb20gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCXNldCBvdXRsaW5lKHZhbHVlKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPEJ1dHRvbj46IFByb3BzIGNhbm5vdCBiZSBzZXQgZGlyZWN0bHkgb24gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCWdldCBzaXplKCkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxCdXR0b24+OiBQcm9wcyBjYW5ub3QgYmUgcmVhZCBkaXJlY3RseSBmcm9tIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlzZXQgc2l6ZSh2YWx1ZSkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxCdXR0b24+OiBQcm9wcyBjYW5ub3QgYmUgc2V0IGRpcmVjdGx5IG9uIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlnZXQgc3R5bGUoKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPEJ1dHRvbj46IFByb3BzIGNhbm5vdCBiZSByZWFkIGRpcmVjdGx5IGZyb20gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCXNldCBzdHlsZSh2YWx1ZSkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxCdXR0b24+OiBQcm9wcyBjYW5ub3QgYmUgc2V0IGRpcmVjdGx5IG9uIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlnZXQgdmFsdWUoKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPEJ1dHRvbj46IFByb3BzIGNhbm5vdCBiZSByZWFkIGRpcmVjdGx5IGZyb20gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCXNldCB2YWx1ZSh2YWx1ZSkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxCdXR0b24+OiBQcm9wcyBjYW5ub3QgYmUgc2V0IGRpcmVjdGx5IG9uIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQogICAgfQoKICAgIGNvbnN0IHN1YnNjcmliZXJfcXVldWUgPSBbXTsKICAgIC8qKgogICAgICogQ3JlYXRlIGEgYFdyaXRhYmxlYCBzdG9yZSB0aGF0IGFsbG93cyBib3RoIHVwZGF0aW5nIGFuZCByZWFkaW5nIGJ5IHN1YnNjcmlwdGlvbi4KICAgICAqIEBwYXJhbSB7Kj19dmFsdWUgaW5pdGlhbCB2YWx1ZQogICAgICogQHBhcmFtIHtTdGFydFN0b3BOb3RpZmllcj19c3RhcnQgc3RhcnQgYW5kIHN0b3Agbm90aWZpY2F0aW9ucyBmb3Igc3Vic2NyaXB0aW9ucwogICAgICovCiAgICBmdW5jdGlvbiB3cml0YWJsZSh2YWx1ZSwgc3RhcnQgPSBub29wKSB7CiAgICAgICAgbGV0IHN0b3A7CiAgICAgICAgY29uc3Qgc3Vic2NyaWJlcnMgPSBbXTsKICAgICAgICBmdW5jdGlvbiBzZXQobmV3X3ZhbHVlKSB7CiAgICAgICAgICAgIGlmIChzYWZlX25vdF9lcXVhbCh2YWx1ZSwgbmV3X3ZhbHVlKSkgewogICAgICAgICAgICAgICAgdmFsdWUgPSBuZXdfdmFsdWU7CiAgICAgICAgICAgICAgICBpZiAoc3RvcCkgeyAvLyBzdG9yZSBpcyByZWFkeQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHJ1bl9xdWV1ZSA9ICFzdWJzY3JpYmVyX3F1ZXVlLmxlbmd0aDsKICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHN1YnNjcmliZXJzLmxlbmd0aDsgaSArPSAxKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHMgPSBzdWJzY3JpYmVyc1tpXTsKICAgICAgICAgICAgICAgICAgICAgICAgc1sxXSgpOwogICAgICAgICAgICAgICAgICAgICAgICBzdWJzY3JpYmVyX3F1ZXVlLnB1c2gocywgdmFsdWUpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBpZiAocnVuX3F1ZXVlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc3Vic2NyaWJlcl9xdWV1ZS5sZW5ndGg7IGkgKz0gMikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3Vic2NyaWJlcl9xdWV1ZVtpXVswXShzdWJzY3JpYmVyX3F1ZXVlW2kgKyAxXSk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgc3Vic2NyaWJlcl9xdWV1ZS5sZW5ndGggPSAwOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBmdW5jdGlvbiB1cGRhdGUoZm4pIHsKICAgICAgICAgICAgc2V0KGZuKHZhbHVlKSk7CiAgICAgICAgfQogICAgICAgIGZ1bmN0aW9uIHN1YnNjcmliZShydW4sIGludmFsaWRhdGUgPSBub29wKSB7CiAgICAgICAgICAgIGNvbnN0IHN1YnNjcmliZXIgPSBbcnVuLCBpbnZhbGlkYXRlXTsKICAgICAgICAgICAgc3Vic2NyaWJlcnMucHVzaChzdWJzY3JpYmVyKTsKICAgICAgICAgICAgaWYgKHN1YnNjcmliZXJzLmxlbmd0aCA9PT0gMSkgewogICAgICAgICAgICAgICAgc3RvcCA9IHN0YXJ0KHNldCkgfHwgbm9vcDsKICAgICAgICAgICAgfQogICAgICAgICAgICBydW4odmFsdWUpOwogICAgICAgICAgICByZXR1cm4gKCkgPT4gewogICAgICAgICAgICAgICAgY29uc3QgaW5kZXggPSBzdWJzY3JpYmVycy5pbmRleE9mKHN1YnNjcmliZXIpOwogICAgICAgICAgICAgICAgaWYgKGluZGV4ICE9PSAtMSkgewogICAgICAgICAgICAgICAgICAgIHN1YnNjcmliZXJzLnNwbGljZShpbmRleCwgMSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpZiAoc3Vic2NyaWJlcnMubGVuZ3RoID09PSAwKSB7CiAgICAgICAgICAgICAgICAgICAgc3RvcCgpOwogICAgICAgICAgICAgICAgICAgIHN0b3AgPSBudWxsOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9OwogICAgICAgIH0KICAgICAgICByZXR1cm4geyBzZXQsIHVwZGF0ZSwgc3Vic2NyaWJlIH07CiAgICB9CgogICAgLyogbm9kZV9tb2R1bGVzL3N2ZWx0ZXN0cmFwL3NyYy9CdXR0b25Hcm91cC5zdmVsdGUgZ2VuZXJhdGVkIGJ5IFN2ZWx0ZSB2My4zMS4yICovCiAgICBjb25zdCBmaWxlJDEgPSAibm9kZV9tb2R1bGVzL3N2ZWx0ZXN0cmFwL3NyYy9CdXR0b25Hcm91cC5zdmVsdGUiOwoKICAgIGZ1bmN0aW9uIGNyZWF0ZV9mcmFnbWVudCQxKGN0eCkgewogICAgCWxldCBkaXY7CiAgICAJbGV0IGN1cnJlbnQ7CiAgICAJY29uc3QgZGVmYXVsdF9zbG90X3RlbXBsYXRlID0gLyojc2xvdHMqLyBjdHhbNl0uZGVmYXVsdDsKICAgIAljb25zdCBkZWZhdWx0X3Nsb3QgPSBjcmVhdGVfc2xvdChkZWZhdWx0X3Nsb3RfdGVtcGxhdGUsIGN0eCwgLyokJHNjb3BlKi8gY3R4WzVdLCBudWxsKTsKICAgIAlsZXQgZGl2X2xldmVscyA9IFsvKiQkcmVzdFByb3BzKi8gY3R4WzFdLCB7IGNsYXNzOiAvKmNsYXNzZXMqLyBjdHhbMF0gfV07CiAgICAJbGV0IGRpdl9kYXRhID0ge307CgogICAgCWZvciAobGV0IGkgPSAwOyBpIDwgZGl2X2xldmVscy5sZW5ndGg7IGkgKz0gMSkgewogICAgCQlkaXZfZGF0YSA9IGFzc2lnbihkaXZfZGF0YSwgZGl2X2xldmVsc1tpXSk7CiAgICAJfQoKICAgIAljb25zdCBibG9jayA9IHsKICAgIAkJYzogZnVuY3Rpb24gY3JlYXRlKCkgewogICAgCQkJZGl2ID0gZWxlbWVudCgiZGl2Iik7CiAgICAJCQlpZiAoZGVmYXVsdF9zbG90KSBkZWZhdWx0X3Nsb3QuYygpOwogICAgCQkJc2V0X2F0dHJpYnV0ZXMoZGl2LCBkaXZfZGF0YSk7CiAgICAJCQlhZGRfbG9jYXRpb24oZGl2LCBmaWxlJDEsIDE1LCAwLCAzMDUpOwogICAgCQl9LAogICAgCQlsOiBmdW5jdGlvbiBjbGFpbShub2RlcykgewogICAgCQkJdGhyb3cgbmV3IEVycm9yKCJvcHRpb25zLmh5ZHJhdGUgb25seSB3b3JrcyBpZiB0aGUgY29tcG9uZW50IHdhcyBjb21waWxlZCB3aXRoIHRoZSBgaHlkcmF0YWJsZTogdHJ1ZWAgb3B0aW9uIik7CiAgICAJCX0sCiAgICAJCW06IGZ1bmN0aW9uIG1vdW50KHRhcmdldCwgYW5jaG9yKSB7CiAgICAJCQlpbnNlcnRfZGV2KHRhcmdldCwgZGl2LCBhbmNob3IpOwoKICAgIAkJCWlmIChkZWZhdWx0X3Nsb3QpIHsKICAgIAkJCQlkZWZhdWx0X3Nsb3QubShkaXYsIG51bGwpOwogICAgCQkJfQoKICAgIAkJCWN1cnJlbnQgPSB0cnVlOwogICAgCQl9LAogICAgCQlwOiBmdW5jdGlvbiB1cGRhdGUoY3R4LCBbZGlydHldKSB7CiAgICAJCQlpZiAoZGVmYXVsdF9zbG90KSB7CiAgICAJCQkJaWYgKGRlZmF1bHRfc2xvdC5wICYmIGRpcnR5ICYgLyokJHNjb3BlKi8gMzIpIHsKICAgIAkJCQkJdXBkYXRlX3Nsb3QoZGVmYXVsdF9zbG90LCBkZWZhdWx0X3Nsb3RfdGVtcGxhdGUsIGN0eCwgLyokJHNjb3BlKi8gY3R4WzVdLCBkaXJ0eSwgbnVsbCwgbnVsbCk7CiAgICAJCQkJfQogICAgCQkJfQoKICAgIAkJCXNldF9hdHRyaWJ1dGVzKGRpdiwgZGl2X2RhdGEgPSBnZXRfc3ByZWFkX3VwZGF0ZShkaXZfbGV2ZWxzLCBbCiAgICAJCQkJZGlydHkgJiAvKiQkcmVzdFByb3BzKi8gMiAmJiAvKiQkcmVzdFByb3BzKi8gY3R4WzFdLAogICAgCQkJCSghY3VycmVudCB8fCBkaXJ0eSAmIC8qY2xhc3NlcyovIDEpICYmIHsgY2xhc3M6IC8qY2xhc3NlcyovIGN0eFswXSB9CiAgICAJCQldKSk7CiAgICAJCX0sCiAgICAJCWk6IGZ1bmN0aW9uIGludHJvKGxvY2FsKSB7CiAgICAJCQlpZiAoY3VycmVudCkgcmV0dXJuOwogICAgCQkJdHJhbnNpdGlvbl9pbihkZWZhdWx0X3Nsb3QsIGxvY2FsKTsKICAgIAkJCWN1cnJlbnQgPSB0cnVlOwogICAgCQl9LAogICAgCQlvOiBmdW5jdGlvbiBvdXRybyhsb2NhbCkgewogICAgCQkJdHJhbnNpdGlvbl9vdXQoZGVmYXVsdF9zbG90LCBsb2NhbCk7CiAgICAJCQljdXJyZW50ID0gZmFsc2U7CiAgICAJCX0sCiAgICAJCWQ6IGZ1bmN0aW9uIGRlc3Ryb3koZGV0YWNoaW5nKSB7CiAgICAJCQlpZiAoZGV0YWNoaW5nKSBkZXRhY2hfZGV2KGRpdik7CiAgICAJCQlpZiAoZGVmYXVsdF9zbG90KSBkZWZhdWx0X3Nsb3QuZChkZXRhY2hpbmcpOwogICAgCQl9CiAgICAJfTsKCiAgICAJZGlzcGF0Y2hfZGV2KCJTdmVsdGVSZWdpc3RlckJsb2NrIiwgewogICAgCQlibG9jaywKICAgIAkJaWQ6IGNyZWF0ZV9mcmFnbWVudCQxLm5hbWUsCiAgICAJCXR5cGU6ICJjb21wb25lbnQiLAogICAgCQlzb3VyY2U6ICIiLAogICAgCQljdHgKICAgIAl9KTsKCiAgICAJcmV0dXJuIGJsb2NrOwogICAgfQoKICAgIGZ1bmN0aW9uIGluc3RhbmNlJDEoJCRzZWxmLCAkJHByb3BzLCAkJGludmFsaWRhdGUpIHsKICAgIAlsZXQgY2xhc3NlczsKICAgIAljb25zdCBvbWl0X3Byb3BzX25hbWVzID0gWyJjbGFzcyIsInNpemUiLCJ2ZXJ0aWNhbCJdOwogICAgCWxldCAkJHJlc3RQcm9wcyA9IGNvbXB1dGVfcmVzdF9wcm9wcygkJHByb3BzLCBvbWl0X3Byb3BzX25hbWVzKTsKICAgIAlsZXQgeyAkJHNsb3RzOiBzbG90cyA9IHt9LCAkJHNjb3BlIH0gPSAkJHByb3BzOwogICAgCXZhbGlkYXRlX3Nsb3RzKCJCdXR0b25Hcm91cCIsIHNsb3RzLCBbJ2RlZmF1bHQnXSk7CiAgICAJbGV0IHsgY2xhc3M6IGNsYXNzTmFtZSA9ICIiIH0gPSAkJHByb3BzOwogICAgCWxldCB7IHNpemUgPSAiIiB9ID0gJCRwcm9wczsKICAgIAlsZXQgeyB2ZXJ0aWNhbCA9IGZhbHNlIH0gPSAkJHByb3BzOwoKICAgIAkkJHNlbGYuJCRzZXQgPSAkJG5ld19wcm9wcyA9PiB7CiAgICAJCSQkcHJvcHMgPSBhc3NpZ24oYXNzaWduKHt9LCAkJHByb3BzKSwgZXhjbHVkZV9pbnRlcm5hbF9wcm9wcygkJG5ld19wcm9wcykpOwogICAgCQkkJGludmFsaWRhdGUoMSwgJCRyZXN0UHJvcHMgPSBjb21wdXRlX3Jlc3RfcHJvcHMoJCRwcm9wcywgb21pdF9wcm9wc19uYW1lcykpOwogICAgCQlpZiAoImNsYXNzIiBpbiAkJG5ld19wcm9wcykgJCRpbnZhbGlkYXRlKDIsIGNsYXNzTmFtZSA9ICQkbmV3X3Byb3BzLmNsYXNzKTsKICAgIAkJaWYgKCJzaXplIiBpbiAkJG5ld19wcm9wcykgJCRpbnZhbGlkYXRlKDMsIHNpemUgPSAkJG5ld19wcm9wcy5zaXplKTsKICAgIAkJaWYgKCJ2ZXJ0aWNhbCIgaW4gJCRuZXdfcHJvcHMpICQkaW52YWxpZGF0ZSg0LCB2ZXJ0aWNhbCA9ICQkbmV3X3Byb3BzLnZlcnRpY2FsKTsKICAgIAkJaWYgKCIkJHNjb3BlIiBpbiAkJG5ld19wcm9wcykgJCRpbnZhbGlkYXRlKDUsICQkc2NvcGUgPSAkJG5ld19wcm9wcy4kJHNjb3BlKTsKICAgIAl9OwoKICAgIAkkJHNlbGYuJGNhcHR1cmVfc3RhdGUgPSAoKSA9PiAoewogICAgCQljbGFzc25hbWVzLAogICAgCQljbGFzc05hbWUsCiAgICAJCXNpemUsCiAgICAJCXZlcnRpY2FsLAogICAgCQljbGFzc2VzCiAgICAJfSk7CgogICAgCSQkc2VsZi4kaW5qZWN0X3N0YXRlID0gJCRuZXdfcHJvcHMgPT4gewogICAgCQlpZiAoImNsYXNzTmFtZSIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDIsIGNsYXNzTmFtZSA9ICQkbmV3X3Byb3BzLmNsYXNzTmFtZSk7CiAgICAJCWlmICgic2l6ZSIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDMsIHNpemUgPSAkJG5ld19wcm9wcy5zaXplKTsKICAgIAkJaWYgKCJ2ZXJ0aWNhbCIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDQsIHZlcnRpY2FsID0gJCRuZXdfcHJvcHMudmVydGljYWwpOwogICAgCQlpZiAoImNsYXNzZXMiIGluICQkcHJvcHMpICQkaW52YWxpZGF0ZSgwLCBjbGFzc2VzID0gJCRuZXdfcHJvcHMuY2xhc3Nlcyk7CiAgICAJfTsKCiAgICAJaWYgKCQkcHJvcHMgJiYgIiQkaW5qZWN0IiBpbiAkJHByb3BzKSB7CiAgICAJCSQkc2VsZi4kaW5qZWN0X3N0YXRlKCQkcHJvcHMuJCRpbmplY3QpOwogICAgCX0KCiAgICAJJCRzZWxmLiQkLnVwZGF0ZSA9ICgpID0+IHsKICAgIAkJaWYgKCQkc2VsZi4kJC5kaXJ0eSAmIC8qY2xhc3NOYW1lLCBzaXplLCB2ZXJ0aWNhbCovIDI4KSB7CiAgICAJCQkgJCRpbnZhbGlkYXRlKDAsIGNsYXNzZXMgPSBjbGFzc25hbWVzKGNsYXNzTmFtZSwgc2l6ZSA/IGBidG4tZ3JvdXAtJHtzaXplfWAgOiBmYWxzZSwgdmVydGljYWwgPyAiYnRuLWdyb3VwLXZlcnRpY2FsIiA6ICJidG4tZ3JvdXAiKSk7CiAgICAJCX0KICAgIAl9OwoKICAgIAlyZXR1cm4gW2NsYXNzZXMsICQkcmVzdFByb3BzLCBjbGFzc05hbWUsIHNpemUsIHZlcnRpY2FsLCAkJHNjb3BlLCBzbG90c107CiAgICB9CgogICAgY2xhc3MgQnV0dG9uR3JvdXAgZXh0ZW5kcyBTdmVsdGVDb21wb25lbnREZXYgewogICAgCWNvbnN0cnVjdG9yKG9wdGlvbnMpIHsKICAgIAkJc3VwZXIob3B0aW9ucyk7CiAgICAJCWluaXQodGhpcywgb3B0aW9ucywgaW5zdGFuY2UkMSwgY3JlYXRlX2ZyYWdtZW50JDEsIHNhZmVfbm90X2VxdWFsLCB7IGNsYXNzOiAyLCBzaXplOiAzLCB2ZXJ0aWNhbDogNCB9KTsKCiAgICAJCWRpc3BhdGNoX2RldigiU3ZlbHRlUmVnaXN0ZXJDb21wb25lbnQiLCB7CiAgICAJCQljb21wb25lbnQ6IHRoaXMsCiAgICAJCQl0YWdOYW1lOiAiQnV0dG9uR3JvdXAiLAogICAgCQkJb3B0aW9ucywKICAgIAkJCWlkOiBjcmVhdGVfZnJhZ21lbnQkMS5uYW1lCiAgICAJCX0pOwogICAgCX0KCiAgICAJZ2V0IGNsYXNzKCkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxCdXR0b25Hcm91cD46IFByb3BzIGNhbm5vdCBiZSByZWFkIGRpcmVjdGx5IGZyb20gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCXNldCBjbGFzcyh2YWx1ZSkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxCdXR0b25Hcm91cD46IFByb3BzIGNhbm5vdCBiZSBzZXQgZGlyZWN0bHkgb24gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCWdldCBzaXplKCkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxCdXR0b25Hcm91cD46IFByb3BzIGNhbm5vdCBiZSByZWFkIGRpcmVjdGx5IGZyb20gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCXNldCBzaXplKHZhbHVlKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPEJ1dHRvbkdyb3VwPjogUHJvcHMgY2Fubm90IGJlIHNldCBkaXJlY3RseSBvbiB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJZ2V0IHZlcnRpY2FsKCkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxCdXR0b25Hcm91cD46IFByb3BzIGNhbm5vdCBiZSByZWFkIGRpcmVjdGx5IGZyb20gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCXNldCB2ZXJ0aWNhbCh2YWx1ZSkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxCdXR0b25Hcm91cD46IFByb3BzIGNhbm5vdCBiZSBzZXQgZGlyZWN0bHkgb24gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CiAgICB9CgogICAgLyogbm9kZV9tb2R1bGVzL3N2ZWx0ZXN0cmFwL3NyYy9Db2wuc3ZlbHRlIGdlbmVyYXRlZCBieSBTdmVsdGUgdjMuMzEuMiAqLwogICAgY29uc3QgZmlsZSQyID0gIm5vZGVfbW9kdWxlcy9zdmVsdGVzdHJhcC9zcmMvQ29sLnN2ZWx0ZSI7CgogICAgZnVuY3Rpb24gY3JlYXRlX2ZyYWdtZW50JDIoY3R4KSB7CiAgICAJbGV0IGRpdjsKICAgIAlsZXQgZGl2X2NsYXNzX3ZhbHVlOwogICAgCWxldCBjdXJyZW50OwogICAgCWNvbnN0IGRlZmF1bHRfc2xvdF90ZW1wbGF0ZSA9IC8qI3Nsb3RzKi8gY3R4WzldLmRlZmF1bHQ7CiAgICAJY29uc3QgZGVmYXVsdF9zbG90ID0gY3JlYXRlX3Nsb3QoZGVmYXVsdF9zbG90X3RlbXBsYXRlLCBjdHgsIC8qJCRzY29wZSovIGN0eFs4XSwgbnVsbCk7CgogICAgCWxldCBkaXZfbGV2ZWxzID0gWwogICAgCQkvKiQkcmVzdFByb3BzKi8gY3R4WzFdLAogICAgCQl7CiAgICAJCQljbGFzczogZGl2X2NsYXNzX3ZhbHVlID0gLypjb2xDbGFzc2VzKi8gY3R4WzBdLmpvaW4oIiAiKQogICAgCQl9CiAgICAJXTsKCiAgICAJbGV0IGRpdl9kYXRhID0ge307CgogICAgCWZvciAobGV0IGkgPSAwOyBpIDwgZGl2X2xldmVscy5sZW5ndGg7IGkgKz0gMSkgewogICAgCQlkaXZfZGF0YSA9IGFzc2lnbihkaXZfZGF0YSwgZGl2X2xldmVsc1tpXSk7CiAgICAJfQoKICAgIAljb25zdCBibG9jayA9IHsKICAgIAkJYzogZnVuY3Rpb24gY3JlYXRlKCkgewogICAgCQkJZGl2ID0gZWxlbWVudCgiZGl2Iik7CiAgICAJCQlpZiAoZGVmYXVsdF9zbG90KSBkZWZhdWx0X3Nsb3QuYygpOwogICAgCQkJc2V0X2F0dHJpYnV0ZXMoZGl2LCBkaXZfZGF0YSk7CiAgICAJCQlhZGRfbG9jYXRpb24oZGl2LCBmaWxlJDIsIDU4LCAwLCAxMzg4KTsKICAgIAkJfSwKICAgIAkJbDogZnVuY3Rpb24gY2xhaW0obm9kZXMpIHsKICAgIAkJCXRocm93IG5ldyBFcnJvcigib3B0aW9ucy5oeWRyYXRlIG9ubHkgd29ya3MgaWYgdGhlIGNvbXBvbmVudCB3YXMgY29tcGlsZWQgd2l0aCB0aGUgYGh5ZHJhdGFibGU6IHRydWVgIG9wdGlvbiIpOwogICAgCQl9LAogICAgCQltOiBmdW5jdGlvbiBtb3VudCh0YXJnZXQsIGFuY2hvcikgewogICAgCQkJaW5zZXJ0X2Rldih0YXJnZXQsIGRpdiwgYW5jaG9yKTsKCiAgICAJCQlpZiAoZGVmYXVsdF9zbG90KSB7CiAgICAJCQkJZGVmYXVsdF9zbG90Lm0oZGl2LCBudWxsKTsKICAgIAkJCX0KCiAgICAJCQljdXJyZW50ID0gdHJ1ZTsKICAgIAkJfSwKICAgIAkJcDogZnVuY3Rpb24gdXBkYXRlKGN0eCwgW2RpcnR5XSkgewogICAgCQkJaWYgKGRlZmF1bHRfc2xvdCkgewogICAgCQkJCWlmIChkZWZhdWx0X3Nsb3QucCAmJiBkaXJ0eSAmIC8qJCRzY29wZSovIDI1NikgewogICAgCQkJCQl1cGRhdGVfc2xvdChkZWZhdWx0X3Nsb3QsIGRlZmF1bHRfc2xvdF90ZW1wbGF0ZSwgY3R4LCAvKiQkc2NvcGUqLyBjdHhbOF0sIGRpcnR5LCBudWxsLCBudWxsKTsKICAgIAkJCQl9CiAgICAJCQl9CgogICAgCQkJc2V0X2F0dHJpYnV0ZXMoZGl2LCBkaXZfZGF0YSA9IGdldF9zcHJlYWRfdXBkYXRlKGRpdl9sZXZlbHMsIFsKICAgIAkJCQlkaXJ0eSAmIC8qJCRyZXN0UHJvcHMqLyAyICYmIC8qJCRyZXN0UHJvcHMqLyBjdHhbMV0sCiAgICAJCQkJeyBjbGFzczogZGl2X2NsYXNzX3ZhbHVlIH0KICAgIAkJCV0pKTsKICAgIAkJfSwKICAgIAkJaTogZnVuY3Rpb24gaW50cm8obG9jYWwpIHsKICAgIAkJCWlmIChjdXJyZW50KSByZXR1cm47CiAgICAJCQl0cmFuc2l0aW9uX2luKGRlZmF1bHRfc2xvdCwgbG9jYWwpOwogICAgCQkJY3VycmVudCA9IHRydWU7CiAgICAJCX0sCiAgICAJCW86IGZ1bmN0aW9uIG91dHJvKGxvY2FsKSB7CiAgICAJCQl0cmFuc2l0aW9uX291dChkZWZhdWx0X3Nsb3QsIGxvY2FsKTsKICAgIAkJCWN1cnJlbnQgPSBmYWxzZTsKICAgIAkJfSwKICAgIAkJZDogZnVuY3Rpb24gZGVzdHJveShkZXRhY2hpbmcpIHsKICAgIAkJCWlmIChkZXRhY2hpbmcpIGRldGFjaF9kZXYoZGl2KTsKICAgIAkJCWlmIChkZWZhdWx0X3Nsb3QpIGRlZmF1bHRfc2xvdC5kKGRldGFjaGluZyk7CiAgICAJCX0KICAgIAl9OwoKICAgIAlkaXNwYXRjaF9kZXYoIlN2ZWx0ZVJlZ2lzdGVyQmxvY2siLCB7CiAgICAJCWJsb2NrLAogICAgCQlpZDogY3JlYXRlX2ZyYWdtZW50JDIubmFtZSwKICAgIAkJdHlwZTogImNvbXBvbmVudCIsCiAgICAJCXNvdXJjZTogIiIsCiAgICAJCWN0eAogICAgCX0pOwoKICAgIAlyZXR1cm4gYmxvY2s7CiAgICB9CgogICAgZnVuY3Rpb24gaW5zdGFuY2UkMigkJHNlbGYsICQkcHJvcHMsICQkaW52YWxpZGF0ZSkgewogICAgCWNvbnN0IG9taXRfcHJvcHNfbmFtZXMgPSBbImNsYXNzIiwieHMiLCJzbSIsIm1kIiwibGciLCJ4bCJdOwogICAgCWxldCAkJHJlc3RQcm9wcyA9IGNvbXB1dGVfcmVzdF9wcm9wcygkJHByb3BzLCBvbWl0X3Byb3BzX25hbWVzKTsKICAgIAlsZXQgeyAkJHNsb3RzOiBzbG90cyA9IHt9LCAkJHNjb3BlIH0gPSAkJHByb3BzOwogICAgCXZhbGlkYXRlX3Nsb3RzKCJDb2wiLCBzbG90cywgWydkZWZhdWx0J10pOwogICAgCWxldCB7IGNsYXNzOiBjbGFzc05hbWUgPSAiIiB9ID0gJCRwcm9wczsKICAgIAlsZXQgeyB4cyA9IHVuZGVmaW5lZCB9ID0gJCRwcm9wczsKICAgIAlsZXQgeyBzbSA9IHVuZGVmaW5lZCB9ID0gJCRwcm9wczsKICAgIAlsZXQgeyBtZCA9IHVuZGVmaW5lZCB9ID0gJCRwcm9wczsKICAgIAlsZXQgeyBsZyA9IHVuZGVmaW5lZCB9ID0gJCRwcm9wczsKICAgIAlsZXQgeyB4bCA9IHVuZGVmaW5lZCB9ID0gJCRwcm9wczsKICAgIAljb25zdCBjb2xDbGFzc2VzID0gW107CiAgICAJY29uc3QgbG9va3VwID0geyB4cywgc20sIG1kLCBsZywgeGwgfTsKCiAgICAJT2JqZWN0LmtleXMobG9va3VwKS5mb3JFYWNoKGNvbFdpZHRoID0+IHsKICAgIAkJY29uc3QgY29sdW1uUHJvcCA9IGxvb2t1cFtjb2xXaWR0aF07CgogICAgCQlpZiAoIWNvbHVtblByb3AgJiYgY29sdW1uUHJvcCAhPT0gIiIpIHsKICAgIAkJCXJldHVybjsgLy9ubyB2YWx1ZSBmb3IgdGhpcyB3aWR0aAogICAgCQl9CgogICAgCQljb25zdCBpc1hzID0gY29sV2lkdGggPT09ICJ4cyI7CgogICAgCQlpZiAoaXNPYmplY3QoY29sdW1uUHJvcCkpIHsKICAgIAkJCWNvbnN0IGNvbFNpemVJbnRlcmZpeCA9IGlzWHMgPyAiLSIgOiBgLSR7Y29sV2lkdGh9LWA7CiAgICAJCQljb25zdCBjb2xDbGFzcyA9IGdldENvbHVtblNpemVDbGFzcyhpc1hzLCBjb2xXaWR0aCwgY29sdW1uUHJvcC5zaXplKTsKCiAgICAJCQlpZiAoY29sdW1uUHJvcC5zaXplIHx8IGNvbHVtblByb3Auc2l6ZSA9PT0gIiIpIHsKICAgIAkJCQljb2xDbGFzc2VzLnB1c2goY29sQ2xhc3MpOwogICAgCQkJfQoKICAgIAkJCWlmIChjb2x1bW5Qcm9wLnB1c2gpIHsKICAgIAkJCQljb2xDbGFzc2VzLnB1c2goYHB1c2gke2NvbFNpemVJbnRlcmZpeH0ke2NvbHVtblByb3AucHVzaH1gKTsKICAgIAkJCX0KCiAgICAJCQlpZiAoY29sdW1uUHJvcC5wdWxsKSB7CiAgICAJCQkJY29sQ2xhc3Nlcy5wdXNoKGBwdWxsJHtjb2xTaXplSW50ZXJmaXh9JHtjb2x1bW5Qcm9wLnB1bGx9YCk7CiAgICAJCQl9CgogICAgCQkJaWYgKGNvbHVtblByb3Aub2Zmc2V0KSB7CiAgICAJCQkJY29sQ2xhc3Nlcy5wdXNoKGBvZmZzZXQke2NvbFNpemVJbnRlcmZpeH0ke2NvbHVtblByb3Aub2Zmc2V0fWApOwogICAgCQkJfQogICAgCQl9IGVsc2UgewogICAgCQkJY29sQ2xhc3Nlcy5wdXNoKGdldENvbHVtblNpemVDbGFzcyhpc1hzLCBjb2xXaWR0aCwgY29sdW1uUHJvcCkpOwogICAgCQl9CiAgICAJfSk7CgogICAgCWlmICghY29sQ2xhc3Nlcy5sZW5ndGgpIHsKICAgIAkJY29sQ2xhc3Nlcy5wdXNoKCJjb2wiKTsKICAgIAl9CgogICAgCWlmIChjbGFzc05hbWUpIHsKICAgIAkJY29sQ2xhc3Nlcy5wdXNoKGNsYXNzTmFtZSk7CiAgICAJfQoKICAgIAkkJHNlbGYuJCRzZXQgPSAkJG5ld19wcm9wcyA9PiB7CiAgICAJCSQkcHJvcHMgPSBhc3NpZ24oYXNzaWduKHt9LCAkJHByb3BzKSwgZXhjbHVkZV9pbnRlcm5hbF9wcm9wcygkJG5ld19wcm9wcykpOwogICAgCQkkJGludmFsaWRhdGUoMSwgJCRyZXN0UHJvcHMgPSBjb21wdXRlX3Jlc3RfcHJvcHMoJCRwcm9wcywgb21pdF9wcm9wc19uYW1lcykpOwogICAgCQlpZiAoImNsYXNzIiBpbiAkJG5ld19wcm9wcykgJCRpbnZhbGlkYXRlKDIsIGNsYXNzTmFtZSA9ICQkbmV3X3Byb3BzLmNsYXNzKTsKICAgIAkJaWYgKCJ4cyIgaW4gJCRuZXdfcHJvcHMpICQkaW52YWxpZGF0ZSgzLCB4cyA9ICQkbmV3X3Byb3BzLnhzKTsKICAgIAkJaWYgKCJzbSIgaW4gJCRuZXdfcHJvcHMpICQkaW52YWxpZGF0ZSg0LCBzbSA9ICQkbmV3X3Byb3BzLnNtKTsKICAgIAkJaWYgKCJtZCIgaW4gJCRuZXdfcHJvcHMpICQkaW52YWxpZGF0ZSg1LCBtZCA9ICQkbmV3X3Byb3BzLm1kKTsKICAgIAkJaWYgKCJsZyIgaW4gJCRuZXdfcHJvcHMpICQkaW52YWxpZGF0ZSg2LCBsZyA9ICQkbmV3X3Byb3BzLmxnKTsKICAgIAkJaWYgKCJ4bCIgaW4gJCRuZXdfcHJvcHMpICQkaW52YWxpZGF0ZSg3LCB4bCA9ICQkbmV3X3Byb3BzLnhsKTsKICAgIAkJaWYgKCIkJHNjb3BlIiBpbiAkJG5ld19wcm9wcykgJCRpbnZhbGlkYXRlKDgsICQkc2NvcGUgPSAkJG5ld19wcm9wcy4kJHNjb3BlKTsKICAgIAl9OwoKICAgIAkkJHNlbGYuJGNhcHR1cmVfc3RhdGUgPSAoKSA9PiAoewogICAgCQlnZXRDb2x1bW5TaXplQ2xhc3MsCiAgICAJCWlzT2JqZWN0LAogICAgCQljbGFzc05hbWUsCiAgICAJCXhzLAogICAgCQlzbSwKICAgIAkJbWQsCiAgICAJCWxnLAogICAgCQl4bCwKICAgIAkJY29sQ2xhc3NlcywKICAgIAkJbG9va3VwCiAgICAJfSk7CgogICAgCSQkc2VsZi4kaW5qZWN0X3N0YXRlID0gJCRuZXdfcHJvcHMgPT4gewogICAgCQlpZiAoImNsYXNzTmFtZSIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDIsIGNsYXNzTmFtZSA9ICQkbmV3X3Byb3BzLmNsYXNzTmFtZSk7CiAgICAJCWlmICgieHMiIGluICQkcHJvcHMpICQkaW52YWxpZGF0ZSgzLCB4cyA9ICQkbmV3X3Byb3BzLnhzKTsKICAgIAkJaWYgKCJzbSIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDQsIHNtID0gJCRuZXdfcHJvcHMuc20pOwogICAgCQlpZiAoIm1kIiBpbiAkJHByb3BzKSAkJGludmFsaWRhdGUoNSwgbWQgPSAkJG5ld19wcm9wcy5tZCk7CiAgICAJCWlmICgibGciIGluICQkcHJvcHMpICQkaW52YWxpZGF0ZSg2LCBsZyA9ICQkbmV3X3Byb3BzLmxnKTsKICAgIAkJaWYgKCJ4bCIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDcsIHhsID0gJCRuZXdfcHJvcHMueGwpOwogICAgCX07CgogICAgCWlmICgkJHByb3BzICYmICIkJGluamVjdCIgaW4gJCRwcm9wcykgewogICAgCQkkJHNlbGYuJGluamVjdF9zdGF0ZSgkJHByb3BzLiQkaW5qZWN0KTsKICAgIAl9CgogICAgCXJldHVybiBbY29sQ2xhc3NlcywgJCRyZXN0UHJvcHMsIGNsYXNzTmFtZSwgeHMsIHNtLCBtZCwgbGcsIHhsLCAkJHNjb3BlLCBzbG90c107CiAgICB9CgogICAgY2xhc3MgQ29sIGV4dGVuZHMgU3ZlbHRlQ29tcG9uZW50RGV2IHsKICAgIAljb25zdHJ1Y3RvcihvcHRpb25zKSB7CiAgICAJCXN1cGVyKG9wdGlvbnMpOwoKICAgIAkJaW5pdCh0aGlzLCBvcHRpb25zLCBpbnN0YW5jZSQyLCBjcmVhdGVfZnJhZ21lbnQkMiwgc2FmZV9ub3RfZXF1YWwsIHsKICAgIAkJCWNsYXNzOiAyLAogICAgCQkJeHM6IDMsCiAgICAJCQlzbTogNCwKICAgIAkJCW1kOiA1LAogICAgCQkJbGc6IDYsCiAgICAJCQl4bDogNwogICAgCQl9KTsKCiAgICAJCWRpc3BhdGNoX2RldigiU3ZlbHRlUmVnaXN0ZXJDb21wb25lbnQiLCB7CiAgICAJCQljb21wb25lbnQ6IHRoaXMsCiAgICAJCQl0YWdOYW1lOiAiQ29sIiwKICAgIAkJCW9wdGlvbnMsCiAgICAJCQlpZDogY3JlYXRlX2ZyYWdtZW50JDIubmFtZQogICAgCQl9KTsKICAgIAl9CgogICAgCWdldCBjbGFzcygpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8Q29sPjogUHJvcHMgY2Fubm90IGJlIHJlYWQgZGlyZWN0bHkgZnJvbSB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJc2V0IGNsYXNzKHZhbHVlKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPENvbD46IFByb3BzIGNhbm5vdCBiZSBzZXQgZGlyZWN0bHkgb24gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCWdldCB4cygpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8Q29sPjogUHJvcHMgY2Fubm90IGJlIHJlYWQgZGlyZWN0bHkgZnJvbSB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJc2V0IHhzKHZhbHVlKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPENvbD46IFByb3BzIGNhbm5vdCBiZSBzZXQgZGlyZWN0bHkgb24gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCWdldCBzbSgpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8Q29sPjogUHJvcHMgY2Fubm90IGJlIHJlYWQgZGlyZWN0bHkgZnJvbSB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJc2V0IHNtKHZhbHVlKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPENvbD46IFByb3BzIGNhbm5vdCBiZSBzZXQgZGlyZWN0bHkgb24gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCWdldCBtZCgpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8Q29sPjogUHJvcHMgY2Fubm90IGJlIHJlYWQgZGlyZWN0bHkgZnJvbSB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJc2V0IG1kKHZhbHVlKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPENvbD46IFByb3BzIGNhbm5vdCBiZSBzZXQgZGlyZWN0bHkgb24gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCWdldCBsZygpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8Q29sPjogUHJvcHMgY2Fubm90IGJlIHJlYWQgZGlyZWN0bHkgZnJvbSB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJc2V0IGxnKHZhbHVlKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPENvbD46IFByb3BzIGNhbm5vdCBiZSBzZXQgZGlyZWN0bHkgb24gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCWdldCB4bCgpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8Q29sPjogUHJvcHMgY2Fubm90IGJlIHJlYWQgZGlyZWN0bHkgZnJvbSB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJc2V0IHhsKHZhbHVlKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPENvbD46IFByb3BzIGNhbm5vdCBiZSBzZXQgZGlyZWN0bHkgb24gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CiAgICB9CgogICAgLyogbm9kZV9tb2R1bGVzL3N2ZWx0ZXN0cmFwL3NyYy9Db250YWluZXIuc3ZlbHRlIGdlbmVyYXRlZCBieSBTdmVsdGUgdjMuMzEuMiAqLwogICAgY29uc3QgZmlsZSQzID0gIm5vZGVfbW9kdWxlcy9zdmVsdGVzdHJhcC9zcmMvQ29udGFpbmVyLnN2ZWx0ZSI7CgogICAgZnVuY3Rpb24gY3JlYXRlX2ZyYWdtZW50JDMoY3R4KSB7CiAgICAJbGV0IGRpdjsKICAgIAlsZXQgY3VycmVudDsKICAgIAljb25zdCBkZWZhdWx0X3Nsb3RfdGVtcGxhdGUgPSAvKiNzbG90cyovIGN0eFs1XS5kZWZhdWx0OwogICAgCWNvbnN0IGRlZmF1bHRfc2xvdCA9IGNyZWF0ZV9zbG90KGRlZmF1bHRfc2xvdF90ZW1wbGF0ZSwgY3R4LCAvKiQkc2NvcGUqLyBjdHhbNF0sIG51bGwpOwogICAgCWxldCBkaXZfbGV2ZWxzID0gWy8qJCRyZXN0UHJvcHMqLyBjdHhbMV0sIHsgY2xhc3M6IC8qY2xhc3NlcyovIGN0eFswXSB9XTsKICAgIAlsZXQgZGl2X2RhdGEgPSB7fTsKCiAgICAJZm9yIChsZXQgaSA9IDA7IGkgPCBkaXZfbGV2ZWxzLmxlbmd0aDsgaSArPSAxKSB7CiAgICAJCWRpdl9kYXRhID0gYXNzaWduKGRpdl9kYXRhLCBkaXZfbGV2ZWxzW2ldKTsKICAgIAl9CgogICAgCWNvbnN0IGJsb2NrID0gewogICAgCQljOiBmdW5jdGlvbiBjcmVhdGUoKSB7CiAgICAJCQlkaXYgPSBlbGVtZW50KCJkaXYiKTsKICAgIAkJCWlmIChkZWZhdWx0X3Nsb3QpIGRlZmF1bHRfc2xvdC5jKCk7CiAgICAJCQlzZXRfYXR0cmlidXRlcyhkaXYsIGRpdl9kYXRhKTsKICAgIAkJCWFkZF9sb2NhdGlvbihkaXYsIGZpbGUkMywgMTAsIDAsIDIyMCk7CiAgICAJCX0sCiAgICAJCWw6IGZ1bmN0aW9uIGNsYWltKG5vZGVzKSB7CiAgICAJCQl0aHJvdyBuZXcgRXJyb3IoIm9wdGlvbnMuaHlkcmF0ZSBvbmx5IHdvcmtzIGlmIHRoZSBjb21wb25lbnQgd2FzIGNvbXBpbGVkIHdpdGggdGhlIGBoeWRyYXRhYmxlOiB0cnVlYCBvcHRpb24iKTsKICAgIAkJfSwKICAgIAkJbTogZnVuY3Rpb24gbW91bnQodGFyZ2V0LCBhbmNob3IpIHsKICAgIAkJCWluc2VydF9kZXYodGFyZ2V0LCBkaXYsIGFuY2hvcik7CgogICAgCQkJaWYgKGRlZmF1bHRfc2xvdCkgewogICAgCQkJCWRlZmF1bHRfc2xvdC5tKGRpdiwgbnVsbCk7CiAgICAJCQl9CgogICAgCQkJY3VycmVudCA9IHRydWU7CiAgICAJCX0sCiAgICAJCXA6IGZ1bmN0aW9uIHVwZGF0ZShjdHgsIFtkaXJ0eV0pIHsKICAgIAkJCWlmIChkZWZhdWx0X3Nsb3QpIHsKICAgIAkJCQlpZiAoZGVmYXVsdF9zbG90LnAgJiYgZGlydHkgJiAvKiQkc2NvcGUqLyAxNikgewogICAgCQkJCQl1cGRhdGVfc2xvdChkZWZhdWx0X3Nsb3QsIGRlZmF1bHRfc2xvdF90ZW1wbGF0ZSwgY3R4LCAvKiQkc2NvcGUqLyBjdHhbNF0sIGRpcnR5LCBudWxsLCBudWxsKTsKICAgIAkJCQl9CiAgICAJCQl9CgogICAgCQkJc2V0X2F0dHJpYnV0ZXMoZGl2LCBkaXZfZGF0YSA9IGdldF9zcHJlYWRfdXBkYXRlKGRpdl9sZXZlbHMsIFsKICAgIAkJCQlkaXJ0eSAmIC8qJCRyZXN0UHJvcHMqLyAyICYmIC8qJCRyZXN0UHJvcHMqLyBjdHhbMV0sCiAgICAJCQkJKCFjdXJyZW50IHx8IGRpcnR5ICYgLypjbGFzc2VzKi8gMSkgJiYgeyBjbGFzczogLypjbGFzc2VzKi8gY3R4WzBdIH0KICAgIAkJCV0pKTsKICAgIAkJfSwKICAgIAkJaTogZnVuY3Rpb24gaW50cm8obG9jYWwpIHsKICAgIAkJCWlmIChjdXJyZW50KSByZXR1cm47CiAgICAJCQl0cmFuc2l0aW9uX2luKGRlZmF1bHRfc2xvdCwgbG9jYWwpOwogICAgCQkJY3VycmVudCA9IHRydWU7CiAgICAJCX0sCiAgICAJCW86IGZ1bmN0aW9uIG91dHJvKGxvY2FsKSB7CiAgICAJCQl0cmFuc2l0aW9uX291dChkZWZhdWx0X3Nsb3QsIGxvY2FsKTsKICAgIAkJCWN1cnJlbnQgPSBmYWxzZTsKICAgIAkJfSwKICAgIAkJZDogZnVuY3Rpb24gZGVzdHJveShkZXRhY2hpbmcpIHsKICAgIAkJCWlmIChkZXRhY2hpbmcpIGRldGFjaF9kZXYoZGl2KTsKICAgIAkJCWlmIChkZWZhdWx0X3Nsb3QpIGRlZmF1bHRfc2xvdC5kKGRldGFjaGluZyk7CiAgICAJCX0KICAgIAl9OwoKICAgIAlkaXNwYXRjaF9kZXYoIlN2ZWx0ZVJlZ2lzdGVyQmxvY2siLCB7CiAgICAJCWJsb2NrLAogICAgCQlpZDogY3JlYXRlX2ZyYWdtZW50JDMubmFtZSwKICAgIAkJdHlwZTogImNvbXBvbmVudCIsCiAgICAJCXNvdXJjZTogIiIsCiAgICAJCWN0eAogICAgCX0pOwoKICAgIAlyZXR1cm4gYmxvY2s7CiAgICB9CgogICAgZnVuY3Rpb24gaW5zdGFuY2UkMygkJHNlbGYsICQkcHJvcHMsICQkaW52YWxpZGF0ZSkgewogICAgCWxldCBjbGFzc2VzOwogICAgCWNvbnN0IG9taXRfcHJvcHNfbmFtZXMgPSBbImNsYXNzIiwiZmx1aWQiXTsKICAgIAlsZXQgJCRyZXN0UHJvcHMgPSBjb21wdXRlX3Jlc3RfcHJvcHMoJCRwcm9wcywgb21pdF9wcm9wc19uYW1lcyk7CiAgICAJbGV0IHsgJCRzbG90czogc2xvdHMgPSB7fSwgJCRzY29wZSB9ID0gJCRwcm9wczsKICAgIAl2YWxpZGF0ZV9zbG90cygiQ29udGFpbmVyIiwgc2xvdHMsIFsnZGVmYXVsdCddKTsKICAgIAlsZXQgeyBjbGFzczogY2xhc3NOYW1lID0gIiIgfSA9ICQkcHJvcHM7CiAgICAJbGV0IHsgZmx1aWQgPSBmYWxzZSB9ID0gJCRwcm9wczsKCiAgICAJJCRzZWxmLiQkc2V0ID0gJCRuZXdfcHJvcHMgPT4gewogICAgCQkkJHByb3BzID0gYXNzaWduKGFzc2lnbih7fSwgJCRwcm9wcyksIGV4Y2x1ZGVfaW50ZXJuYWxfcHJvcHMoJCRuZXdfcHJvcHMpKTsKICAgIAkJJCRpbnZhbGlkYXRlKDEsICQkcmVzdFByb3BzID0gY29tcHV0ZV9yZXN0X3Byb3BzKCQkcHJvcHMsIG9taXRfcHJvcHNfbmFtZXMpKTsKICAgIAkJaWYgKCJjbGFzcyIgaW4gJCRuZXdfcHJvcHMpICQkaW52YWxpZGF0ZSgyLCBjbGFzc05hbWUgPSAkJG5ld19wcm9wcy5jbGFzcyk7CiAgICAJCWlmICgiZmx1aWQiIGluICQkbmV3X3Byb3BzKSAkJGludmFsaWRhdGUoMywgZmx1aWQgPSAkJG5ld19wcm9wcy5mbHVpZCk7CiAgICAJCWlmICgiJCRzY29wZSIgaW4gJCRuZXdfcHJvcHMpICQkaW52YWxpZGF0ZSg0LCAkJHNjb3BlID0gJCRuZXdfcHJvcHMuJCRzY29wZSk7CiAgICAJfTsKCiAgICAJJCRzZWxmLiRjYXB0dXJlX3N0YXRlID0gKCkgPT4gKHsgY2xhc3NuYW1lcywgY2xhc3NOYW1lLCBmbHVpZCwgY2xhc3NlcyB9KTsKCiAgICAJJCRzZWxmLiRpbmplY3Rfc3RhdGUgPSAkJG5ld19wcm9wcyA9PiB7CiAgICAJCWlmICgiY2xhc3NOYW1lIiBpbiAkJHByb3BzKSAkJGludmFsaWRhdGUoMiwgY2xhc3NOYW1lID0gJCRuZXdfcHJvcHMuY2xhc3NOYW1lKTsKICAgIAkJaWYgKCJmbHVpZCIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDMsIGZsdWlkID0gJCRuZXdfcHJvcHMuZmx1aWQpOwogICAgCQlpZiAoImNsYXNzZXMiIGluICQkcHJvcHMpICQkaW52YWxpZGF0ZSgwLCBjbGFzc2VzID0gJCRuZXdfcHJvcHMuY2xhc3Nlcyk7CiAgICAJfTsKCiAgICAJaWYgKCQkcHJvcHMgJiYgIiQkaW5qZWN0IiBpbiAkJHByb3BzKSB7CiAgICAJCSQkc2VsZi4kaW5qZWN0X3N0YXRlKCQkcHJvcHMuJCRpbmplY3QpOwogICAgCX0KCiAgICAJJCRzZWxmLiQkLnVwZGF0ZSA9ICgpID0+IHsKICAgIAkJaWYgKCQkc2VsZi4kJC5kaXJ0eSAmIC8qY2xhc3NOYW1lLCBmbHVpZCovIDEyKSB7CiAgICAJCQkgJCRpbnZhbGlkYXRlKDAsIGNsYXNzZXMgPSBjbGFzc25hbWVzKGNsYXNzTmFtZSwgZmx1aWQgPyAiY29udGFpbmVyLWZsdWlkIiA6ICJjb250YWluZXIiKSk7CiAgICAJCX0KICAgIAl9OwoKICAgIAlyZXR1cm4gW2NsYXNzZXMsICQkcmVzdFByb3BzLCBjbGFzc05hbWUsIGZsdWlkLCAkJHNjb3BlLCBzbG90c107CiAgICB9CgogICAgY2xhc3MgQ29udGFpbmVyIGV4dGVuZHMgU3ZlbHRlQ29tcG9uZW50RGV2IHsKICAgIAljb25zdHJ1Y3RvcihvcHRpb25zKSB7CiAgICAJCXN1cGVyKG9wdGlvbnMpOwogICAgCQlpbml0KHRoaXMsIG9wdGlvbnMsIGluc3RhbmNlJDMsIGNyZWF0ZV9mcmFnbWVudCQzLCBzYWZlX25vdF9lcXVhbCwgeyBjbGFzczogMiwgZmx1aWQ6IDMgfSk7CgogICAgCQlkaXNwYXRjaF9kZXYoIlN2ZWx0ZVJlZ2lzdGVyQ29tcG9uZW50IiwgewogICAgCQkJY29tcG9uZW50OiB0aGlzLAogICAgCQkJdGFnTmFtZTogIkNvbnRhaW5lciIsCiAgICAJCQlvcHRpb25zLAogICAgCQkJaWQ6IGNyZWF0ZV9mcmFnbWVudCQzLm5hbWUKICAgIAkJfSk7CiAgICAJfQoKICAgIAlnZXQgY2xhc3MoKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPENvbnRhaW5lcj46IFByb3BzIGNhbm5vdCBiZSByZWFkIGRpcmVjdGx5IGZyb20gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCXNldCBjbGFzcyh2YWx1ZSkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxDb250YWluZXI+OiBQcm9wcyBjYW5ub3QgYmUgc2V0IGRpcmVjdGx5IG9uIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlnZXQgZmx1aWQoKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPENvbnRhaW5lcj46IFByb3BzIGNhbm5vdCBiZSByZWFkIGRpcmVjdGx5IGZyb20gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCXNldCBmbHVpZCh2YWx1ZSkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxDb250YWluZXI+OiBQcm9wcyBjYW5ub3QgYmUgc2V0IGRpcmVjdGx5IG9uIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQogICAgfQoKICAgIC8qIG5vZGVfbW9kdWxlcy9zdmVsdGVzdHJhcC9zcmMvRm9ybS5zdmVsdGUgZ2VuZXJhdGVkIGJ5IFN2ZWx0ZSB2My4zMS4yICovCiAgICBjb25zdCBmaWxlJDQgPSAibm9kZV9tb2R1bGVzL3N2ZWx0ZXN0cmFwL3NyYy9Gb3JtLnN2ZWx0ZSI7CgogICAgZnVuY3Rpb24gY3JlYXRlX2ZyYWdtZW50JDQoY3R4KSB7CiAgICAJbGV0IGZvcm07CiAgICAJbGV0IGN1cnJlbnQ7CiAgICAJbGV0IG1vdW50ZWQ7CiAgICAJbGV0IGRpc3Bvc2U7CiAgICAJY29uc3QgZGVmYXVsdF9zbG90X3RlbXBsYXRlID0gLyojc2xvdHMqLyBjdHhbNV0uZGVmYXVsdDsKICAgIAljb25zdCBkZWZhdWx0X3Nsb3QgPSBjcmVhdGVfc2xvdChkZWZhdWx0X3Nsb3RfdGVtcGxhdGUsIGN0eCwgLyokJHNjb3BlKi8gY3R4WzRdLCBudWxsKTsKICAgIAlsZXQgZm9ybV9sZXZlbHMgPSBbLyokJHJlc3RQcm9wcyovIGN0eFsxXSwgeyBjbGFzczogLypjbGFzc2VzKi8gY3R4WzBdIH1dOwogICAgCWxldCBmb3JtX2RhdGEgPSB7fTsKCiAgICAJZm9yIChsZXQgaSA9IDA7IGkgPCBmb3JtX2xldmVscy5sZW5ndGg7IGkgKz0gMSkgewogICAgCQlmb3JtX2RhdGEgPSBhc3NpZ24oZm9ybV9kYXRhLCBmb3JtX2xldmVsc1tpXSk7CiAgICAJfQoKICAgIAljb25zdCBibG9jayA9IHsKICAgIAkJYzogZnVuY3Rpb24gY3JlYXRlKCkgewogICAgCQkJZm9ybSA9IGVsZW1lbnQoImZvcm0iKTsKICAgIAkJCWlmIChkZWZhdWx0X3Nsb3QpIGRlZmF1bHRfc2xvdC5jKCk7CiAgICAJCQlzZXRfYXR0cmlidXRlcyhmb3JtLCBmb3JtX2RhdGEpOwogICAgCQkJYWRkX2xvY2F0aW9uKGZvcm0sIGZpbGUkNCwgMTAsIDAsIDIxMik7CiAgICAJCX0sCiAgICAJCWw6IGZ1bmN0aW9uIGNsYWltKG5vZGVzKSB7CiAgICAJCQl0aHJvdyBuZXcgRXJyb3IoIm9wdGlvbnMuaHlkcmF0ZSBvbmx5IHdvcmtzIGlmIHRoZSBjb21wb25lbnQgd2FzIGNvbXBpbGVkIHdpdGggdGhlIGBoeWRyYXRhYmxlOiB0cnVlYCBvcHRpb24iKTsKICAgIAkJfSwKICAgIAkJbTogZnVuY3Rpb24gbW91bnQodGFyZ2V0LCBhbmNob3IpIHsKICAgIAkJCWluc2VydF9kZXYodGFyZ2V0LCBmb3JtLCBhbmNob3IpOwoKICAgIAkJCWlmIChkZWZhdWx0X3Nsb3QpIHsKICAgIAkJCQlkZWZhdWx0X3Nsb3QubShmb3JtLCBudWxsKTsKICAgIAkJCX0KCiAgICAJCQljdXJyZW50ID0gdHJ1ZTsKCiAgICAJCQlpZiAoIW1vdW50ZWQpIHsKICAgIAkJCQlkaXNwb3NlID0gbGlzdGVuX2Rldihmb3JtLCAic3VibWl0IiwgLypzdWJtaXRfaGFuZGxlciovIGN0eFs2XSwgZmFsc2UsIGZhbHNlLCBmYWxzZSk7CiAgICAJCQkJbW91bnRlZCA9IHRydWU7CiAgICAJCQl9CiAgICAJCX0sCiAgICAJCXA6IGZ1bmN0aW9uIHVwZGF0ZShjdHgsIFtkaXJ0eV0pIHsKICAgIAkJCWlmIChkZWZhdWx0X3Nsb3QpIHsKICAgIAkJCQlpZiAoZGVmYXVsdF9zbG90LnAgJiYgZGlydHkgJiAvKiQkc2NvcGUqLyAxNikgewogICAgCQkJCQl1cGRhdGVfc2xvdChkZWZhdWx0X3Nsb3QsIGRlZmF1bHRfc2xvdF90ZW1wbGF0ZSwgY3R4LCAvKiQkc2NvcGUqLyBjdHhbNF0sIGRpcnR5LCBudWxsLCBudWxsKTsKICAgIAkJCQl9CiAgICAJCQl9CgogICAgCQkJc2V0X2F0dHJpYnV0ZXMoZm9ybSwgZm9ybV9kYXRhID0gZ2V0X3NwcmVhZF91cGRhdGUoZm9ybV9sZXZlbHMsIFsKICAgIAkJCQlkaXJ0eSAmIC8qJCRyZXN0UHJvcHMqLyAyICYmIC8qJCRyZXN0UHJvcHMqLyBjdHhbMV0sCiAgICAJCQkJKCFjdXJyZW50IHx8IGRpcnR5ICYgLypjbGFzc2VzKi8gMSkgJiYgeyBjbGFzczogLypjbGFzc2VzKi8gY3R4WzBdIH0KICAgIAkJCV0pKTsKICAgIAkJfSwKICAgIAkJaTogZnVuY3Rpb24gaW50cm8obG9jYWwpIHsKICAgIAkJCWlmIChjdXJyZW50KSByZXR1cm47CiAgICAJCQl0cmFuc2l0aW9uX2luKGRlZmF1bHRfc2xvdCwgbG9jYWwpOwogICAgCQkJY3VycmVudCA9IHRydWU7CiAgICAJCX0sCiAgICAJCW86IGZ1bmN0aW9uIG91dHJvKGxvY2FsKSB7CiAgICAJCQl0cmFuc2l0aW9uX291dChkZWZhdWx0X3Nsb3QsIGxvY2FsKTsKICAgIAkJCWN1cnJlbnQgPSBmYWxzZTsKICAgIAkJfSwKICAgIAkJZDogZnVuY3Rpb24gZGVzdHJveShkZXRhY2hpbmcpIHsKICAgIAkJCWlmIChkZXRhY2hpbmcpIGRldGFjaF9kZXYoZm9ybSk7CiAgICAJCQlpZiAoZGVmYXVsdF9zbG90KSBkZWZhdWx0X3Nsb3QuZChkZXRhY2hpbmcpOwogICAgCQkJbW91bnRlZCA9IGZhbHNlOwogICAgCQkJZGlzcG9zZSgpOwogICAgCQl9CiAgICAJfTsKCiAgICAJZGlzcGF0Y2hfZGV2KCJTdmVsdGVSZWdpc3RlckJsb2NrIiwgewogICAgCQlibG9jaywKICAgIAkJaWQ6IGNyZWF0ZV9mcmFnbWVudCQ0Lm5hbWUsCiAgICAJCXR5cGU6ICJjb21wb25lbnQiLAogICAgCQlzb3VyY2U6ICIiLAogICAgCQljdHgKICAgIAl9KTsKCiAgICAJcmV0dXJuIGJsb2NrOwogICAgfQoKICAgIGZ1bmN0aW9uIGluc3RhbmNlJDQoJCRzZWxmLCAkJHByb3BzLCAkJGludmFsaWRhdGUpIHsKICAgIAlsZXQgY2xhc3NlczsKICAgIAljb25zdCBvbWl0X3Byb3BzX25hbWVzID0gWyJjbGFzcyIsImlubGluZSJdOwogICAgCWxldCAkJHJlc3RQcm9wcyA9IGNvbXB1dGVfcmVzdF9wcm9wcygkJHByb3BzLCBvbWl0X3Byb3BzX25hbWVzKTsKICAgIAlsZXQgeyAkJHNsb3RzOiBzbG90cyA9IHt9LCAkJHNjb3BlIH0gPSAkJHByb3BzOwogICAgCXZhbGlkYXRlX3Nsb3RzKCJGb3JtIiwgc2xvdHMsIFsnZGVmYXVsdCddKTsKICAgIAlsZXQgeyBjbGFzczogY2xhc3NOYW1lID0gIiIgfSA9ICQkcHJvcHM7CiAgICAJbGV0IHsgaW5saW5lID0gZmFsc2UgfSA9ICQkcHJvcHM7CgogICAgCWZ1bmN0aW9uIHN1Ym1pdF9oYW5kbGVyKGV2ZW50KSB7CiAgICAJCWJ1YmJsZSgkJHNlbGYsIGV2ZW50KTsKICAgIAl9CgogICAgCSQkc2VsZi4kJHNldCA9ICQkbmV3X3Byb3BzID0+IHsKICAgIAkJJCRwcm9wcyA9IGFzc2lnbihhc3NpZ24oe30sICQkcHJvcHMpLCBleGNsdWRlX2ludGVybmFsX3Byb3BzKCQkbmV3X3Byb3BzKSk7CiAgICAJCSQkaW52YWxpZGF0ZSgxLCAkJHJlc3RQcm9wcyA9IGNvbXB1dGVfcmVzdF9wcm9wcygkJHByb3BzLCBvbWl0X3Byb3BzX25hbWVzKSk7CiAgICAJCWlmICgiY2xhc3MiIGluICQkbmV3X3Byb3BzKSAkJGludmFsaWRhdGUoMiwgY2xhc3NOYW1lID0gJCRuZXdfcHJvcHMuY2xhc3MpOwogICAgCQlpZiAoImlubGluZSIgaW4gJCRuZXdfcHJvcHMpICQkaW52YWxpZGF0ZSgzLCBpbmxpbmUgPSAkJG5ld19wcm9wcy5pbmxpbmUpOwogICAgCQlpZiAoIiQkc2NvcGUiIGluICQkbmV3X3Byb3BzKSAkJGludmFsaWRhdGUoNCwgJCRzY29wZSA9ICQkbmV3X3Byb3BzLiQkc2NvcGUpOwogICAgCX07CgogICAgCSQkc2VsZi4kY2FwdHVyZV9zdGF0ZSA9ICgpID0+ICh7IGNsYXNzbmFtZXMsIGNsYXNzTmFtZSwgaW5saW5lLCBjbGFzc2VzIH0pOwoKICAgIAkkJHNlbGYuJGluamVjdF9zdGF0ZSA9ICQkbmV3X3Byb3BzID0+IHsKICAgIAkJaWYgKCJjbGFzc05hbWUiIGluICQkcHJvcHMpICQkaW52YWxpZGF0ZSgyLCBjbGFzc05hbWUgPSAkJG5ld19wcm9wcy5jbGFzc05hbWUpOwogICAgCQlpZiAoImlubGluZSIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDMsIGlubGluZSA9ICQkbmV3X3Byb3BzLmlubGluZSk7CiAgICAJCWlmICgiY2xhc3NlcyIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDAsIGNsYXNzZXMgPSAkJG5ld19wcm9wcy5jbGFzc2VzKTsKICAgIAl9OwoKICAgIAlpZiAoJCRwcm9wcyAmJiAiJCRpbmplY3QiIGluICQkcHJvcHMpIHsKICAgIAkJJCRzZWxmLiRpbmplY3Rfc3RhdGUoJCRwcm9wcy4kJGluamVjdCk7CiAgICAJfQoKICAgIAkkJHNlbGYuJCQudXBkYXRlID0gKCkgPT4gewogICAgCQlpZiAoJCRzZWxmLiQkLmRpcnR5ICYgLypjbGFzc05hbWUsIGlubGluZSovIDEyKSB7CiAgICAJCQkgJCRpbnZhbGlkYXRlKDAsIGNsYXNzZXMgPSBjbGFzc25hbWVzKGNsYXNzTmFtZSwgaW5saW5lID8gImZvcm0taW5saW5lIiA6IGZhbHNlKSk7CiAgICAJCX0KICAgIAl9OwoKICAgIAlyZXR1cm4gW2NsYXNzZXMsICQkcmVzdFByb3BzLCBjbGFzc05hbWUsIGlubGluZSwgJCRzY29wZSwgc2xvdHMsIHN1Ym1pdF9oYW5kbGVyXTsKICAgIH0KCiAgICBjbGFzcyBGb3JtIGV4dGVuZHMgU3ZlbHRlQ29tcG9uZW50RGV2IHsKICAgIAljb25zdHJ1Y3RvcihvcHRpb25zKSB7CiAgICAJCXN1cGVyKG9wdGlvbnMpOwogICAgCQlpbml0KHRoaXMsIG9wdGlvbnMsIGluc3RhbmNlJDQsIGNyZWF0ZV9mcmFnbWVudCQ0LCBzYWZlX25vdF9lcXVhbCwgeyBjbGFzczogMiwgaW5saW5lOiAzIH0pOwoKICAgIAkJZGlzcGF0Y2hfZGV2KCJTdmVsdGVSZWdpc3RlckNvbXBvbmVudCIsIHsKICAgIAkJCWNvbXBvbmVudDogdGhpcywKICAgIAkJCXRhZ05hbWU6ICJGb3JtIiwKICAgIAkJCW9wdGlvbnMsCiAgICAJCQlpZDogY3JlYXRlX2ZyYWdtZW50JDQubmFtZQogICAgCQl9KTsKICAgIAl9CgogICAgCWdldCBjbGFzcygpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8Rm9ybT46IFByb3BzIGNhbm5vdCBiZSByZWFkIGRpcmVjdGx5IGZyb20gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCXNldCBjbGFzcyh2YWx1ZSkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxGb3JtPjogUHJvcHMgY2Fubm90IGJlIHNldCBkaXJlY3RseSBvbiB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJZ2V0IGlubGluZSgpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8Rm9ybT46IFByb3BzIGNhbm5vdCBiZSByZWFkIGRpcmVjdGx5IGZyb20gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCXNldCBpbmxpbmUodmFsdWUpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8Rm9ybT46IFByb3BzIGNhbm5vdCBiZSBzZXQgZGlyZWN0bHkgb24gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CiAgICB9CgogICAgLyogbm9kZV9tb2R1bGVzL3N2ZWx0ZXN0cmFwL3NyYy9Gb3JtR3JvdXAuc3ZlbHRlIGdlbmVyYXRlZCBieSBTdmVsdGUgdjMuMzEuMiAqLwogICAgY29uc3QgZmlsZSQ1ID0gIm5vZGVfbW9kdWxlcy9zdmVsdGVzdHJhcC9zcmMvRm9ybUdyb3VwLnN2ZWx0ZSI7CgogICAgLy8gKDI1OjApIHs6ZWxzZX0KICAgIGZ1bmN0aW9uIGNyZWF0ZV9lbHNlX2Jsb2NrJDEoY3R4KSB7CiAgICAJbGV0IGRpdjsKICAgIAlsZXQgY3VycmVudDsKICAgIAljb25zdCBkZWZhdWx0X3Nsb3RfdGVtcGxhdGUgPSAvKiNzbG90cyovIGN0eFs5XS5kZWZhdWx0OwogICAgCWNvbnN0IGRlZmF1bHRfc2xvdCA9IGNyZWF0ZV9zbG90KGRlZmF1bHRfc2xvdF90ZW1wbGF0ZSwgY3R4LCAvKiQkc2NvcGUqLyBjdHhbOF0sIG51bGwpOwogICAgCWxldCBkaXZfbGV2ZWxzID0gWy8qJCRyZXN0UHJvcHMqLyBjdHhbMl0sIHsgY2xhc3M6IC8qY2xhc3NlcyovIGN0eFsxXSB9XTsKICAgIAlsZXQgZGl2X2RhdGEgPSB7fTsKCiAgICAJZm9yIChsZXQgaSA9IDA7IGkgPCBkaXZfbGV2ZWxzLmxlbmd0aDsgaSArPSAxKSB7CiAgICAJCWRpdl9kYXRhID0gYXNzaWduKGRpdl9kYXRhLCBkaXZfbGV2ZWxzW2ldKTsKICAgIAl9CgogICAgCWNvbnN0IGJsb2NrID0gewogICAgCQljOiBmdW5jdGlvbiBjcmVhdGUoKSB7CiAgICAJCQlkaXYgPSBlbGVtZW50KCJkaXYiKTsKICAgIAkJCWlmIChkZWZhdWx0X3Nsb3QpIGRlZmF1bHRfc2xvdC5jKCk7CiAgICAJCQlzZXRfYXR0cmlidXRlcyhkaXYsIGRpdl9kYXRhKTsKICAgIAkJCWFkZF9sb2NhdGlvbihkaXYsIGZpbGUkNSwgMjUsIDIsIDU3NCk7CiAgICAJCX0sCiAgICAJCW06IGZ1bmN0aW9uIG1vdW50KHRhcmdldCwgYW5jaG9yKSB7CiAgICAJCQlpbnNlcnRfZGV2KHRhcmdldCwgZGl2LCBhbmNob3IpOwoKICAgIAkJCWlmIChkZWZhdWx0X3Nsb3QpIHsKICAgIAkJCQlkZWZhdWx0X3Nsb3QubShkaXYsIG51bGwpOwogICAgCQkJfQoKICAgIAkJCWN1cnJlbnQgPSB0cnVlOwogICAgCQl9LAogICAgCQlwOiBmdW5jdGlvbiB1cGRhdGUoY3R4LCBkaXJ0eSkgewogICAgCQkJaWYgKGRlZmF1bHRfc2xvdCkgewogICAgCQkJCWlmIChkZWZhdWx0X3Nsb3QucCAmJiBkaXJ0eSAmIC8qJCRzY29wZSovIDI1NikgewogICAgCQkJCQl1cGRhdGVfc2xvdChkZWZhdWx0X3Nsb3QsIGRlZmF1bHRfc2xvdF90ZW1wbGF0ZSwgY3R4LCAvKiQkc2NvcGUqLyBjdHhbOF0sIGRpcnR5LCBudWxsLCBudWxsKTsKICAgIAkJCQl9CiAgICAJCQl9CgogICAgCQkJc2V0X2F0dHJpYnV0ZXMoZGl2LCBkaXZfZGF0YSA9IGdldF9zcHJlYWRfdXBkYXRlKGRpdl9sZXZlbHMsIFsKICAgIAkJCQlkaXJ0eSAmIC8qJCRyZXN0UHJvcHMqLyA0ICYmIC8qJCRyZXN0UHJvcHMqLyBjdHhbMl0sCiAgICAJCQkJKCFjdXJyZW50IHx8IGRpcnR5ICYgLypjbGFzc2VzKi8gMikgJiYgeyBjbGFzczogLypjbGFzc2VzKi8gY3R4WzFdIH0KICAgIAkJCV0pKTsKICAgIAkJfSwKICAgIAkJaTogZnVuY3Rpb24gaW50cm8obG9jYWwpIHsKICAgIAkJCWlmIChjdXJyZW50KSByZXR1cm47CiAgICAJCQl0cmFuc2l0aW9uX2luKGRlZmF1bHRfc2xvdCwgbG9jYWwpOwogICAgCQkJY3VycmVudCA9IHRydWU7CiAgICAJCX0sCiAgICAJCW86IGZ1bmN0aW9uIG91dHJvKGxvY2FsKSB7CiAgICAJCQl0cmFuc2l0aW9uX291dChkZWZhdWx0X3Nsb3QsIGxvY2FsKTsKICAgIAkJCWN1cnJlbnQgPSBmYWxzZTsKICAgIAkJfSwKICAgIAkJZDogZnVuY3Rpb24gZGVzdHJveShkZXRhY2hpbmcpIHsKICAgIAkJCWlmIChkZXRhY2hpbmcpIGRldGFjaF9kZXYoZGl2KTsKICAgIAkJCWlmIChkZWZhdWx0X3Nsb3QpIGRlZmF1bHRfc2xvdC5kKGRldGFjaGluZyk7CiAgICAJCX0KICAgIAl9OwoKICAgIAlkaXNwYXRjaF9kZXYoIlN2ZWx0ZVJlZ2lzdGVyQmxvY2siLCB7CiAgICAJCWJsb2NrLAogICAgCQlpZDogY3JlYXRlX2Vsc2VfYmxvY2skMS5uYW1lLAogICAgCQl0eXBlOiAiZWxzZSIsCiAgICAJCXNvdXJjZTogIigyNTowKSB7OmVsc2V9IiwKICAgIAkJY3R4CiAgICAJfSk7CgogICAgCXJldHVybiBibG9jazsKICAgIH0KCiAgICAvLyAoMjE6MCkgeyNpZiB0YWcgPT09ICdmaWVsZHNldCd9CiAgICBmdW5jdGlvbiBjcmVhdGVfaWZfYmxvY2skMShjdHgpIHsKICAgIAlsZXQgZmllbGRzZXQ7CiAgICAJbGV0IGN1cnJlbnQ7CiAgICAJY29uc3QgZGVmYXVsdF9zbG90X3RlbXBsYXRlID0gLyojc2xvdHMqLyBjdHhbOV0uZGVmYXVsdDsKICAgIAljb25zdCBkZWZhdWx0X3Nsb3QgPSBjcmVhdGVfc2xvdChkZWZhdWx0X3Nsb3RfdGVtcGxhdGUsIGN0eCwgLyokJHNjb3BlKi8gY3R4WzhdLCBudWxsKTsKICAgIAlsZXQgZmllbGRzZXRfbGV2ZWxzID0gWy8qJCRyZXN0UHJvcHMqLyBjdHhbMl0sIHsgY2xhc3M6IC8qY2xhc3NlcyovIGN0eFsxXSB9XTsKICAgIAlsZXQgZmllbGRzZXRfZGF0YSA9IHt9OwoKICAgIAlmb3IgKGxldCBpID0gMDsgaSA8IGZpZWxkc2V0X2xldmVscy5sZW5ndGg7IGkgKz0gMSkgewogICAgCQlmaWVsZHNldF9kYXRhID0gYXNzaWduKGZpZWxkc2V0X2RhdGEsIGZpZWxkc2V0X2xldmVsc1tpXSk7CiAgICAJfQoKICAgIAljb25zdCBibG9jayA9IHsKICAgIAkJYzogZnVuY3Rpb24gY3JlYXRlKCkgewogICAgCQkJZmllbGRzZXQgPSBlbGVtZW50KCJmaWVsZHNldCIpOwogICAgCQkJaWYgKGRlZmF1bHRfc2xvdCkgZGVmYXVsdF9zbG90LmMoKTsKICAgIAkJCXNldF9hdHRyaWJ1dGVzKGZpZWxkc2V0LCBmaWVsZHNldF9kYXRhKTsKICAgIAkJCWFkZF9sb2NhdGlvbihmaWVsZHNldCwgZmlsZSQ1LCAyMSwgMiwgNDkzKTsKICAgIAkJfSwKICAgIAkJbTogZnVuY3Rpb24gbW91bnQodGFyZ2V0LCBhbmNob3IpIHsKICAgIAkJCWluc2VydF9kZXYodGFyZ2V0LCBmaWVsZHNldCwgYW5jaG9yKTsKCiAgICAJCQlpZiAoZGVmYXVsdF9zbG90KSB7CiAgICAJCQkJZGVmYXVsdF9zbG90Lm0oZmllbGRzZXQsIG51bGwpOwogICAgCQkJfQoKICAgIAkJCWN1cnJlbnQgPSB0cnVlOwogICAgCQl9LAogICAgCQlwOiBmdW5jdGlvbiB1cGRhdGUoY3R4LCBkaXJ0eSkgewogICAgCQkJaWYgKGRlZmF1bHRfc2xvdCkgewogICAgCQkJCWlmIChkZWZhdWx0X3Nsb3QucCAmJiBkaXJ0eSAmIC8qJCRzY29wZSovIDI1NikgewogICAgCQkJCQl1cGRhdGVfc2xvdChkZWZhdWx0X3Nsb3QsIGRlZmF1bHRfc2xvdF90ZW1wbGF0ZSwgY3R4LCAvKiQkc2NvcGUqLyBjdHhbOF0sIGRpcnR5LCBudWxsLCBudWxsKTsKICAgIAkJCQl9CiAgICAJCQl9CgogICAgCQkJc2V0X2F0dHJpYnV0ZXMoZmllbGRzZXQsIGZpZWxkc2V0X2RhdGEgPSBnZXRfc3ByZWFkX3VwZGF0ZShmaWVsZHNldF9sZXZlbHMsIFsKICAgIAkJCQlkaXJ0eSAmIC8qJCRyZXN0UHJvcHMqLyA0ICYmIC8qJCRyZXN0UHJvcHMqLyBjdHhbMl0sCiAgICAJCQkJKCFjdXJyZW50IHx8IGRpcnR5ICYgLypjbGFzc2VzKi8gMikgJiYgeyBjbGFzczogLypjbGFzc2VzKi8gY3R4WzFdIH0KICAgIAkJCV0pKTsKICAgIAkJfSwKICAgIAkJaTogZnVuY3Rpb24gaW50cm8obG9jYWwpIHsKICAgIAkJCWlmIChjdXJyZW50KSByZXR1cm47CiAgICAJCQl0cmFuc2l0aW9uX2luKGRlZmF1bHRfc2xvdCwgbG9jYWwpOwogICAgCQkJY3VycmVudCA9IHRydWU7CiAgICAJCX0sCiAgICAJCW86IGZ1bmN0aW9uIG91dHJvKGxvY2FsKSB7CiAgICAJCQl0cmFuc2l0aW9uX291dChkZWZhdWx0X3Nsb3QsIGxvY2FsKTsKICAgIAkJCWN1cnJlbnQgPSBmYWxzZTsKICAgIAkJfSwKICAgIAkJZDogZnVuY3Rpb24gZGVzdHJveShkZXRhY2hpbmcpIHsKICAgIAkJCWlmIChkZXRhY2hpbmcpIGRldGFjaF9kZXYoZmllbGRzZXQpOwogICAgCQkJaWYgKGRlZmF1bHRfc2xvdCkgZGVmYXVsdF9zbG90LmQoZGV0YWNoaW5nKTsKICAgIAkJfQogICAgCX07CgogICAgCWRpc3BhdGNoX2RldigiU3ZlbHRlUmVnaXN0ZXJCbG9jayIsIHsKICAgIAkJYmxvY2ssCiAgICAJCWlkOiBjcmVhdGVfaWZfYmxvY2skMS5uYW1lLAogICAgCQl0eXBlOiAiaWYiLAogICAgCQlzb3VyY2U6ICIoMjE6MCkgeyNpZiB0YWcgPT09ICdmaWVsZHNldCd9IiwKICAgIAkJY3R4CiAgICAJfSk7CgogICAgCXJldHVybiBibG9jazsKICAgIH0KCiAgICBmdW5jdGlvbiBjcmVhdGVfZnJhZ21lbnQkNShjdHgpIHsKICAgIAlsZXQgY3VycmVudF9ibG9ja190eXBlX2luZGV4OwogICAgCWxldCBpZl9ibG9jazsKICAgIAlsZXQgaWZfYmxvY2tfYW5jaG9yOwogICAgCWxldCBjdXJyZW50OwogICAgCWNvbnN0IGlmX2Jsb2NrX2NyZWF0b3JzID0gW2NyZWF0ZV9pZl9ibG9jayQxLCBjcmVhdGVfZWxzZV9ibG9jayQxXTsKICAgIAljb25zdCBpZl9ibG9ja3MgPSBbXTsKCiAgICAJZnVuY3Rpb24gc2VsZWN0X2Jsb2NrX3R5cGUoY3R4LCBkaXJ0eSkgewogICAgCQlpZiAoLyp0YWcqLyBjdHhbMF0gPT09ICJmaWVsZHNldCIpIHJldHVybiAwOwogICAgCQlyZXR1cm4gMTsKICAgIAl9CgogICAgCWN1cnJlbnRfYmxvY2tfdHlwZV9pbmRleCA9IHNlbGVjdF9ibG9ja190eXBlKGN0eCk7CiAgICAJaWZfYmxvY2sgPSBpZl9ibG9ja3NbY3VycmVudF9ibG9ja190eXBlX2luZGV4XSA9IGlmX2Jsb2NrX2NyZWF0b3JzW2N1cnJlbnRfYmxvY2tfdHlwZV9pbmRleF0oY3R4KTsKCiAgICAJY29uc3QgYmxvY2sgPSB7CiAgICAJCWM6IGZ1bmN0aW9uIGNyZWF0ZSgpIHsKICAgIAkJCWlmX2Jsb2NrLmMoKTsKICAgIAkJCWlmX2Jsb2NrX2FuY2hvciA9IGVtcHR5KCk7CiAgICAJCX0sCiAgICAJCWw6IGZ1bmN0aW9uIGNsYWltKG5vZGVzKSB7CiAgICAJCQl0aHJvdyBuZXcgRXJyb3IoIm9wdGlvbnMuaHlkcmF0ZSBvbmx5IHdvcmtzIGlmIHRoZSBjb21wb25lbnQgd2FzIGNvbXBpbGVkIHdpdGggdGhlIGBoeWRyYXRhYmxlOiB0cnVlYCBvcHRpb24iKTsKICAgIAkJfSwKICAgIAkJbTogZnVuY3Rpb24gbW91bnQodGFyZ2V0LCBhbmNob3IpIHsKICAgIAkJCWlmX2Jsb2Nrc1tjdXJyZW50X2Jsb2NrX3R5cGVfaW5kZXhdLm0odGFyZ2V0LCBhbmNob3IpOwogICAgCQkJaW5zZXJ0X2Rldih0YXJnZXQsIGlmX2Jsb2NrX2FuY2hvciwgYW5jaG9yKTsKICAgIAkJCWN1cnJlbnQgPSB0cnVlOwogICAgCQl9LAogICAgCQlwOiBmdW5jdGlvbiB1cGRhdGUoY3R4LCBbZGlydHldKSB7CiAgICAJCQlsZXQgcHJldmlvdXNfYmxvY2tfaW5kZXggPSBjdXJyZW50X2Jsb2NrX3R5cGVfaW5kZXg7CiAgICAJCQljdXJyZW50X2Jsb2NrX3R5cGVfaW5kZXggPSBzZWxlY3RfYmxvY2tfdHlwZShjdHgpOwoKICAgIAkJCWlmIChjdXJyZW50X2Jsb2NrX3R5cGVfaW5kZXggPT09IHByZXZpb3VzX2Jsb2NrX2luZGV4KSB7CiAgICAJCQkJaWZfYmxvY2tzW2N1cnJlbnRfYmxvY2tfdHlwZV9pbmRleF0ucChjdHgsIGRpcnR5KTsKICAgIAkJCX0gZWxzZSB7CiAgICAJCQkJZ3JvdXBfb3V0cm9zKCk7CgogICAgCQkJCXRyYW5zaXRpb25fb3V0KGlmX2Jsb2Nrc1twcmV2aW91c19ibG9ja19pbmRleF0sIDEsIDEsICgpID0+IHsKICAgIAkJCQkJaWZfYmxvY2tzW3ByZXZpb3VzX2Jsb2NrX2luZGV4XSA9IG51bGw7CiAgICAJCQkJfSk7CgogICAgCQkJCWNoZWNrX291dHJvcygpOwogICAgCQkJCWlmX2Jsb2NrID0gaWZfYmxvY2tzW2N1cnJlbnRfYmxvY2tfdHlwZV9pbmRleF07CgogICAgCQkJCWlmICghaWZfYmxvY2spIHsKICAgIAkJCQkJaWZfYmxvY2sgPSBpZl9ibG9ja3NbY3VycmVudF9ibG9ja190eXBlX2luZGV4XSA9IGlmX2Jsb2NrX2NyZWF0b3JzW2N1cnJlbnRfYmxvY2tfdHlwZV9pbmRleF0oY3R4KTsKICAgIAkJCQkJaWZfYmxvY2suYygpOwogICAgCQkJCX0gZWxzZSB7CiAgICAJCQkJCWlmX2Jsb2NrLnAoY3R4LCBkaXJ0eSk7CiAgICAJCQkJfQoKICAgIAkJCQl0cmFuc2l0aW9uX2luKGlmX2Jsb2NrLCAxKTsKICAgIAkJCQlpZl9ibG9jay5tKGlmX2Jsb2NrX2FuY2hvci5wYXJlbnROb2RlLCBpZl9ibG9ja19hbmNob3IpOwogICAgCQkJfQogICAgCQl9LAogICAgCQlpOiBmdW5jdGlvbiBpbnRybyhsb2NhbCkgewogICAgCQkJaWYgKGN1cnJlbnQpIHJldHVybjsKICAgIAkJCXRyYW5zaXRpb25faW4oaWZfYmxvY2spOwogICAgCQkJY3VycmVudCA9IHRydWU7CiAgICAJCX0sCiAgICAJCW86IGZ1bmN0aW9uIG91dHJvKGxvY2FsKSB7CiAgICAJCQl0cmFuc2l0aW9uX291dChpZl9ibG9jayk7CiAgICAJCQljdXJyZW50ID0gZmFsc2U7CiAgICAJCX0sCiAgICAJCWQ6IGZ1bmN0aW9uIGRlc3Ryb3koZGV0YWNoaW5nKSB7CiAgICAJCQlpZl9ibG9ja3NbY3VycmVudF9ibG9ja190eXBlX2luZGV4XS5kKGRldGFjaGluZyk7CiAgICAJCQlpZiAoZGV0YWNoaW5nKSBkZXRhY2hfZGV2KGlmX2Jsb2NrX2FuY2hvcik7CiAgICAJCX0KICAgIAl9OwoKICAgIAlkaXNwYXRjaF9kZXYoIlN2ZWx0ZVJlZ2lzdGVyQmxvY2siLCB7CiAgICAJCWJsb2NrLAogICAgCQlpZDogY3JlYXRlX2ZyYWdtZW50JDUubmFtZSwKICAgIAkJdHlwZTogImNvbXBvbmVudCIsCiAgICAJCXNvdXJjZTogIiIsCiAgICAJCWN0eAogICAgCX0pOwoKICAgIAlyZXR1cm4gYmxvY2s7CiAgICB9CgogICAgZnVuY3Rpb24gaW5zdGFuY2UkNSgkJHNlbGYsICQkcHJvcHMsICQkaW52YWxpZGF0ZSkgewogICAgCWxldCBjbGFzc2VzOwogICAgCWNvbnN0IG9taXRfcHJvcHNfbmFtZXMgPSBbImNsYXNzIiwicm93IiwiY2hlY2siLCJpbmxpbmUiLCJkaXNhYmxlZCIsInRhZyJdOwogICAgCWxldCAkJHJlc3RQcm9wcyA9IGNvbXB1dGVfcmVzdF9wcm9wcygkJHByb3BzLCBvbWl0X3Byb3BzX25hbWVzKTsKICAgIAlsZXQgeyAkJHNsb3RzOiBzbG90cyA9IHt9LCAkJHNjb3BlIH0gPSAkJHByb3BzOwogICAgCXZhbGlkYXRlX3Nsb3RzKCJGb3JtR3JvdXAiLCBzbG90cywgWydkZWZhdWx0J10pOwogICAgCWxldCB7IGNsYXNzOiBjbGFzc05hbWUgPSAiIiB9ID0gJCRwcm9wczsKICAgIAlsZXQgeyByb3cgPSBmYWxzZSB9ID0gJCRwcm9wczsKICAgIAlsZXQgeyBjaGVjayA9IGZhbHNlIH0gPSAkJHByb3BzOwogICAgCWxldCB7IGlubGluZSA9IGZhbHNlIH0gPSAkJHByb3BzOwogICAgCWxldCB7IGRpc2FibGVkID0gZmFsc2UgfSA9ICQkcHJvcHM7CiAgICAJbGV0IHsgdGFnID0gbnVsbCB9ID0gJCRwcm9wczsKCiAgICAJJCRzZWxmLiQkc2V0ID0gJCRuZXdfcHJvcHMgPT4gewogICAgCQkkJHByb3BzID0gYXNzaWduKGFzc2lnbih7fSwgJCRwcm9wcyksIGV4Y2x1ZGVfaW50ZXJuYWxfcHJvcHMoJCRuZXdfcHJvcHMpKTsKICAgIAkJJCRpbnZhbGlkYXRlKDIsICQkcmVzdFByb3BzID0gY29tcHV0ZV9yZXN0X3Byb3BzKCQkcHJvcHMsIG9taXRfcHJvcHNfbmFtZXMpKTsKICAgIAkJaWYgKCJjbGFzcyIgaW4gJCRuZXdfcHJvcHMpICQkaW52YWxpZGF0ZSgzLCBjbGFzc05hbWUgPSAkJG5ld19wcm9wcy5jbGFzcyk7CiAgICAJCWlmICgicm93IiBpbiAkJG5ld19wcm9wcykgJCRpbnZhbGlkYXRlKDQsIHJvdyA9ICQkbmV3X3Byb3BzLnJvdyk7CiAgICAJCWlmICgiY2hlY2siIGluICQkbmV3X3Byb3BzKSAkJGludmFsaWRhdGUoNSwgY2hlY2sgPSAkJG5ld19wcm9wcy5jaGVjayk7CiAgICAJCWlmICgiaW5saW5lIiBpbiAkJG5ld19wcm9wcykgJCRpbnZhbGlkYXRlKDYsIGlubGluZSA9ICQkbmV3X3Byb3BzLmlubGluZSk7CiAgICAJCWlmICgiZGlzYWJsZWQiIGluICQkbmV3X3Byb3BzKSAkJGludmFsaWRhdGUoNywgZGlzYWJsZWQgPSAkJG5ld19wcm9wcy5kaXNhYmxlZCk7CiAgICAJCWlmICgidGFnIiBpbiAkJG5ld19wcm9wcykgJCRpbnZhbGlkYXRlKDAsIHRhZyA9ICQkbmV3X3Byb3BzLnRhZyk7CiAgICAJCWlmICgiJCRzY29wZSIgaW4gJCRuZXdfcHJvcHMpICQkaW52YWxpZGF0ZSg4LCAkJHNjb3BlID0gJCRuZXdfcHJvcHMuJCRzY29wZSk7CiAgICAJfTsKCiAgICAJJCRzZWxmLiRjYXB0dXJlX3N0YXRlID0gKCkgPT4gKHsKICAgIAkJY2xhc3NuYW1lcywKICAgIAkJY2xhc3NOYW1lLAogICAgCQlyb3csCiAgICAJCWNoZWNrLAogICAgCQlpbmxpbmUsCiAgICAJCWRpc2FibGVkLAogICAgCQl0YWcsCiAgICAJCWNsYXNzZXMKICAgIAl9KTsKCiAgICAJJCRzZWxmLiRpbmplY3Rfc3RhdGUgPSAkJG5ld19wcm9wcyA9PiB7CiAgICAJCWlmICgiY2xhc3NOYW1lIiBpbiAkJHByb3BzKSAkJGludmFsaWRhdGUoMywgY2xhc3NOYW1lID0gJCRuZXdfcHJvcHMuY2xhc3NOYW1lKTsKICAgIAkJaWYgKCJyb3ciIGluICQkcHJvcHMpICQkaW52YWxpZGF0ZSg0LCByb3cgPSAkJG5ld19wcm9wcy5yb3cpOwogICAgCQlpZiAoImNoZWNrIiBpbiAkJHByb3BzKSAkJGludmFsaWRhdGUoNSwgY2hlY2sgPSAkJG5ld19wcm9wcy5jaGVjayk7CiAgICAJCWlmICgiaW5saW5lIiBpbiAkJHByb3BzKSAkJGludmFsaWRhdGUoNiwgaW5saW5lID0gJCRuZXdfcHJvcHMuaW5saW5lKTsKICAgIAkJaWYgKCJkaXNhYmxlZCIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDcsIGRpc2FibGVkID0gJCRuZXdfcHJvcHMuZGlzYWJsZWQpOwogICAgCQlpZiAoInRhZyIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDAsIHRhZyA9ICQkbmV3X3Byb3BzLnRhZyk7CiAgICAJCWlmICgiY2xhc3NlcyIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDEsIGNsYXNzZXMgPSAkJG5ld19wcm9wcy5jbGFzc2VzKTsKICAgIAl9OwoKICAgIAlpZiAoJCRwcm9wcyAmJiAiJCRpbmplY3QiIGluICQkcHJvcHMpIHsKICAgIAkJJCRzZWxmLiRpbmplY3Rfc3RhdGUoJCRwcm9wcy4kJGluamVjdCk7CiAgICAJfQoKICAgIAkkJHNlbGYuJCQudXBkYXRlID0gKCkgPT4gewogICAgCQlpZiAoJCRzZWxmLiQkLmRpcnR5ICYgLypjbGFzc05hbWUsIHJvdywgY2hlY2ssIGlubGluZSwgZGlzYWJsZWQqLyAyNDgpIHsKICAgIAkJCSAkJGludmFsaWRhdGUoMSwgY2xhc3NlcyA9IGNsYXNzbmFtZXMoY2xhc3NOYW1lLCByb3cgPyAicm93IiA6IGZhbHNlLCBjaGVjayA/ICJmb3JtLWNoZWNrIiA6ICJmb3JtLWdyb3VwIiwgY2hlY2sgJiYgaW5saW5lID8gImZvcm0tY2hlY2staW5saW5lIiA6IGZhbHNlLCBjaGVjayAmJiBkaXNhYmxlZCA/ICJkaXNhYmxlZCIgOiBmYWxzZSkpOwogICAgCQl9CiAgICAJfTsKCiAgICAJcmV0dXJuIFsKICAgIAkJdGFnLAogICAgCQljbGFzc2VzLAogICAgCQkkJHJlc3RQcm9wcywKICAgIAkJY2xhc3NOYW1lLAogICAgCQlyb3csCiAgICAJCWNoZWNrLAogICAgCQlpbmxpbmUsCiAgICAJCWRpc2FibGVkLAogICAgCQkkJHNjb3BlLAogICAgCQlzbG90cwogICAgCV07CiAgICB9CgogICAgY2xhc3MgRm9ybUdyb3VwIGV4dGVuZHMgU3ZlbHRlQ29tcG9uZW50RGV2IHsKICAgIAljb25zdHJ1Y3RvcihvcHRpb25zKSB7CiAgICAJCXN1cGVyKG9wdGlvbnMpOwoKICAgIAkJaW5pdCh0aGlzLCBvcHRpb25zLCBpbnN0YW5jZSQ1LCBjcmVhdGVfZnJhZ21lbnQkNSwgc2FmZV9ub3RfZXF1YWwsIHsKICAgIAkJCWNsYXNzOiAzLAogICAgCQkJcm93OiA0LAogICAgCQkJY2hlY2s6IDUsCiAgICAJCQlpbmxpbmU6IDYsCiAgICAJCQlkaXNhYmxlZDogNywKICAgIAkJCXRhZzogMAogICAgCQl9KTsKCiAgICAJCWRpc3BhdGNoX2RldigiU3ZlbHRlUmVnaXN0ZXJDb21wb25lbnQiLCB7CiAgICAJCQljb21wb25lbnQ6IHRoaXMsCiAgICAJCQl0YWdOYW1lOiAiRm9ybUdyb3VwIiwKICAgIAkJCW9wdGlvbnMsCiAgICAJCQlpZDogY3JlYXRlX2ZyYWdtZW50JDUubmFtZQogICAgCQl9KTsKICAgIAl9CgogICAgCWdldCBjbGFzcygpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8Rm9ybUdyb3VwPjogUHJvcHMgY2Fubm90IGJlIHJlYWQgZGlyZWN0bHkgZnJvbSB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJc2V0IGNsYXNzKHZhbHVlKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPEZvcm1Hcm91cD46IFByb3BzIGNhbm5vdCBiZSBzZXQgZGlyZWN0bHkgb24gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCWdldCByb3coKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPEZvcm1Hcm91cD46IFByb3BzIGNhbm5vdCBiZSByZWFkIGRpcmVjdGx5IGZyb20gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCXNldCByb3codmFsdWUpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8Rm9ybUdyb3VwPjogUHJvcHMgY2Fubm90IGJlIHNldCBkaXJlY3RseSBvbiB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJZ2V0IGNoZWNrKCkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxGb3JtR3JvdXA+OiBQcm9wcyBjYW5ub3QgYmUgcmVhZCBkaXJlY3RseSBmcm9tIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlzZXQgY2hlY2sodmFsdWUpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8Rm9ybUdyb3VwPjogUHJvcHMgY2Fubm90IGJlIHNldCBkaXJlY3RseSBvbiB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJZ2V0IGlubGluZSgpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8Rm9ybUdyb3VwPjogUHJvcHMgY2Fubm90IGJlIHJlYWQgZGlyZWN0bHkgZnJvbSB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJc2V0IGlubGluZSh2YWx1ZSkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxGb3JtR3JvdXA+OiBQcm9wcyBjYW5ub3QgYmUgc2V0IGRpcmVjdGx5IG9uIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlnZXQgZGlzYWJsZWQoKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPEZvcm1Hcm91cD46IFByb3BzIGNhbm5vdCBiZSByZWFkIGRpcmVjdGx5IGZyb20gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCXNldCBkaXNhYmxlZCh2YWx1ZSkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxGb3JtR3JvdXA+OiBQcm9wcyBjYW5ub3QgYmUgc2V0IGRpcmVjdGx5IG9uIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlnZXQgdGFnKCkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxGb3JtR3JvdXA+OiBQcm9wcyBjYW5ub3QgYmUgcmVhZCBkaXJlY3RseSBmcm9tIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlzZXQgdGFnKHZhbHVlKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPEZvcm1Hcm91cD46IFByb3BzIGNhbm5vdCBiZSBzZXQgZGlyZWN0bHkgb24gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CiAgICB9CgogICAgLyogbm9kZV9tb2R1bGVzL3N2ZWx0ZXN0cmFwL3NyYy9JbnB1dC5zdmVsdGUgZ2VuZXJhdGVkIGJ5IFN2ZWx0ZSB2My4zMS4yICovCiAgICBjb25zdCBmaWxlJDYgPSAibm9kZV9tb2R1bGVzL3N2ZWx0ZXN0cmFwL3NyYy9JbnB1dC5zdmVsdGUiOwoKICAgIC8vICgzNTY6NDApIAogICAgZnVuY3Rpb24gY3JlYXRlX2lmX2Jsb2NrXzE2KGN0eCkgewogICAgCWxldCBzZWxlY3Q7CiAgICAJbGV0IGN1cnJlbnQ7CiAgICAJbGV0IG1vdW50ZWQ7CiAgICAJbGV0IGRpc3Bvc2U7CiAgICAJY29uc3QgZGVmYXVsdF9zbG90X3RlbXBsYXRlID0gLyojc2xvdHMqLyBjdHhbMjJdLmRlZmF1bHQ7CiAgICAJY29uc3QgZGVmYXVsdF9zbG90ID0gY3JlYXRlX3Nsb3QoZGVmYXVsdF9zbG90X3RlbXBsYXRlLCBjdHgsIC8qJCRzY29wZSovIGN0eFsyMV0sIG51bGwpOwoKICAgIAlsZXQgc2VsZWN0X2xldmVscyA9IFsKICAgIAkJLyokJHJlc3RQcm9wcyovIGN0eFsxMl0sCiAgICAJCXsgY2xhc3M6IC8qY2xhc3NlcyovIGN0eFs5XSB9LAogICAgCQl7IG5hbWU6IC8qbmFtZSovIGN0eFs2XSB9LAogICAgCQl7IGRpc2FibGVkOiAvKmRpc2FibGVkKi8gY3R4WzhdIH0sCiAgICAJCXsgcmVhZG9ubHk6IC8qcmVhZG9ubHkqLyBjdHhbNF0gfQogICAgCV07CgogICAgCWxldCBzZWxlY3RfZGF0YSA9IHt9OwoKICAgIAlmb3IgKGxldCBpID0gMDsgaSA8IHNlbGVjdF9sZXZlbHMubGVuZ3RoOyBpICs9IDEpIHsKICAgIAkJc2VsZWN0X2RhdGEgPSBhc3NpZ24oc2VsZWN0X2RhdGEsIHNlbGVjdF9sZXZlbHNbaV0pOwogICAgCX0KCiAgICAJY29uc3QgYmxvY2sgPSB7CiAgICAJCWM6IGZ1bmN0aW9uIGNyZWF0ZSgpIHsKICAgIAkJCXNlbGVjdCA9IGVsZW1lbnQoInNlbGVjdCIpOwogICAgCQkJaWYgKGRlZmF1bHRfc2xvdCkgZGVmYXVsdF9zbG90LmMoKTsKICAgIAkJCXNldF9hdHRyaWJ1dGVzKHNlbGVjdCwgc2VsZWN0X2RhdGEpOwogICAgCQkJaWYgKC8qdmFsdWUqLyBjdHhbMV0gPT09IHZvaWQgMCkgYWRkX3JlbmRlcl9jYWxsYmFjaygoKSA9PiAvKnNlbGVjdF9jaGFuZ2VfaGFuZGxlciovIGN0eFsxNTJdLmNhbGwoc2VsZWN0KSk7CiAgICAJCQlhZGRfbG9jYXRpb24oc2VsZWN0LCBmaWxlJDYsIDM1NiwgMiwgNzA5Nyk7CiAgICAJCX0sCiAgICAJCW06IGZ1bmN0aW9uIG1vdW50KHRhcmdldCwgYW5jaG9yKSB7CiAgICAJCQlpbnNlcnRfZGV2KHRhcmdldCwgc2VsZWN0LCBhbmNob3IpOwoKICAgIAkJCWlmIChkZWZhdWx0X3Nsb3QpIHsKICAgIAkJCQlkZWZhdWx0X3Nsb3QubShzZWxlY3QsIG51bGwpOwogICAgCQkJfQoKICAgIAkJCWlmIChzZWxlY3RfZGF0YS5tdWx0aXBsZSkgc2VsZWN0X29wdGlvbnMoc2VsZWN0LCBzZWxlY3RfZGF0YS52YWx1ZSk7CiAgICAJCQlzZWxlY3Rfb3B0aW9uKHNlbGVjdCwgLyp2YWx1ZSovIGN0eFsxXSk7CiAgICAJCQljdXJyZW50ID0gdHJ1ZTsKCiAgICAJCQlpZiAoIW1vdW50ZWQpIHsKICAgIAkJCQlkaXNwb3NlID0gWwogICAgCQkJCQlsaXN0ZW5fZGV2KHNlbGVjdCwgImJsdXIiLCAvKmJsdXJfaGFuZGxlcl8xNiovIGN0eFsxMzNdLCBmYWxzZSwgZmFsc2UsIGZhbHNlKSwKICAgIAkJCQkJbGlzdGVuX2RldihzZWxlY3QsICJmb2N1cyIsIC8qZm9jdXNfaGFuZGxlcl8xNiovIGN0eFsxMzRdLCBmYWxzZSwgZmFsc2UsIGZhbHNlKSwKICAgIAkJCQkJbGlzdGVuX2RldihzZWxlY3QsICJjaGFuZ2UiLCAvKmNoYW5nZV9oYW5kbGVyXzE1Ki8gY3R4WzEzNV0sIGZhbHNlLCBmYWxzZSwgZmFsc2UpLAogICAgCQkJCQlsaXN0ZW5fZGV2KHNlbGVjdCwgImlucHV0IiwgLyppbnB1dF9oYW5kbGVyXzE1Ki8gY3R4WzEzNl0sIGZhbHNlLCBmYWxzZSwgZmFsc2UpLAogICAgCQkJCQlsaXN0ZW5fZGV2KHNlbGVjdCwgImNoYW5nZSIsIC8qc2VsZWN0X2NoYW5nZV9oYW5kbGVyKi8gY3R4WzE1Ml0pCiAgICAJCQkJXTsKCiAgICAJCQkJbW91bnRlZCA9IHRydWU7CiAgICAJCQl9CiAgICAJCX0sCiAgICAJCXA6IGZ1bmN0aW9uIHVwZGF0ZShjdHgsIGRpcnR5KSB7CiAgICAJCQlpZiAoZGVmYXVsdF9zbG90KSB7CiAgICAJCQkJaWYgKGRlZmF1bHRfc2xvdC5wICYmIGRpcnR5WzBdICYgLyokJHNjb3BlKi8gMjA5NzE1MikgewogICAgCQkJCQl1cGRhdGVfc2xvdChkZWZhdWx0X3Nsb3QsIGRlZmF1bHRfc2xvdF90ZW1wbGF0ZSwgY3R4LCAvKiQkc2NvcGUqLyBjdHhbMjFdLCBkaXJ0eSwgbnVsbCwgbnVsbCk7CiAgICAJCQkJfQogICAgCQkJfQoKICAgIAkJCXNldF9hdHRyaWJ1dGVzKHNlbGVjdCwgc2VsZWN0X2RhdGEgPSBnZXRfc3ByZWFkX3VwZGF0ZShzZWxlY3RfbGV2ZWxzLCBbCiAgICAJCQkJZGlydHlbMF0gJiAvKiQkcmVzdFByb3BzKi8gNDA5NiAmJiAvKiQkcmVzdFByb3BzKi8gY3R4WzEyXSwKICAgIAkJCQkoIWN1cnJlbnQgfHwgZGlydHlbMF0gJiAvKmNsYXNzZXMqLyA1MTIpICYmIHsgY2xhc3M6IC8qY2xhc3NlcyovIGN0eFs5XSB9LAogICAgCQkJCSghY3VycmVudCB8fCBkaXJ0eVswXSAmIC8qbmFtZSovIDY0KSAmJiB7IG5hbWU6IC8qbmFtZSovIGN0eFs2XSB9LAogICAgCQkJCSghY3VycmVudCB8fCBkaXJ0eVswXSAmIC8qZGlzYWJsZWQqLyAyNTYpICYmIHsgZGlzYWJsZWQ6IC8qZGlzYWJsZWQqLyBjdHhbOF0gfSwKICAgIAkJCQkoIWN1cnJlbnQgfHwgZGlydHlbMF0gJiAvKnJlYWRvbmx5Ki8gMTYpICYmIHsgcmVhZG9ubHk6IC8qcmVhZG9ubHkqLyBjdHhbNF0gfQogICAgCQkJXSkpOwoKICAgIAkJCWlmIChkaXJ0eVswXSAmIC8qJCRyZXN0UHJvcHMsIGNsYXNzZXMsIG5hbWUsIGRpc2FibGVkLCByZWFkb25seSovIDQ5NDQgJiYgc2VsZWN0X2RhdGEubXVsdGlwbGUpIHNlbGVjdF9vcHRpb25zKHNlbGVjdCwgc2VsZWN0X2RhdGEudmFsdWUpOwoKICAgIAkJCWlmIChkaXJ0eVswXSAmIC8qdmFsdWUqLyAyKSB7CiAgICAJCQkJc2VsZWN0X29wdGlvbihzZWxlY3QsIC8qdmFsdWUqLyBjdHhbMV0pOwogICAgCQkJfQogICAgCQl9LAogICAgCQlpOiBmdW5jdGlvbiBpbnRybyhsb2NhbCkgewogICAgCQkJaWYgKGN1cnJlbnQpIHJldHVybjsKICAgIAkJCXRyYW5zaXRpb25faW4oZGVmYXVsdF9zbG90LCBsb2NhbCk7CiAgICAJCQljdXJyZW50ID0gdHJ1ZTsKICAgIAkJfSwKICAgIAkJbzogZnVuY3Rpb24gb3V0cm8obG9jYWwpIHsKICAgIAkJCXRyYW5zaXRpb25fb3V0KGRlZmF1bHRfc2xvdCwgbG9jYWwpOwogICAgCQkJY3VycmVudCA9IGZhbHNlOwogICAgCQl9LAogICAgCQlkOiBmdW5jdGlvbiBkZXN0cm95KGRldGFjaGluZykgewogICAgCQkJaWYgKGRldGFjaGluZykgZGV0YWNoX2RldihzZWxlY3QpOwogICAgCQkJaWYgKGRlZmF1bHRfc2xvdCkgZGVmYXVsdF9zbG90LmQoZGV0YWNoaW5nKTsKICAgIAkJCW1vdW50ZWQgPSBmYWxzZTsKICAgIAkJCXJ1bl9hbGwoZGlzcG9zZSk7CiAgICAJCX0KICAgIAl9OwoKICAgIAlkaXNwYXRjaF9kZXYoIlN2ZWx0ZVJlZ2lzdGVyQmxvY2siLCB7CiAgICAJCWJsb2NrLAogICAgCQlpZDogY3JlYXRlX2lmX2Jsb2NrXzE2Lm5hbWUsCiAgICAJCXR5cGU6ICJpZiIsCiAgICAJCXNvdXJjZTogIigzNTY6NDApICIsCiAgICAJCWN0eAogICAgCX0pOwoKICAgIAlyZXR1cm4gYmxvY2s7CiAgICB9CgogICAgLy8gKDM0MDoyOSkgCiAgICBmdW5jdGlvbiBjcmVhdGVfaWZfYmxvY2tfMTUoY3R4KSB7CiAgICAJbGV0IHRleHRhcmVhOwogICAgCWxldCBtb3VudGVkOwogICAgCWxldCBkaXNwb3NlOwoKICAgIAlsZXQgdGV4dGFyZWFfbGV2ZWxzID0gWwogICAgCQkvKiQkcmVzdFByb3BzKi8gY3R4WzEyXSwKICAgIAkJeyBjbGFzczogLypjbGFzc2VzKi8gY3R4WzldIH0sCiAgICAJCXsgcGxhY2Vob2xkZXI6IC8qcGxhY2Vob2xkZXIqLyBjdHhbN10gfSwKICAgIAkJeyBuYW1lOiAvKm5hbWUqLyBjdHhbNl0gfSwKICAgIAkJeyBkaXNhYmxlZDogLypkaXNhYmxlZCovIGN0eFs4XSB9LAogICAgCQl7IHJlYWRPbmx5OiAvKnJlYWRvbmx5Ki8gY3R4WzRdIH0KICAgIAldOwoKICAgIAlsZXQgdGV4dGFyZWFfZGF0YSA9IHt9OwoKICAgIAlmb3IgKGxldCBpID0gMDsgaSA8IHRleHRhcmVhX2xldmVscy5sZW5ndGg7IGkgKz0gMSkgewogICAgCQl0ZXh0YXJlYV9kYXRhID0gYXNzaWduKHRleHRhcmVhX2RhdGEsIHRleHRhcmVhX2xldmVsc1tpXSk7CiAgICAJfQoKICAgIAljb25zdCBibG9jayA9IHsKICAgIAkJYzogZnVuY3Rpb24gY3JlYXRlKCkgewogICAgCQkJdGV4dGFyZWEgPSBlbGVtZW50KCJ0ZXh0YXJlYSIpOwogICAgCQkJc2V0X2F0dHJpYnV0ZXModGV4dGFyZWEsIHRleHRhcmVhX2RhdGEpOwogICAgCQkJYWRkX2xvY2F0aW9uKHRleHRhcmVhLCBmaWxlJDYsIDM0MCwgMiwgNjgzMCk7CiAgICAJCX0sCiAgICAJCW06IGZ1bmN0aW9uIG1vdW50KHRhcmdldCwgYW5jaG9yKSB7CiAgICAJCQlpbnNlcnRfZGV2KHRhcmdldCwgdGV4dGFyZWEsIGFuY2hvcik7CiAgICAJCQlzZXRfaW5wdXRfdmFsdWUodGV4dGFyZWEsIC8qdmFsdWUqLyBjdHhbMV0pOwoKICAgIAkJCWlmICghbW91bnRlZCkgewogICAgCQkJCWRpc3Bvc2UgPSBbCiAgICAJCQkJCWxpc3Rlbl9kZXYodGV4dGFyZWEsICJibHVyIiwgLypibHVyX2hhbmRsZXJfMTUqLyBjdHhbMTI3XSwgZmFsc2UsIGZhbHNlLCBmYWxzZSksCiAgICAJCQkJCWxpc3Rlbl9kZXYodGV4dGFyZWEsICJmb2N1cyIsIC8qZm9jdXNfaGFuZGxlcl8xNSovIGN0eFsxMjhdLCBmYWxzZSwgZmFsc2UsIGZhbHNlKSwKICAgIAkJCQkJbGlzdGVuX2Rldih0ZXh0YXJlYSwgImtleWRvd24iLCAvKmtleWRvd25faGFuZGxlcl8xNSovIGN0eFsxMjldLCBmYWxzZSwgZmFsc2UsIGZhbHNlKSwKICAgIAkJCQkJbGlzdGVuX2Rldih0ZXh0YXJlYSwgImtleXByZXNzIiwgLyprZXlwcmVzc19oYW5kbGVyXzE1Ki8gY3R4WzEzMF0sIGZhbHNlLCBmYWxzZSwgZmFsc2UpLAogICAgCQkJCQlsaXN0ZW5fZGV2KHRleHRhcmVhLCAia2V5dXAiLCAvKmtleXVwX2hhbmRsZXJfMTUqLyBjdHhbMTMxXSwgZmFsc2UsIGZhbHNlLCBmYWxzZSksCiAgICAJCQkJCWxpc3Rlbl9kZXYodGV4dGFyZWEsICJjaGFuZ2UiLCAvKmNoYW5nZV9oYW5kbGVyXzE0Ki8gY3R4WzEyNl0sIGZhbHNlLCBmYWxzZSwgZmFsc2UpLAogICAgCQkJCQlsaXN0ZW5fZGV2KHRleHRhcmVhLCAiaW5wdXQiLCAvKmlucHV0X2hhbmRsZXJfMTQqLyBjdHhbMTMyXSwgZmFsc2UsIGZhbHNlLCBmYWxzZSksCiAgICAJCQkJCWxpc3Rlbl9kZXYodGV4dGFyZWEsICJpbnB1dCIsIC8qdGV4dGFyZWFfaW5wdXRfaGFuZGxlciovIGN0eFsxNTFdKQogICAgCQkJCV07CgogICAgCQkJCW1vdW50ZWQgPSB0cnVlOwogICAgCQkJfQogICAgCQl9LAogICAgCQlwOiBmdW5jdGlvbiB1cGRhdGUoY3R4LCBkaXJ0eSkgewogICAgCQkJc2V0X2F0dHJpYnV0ZXModGV4dGFyZWEsIHRleHRhcmVhX2RhdGEgPSBnZXRfc3ByZWFkX3VwZGF0ZSh0ZXh0YXJlYV9sZXZlbHMsIFsKICAgIAkJCQlkaXJ0eVswXSAmIC8qJCRyZXN0UHJvcHMqLyA0MDk2ICYmIC8qJCRyZXN0UHJvcHMqLyBjdHhbMTJdLAogICAgCQkJCWRpcnR5WzBdICYgLypjbGFzc2VzKi8gNTEyICYmIHsgY2xhc3M6IC8qY2xhc3NlcyovIGN0eFs5XSB9LAogICAgCQkJCWRpcnR5WzBdICYgLypwbGFjZWhvbGRlciovIDEyOCAmJiB7IHBsYWNlaG9sZGVyOiAvKnBsYWNlaG9sZGVyKi8gY3R4WzddIH0sCiAgICAJCQkJZGlydHlbMF0gJiAvKm5hbWUqLyA2NCAmJiB7IG5hbWU6IC8qbmFtZSovIGN0eFs2XSB9LAogICAgCQkJCWRpcnR5WzBdICYgLypkaXNhYmxlZCovIDI1NiAmJiB7IGRpc2FibGVkOiAvKmRpc2FibGVkKi8gY3R4WzhdIH0sCiAgICAJCQkJZGlydHlbMF0gJiAvKnJlYWRvbmx5Ki8gMTYgJiYgeyByZWFkT25seTogLypyZWFkb25seSovIGN0eFs0XSB9CiAgICAJCQldKSk7CgogICAgCQkJaWYgKGRpcnR5WzBdICYgLyp2YWx1ZSovIDIpIHsKICAgIAkJCQlzZXRfaW5wdXRfdmFsdWUodGV4dGFyZWEsIC8qdmFsdWUqLyBjdHhbMV0pOwogICAgCQkJfQogICAgCQl9LAogICAgCQlpOiBub29wLAogICAgCQlvOiBub29wLAogICAgCQlkOiBmdW5jdGlvbiBkZXN0cm95KGRldGFjaGluZykgewogICAgCQkJaWYgKGRldGFjaGluZykgZGV0YWNoX2Rldih0ZXh0YXJlYSk7CiAgICAJCQltb3VudGVkID0gZmFsc2U7CiAgICAJCQlydW5fYWxsKGRpc3Bvc2UpOwogICAgCQl9CiAgICAJfTsKCiAgICAJZGlzcGF0Y2hfZGV2KCJTdmVsdGVSZWdpc3RlckJsb2NrIiwgewogICAgCQlibG9jaywKICAgIAkJaWQ6IGNyZWF0ZV9pZl9ibG9ja18xNS5uYW1lLAogICAgCQl0eXBlOiAiaWYiLAogICAgCQlzb3VyY2U6ICIoMzQwOjI5KSAiLAogICAgCQljdHgKICAgIAl9KTsKCiAgICAJcmV0dXJuIGJsb2NrOwogICAgfQoKICAgIC8vICg4MjowKSB7I2lmIHRhZyA9PT0gJ2lucHV0J30KICAgIGZ1bmN0aW9uIGNyZWF0ZV9pZl9ibG9jayQyKGN0eCkgewogICAgCWxldCBpZl9ibG9ja19hbmNob3I7CgogICAgCWZ1bmN0aW9uIHNlbGVjdF9ibG9ja190eXBlXzEoY3R4LCBkaXJ0eSkgewogICAgCQlpZiAoLyp0eXBlKi8gY3R4WzNdID09PSAidGV4dCIpIHJldHVybiBjcmVhdGVfaWZfYmxvY2tfMSQxOwogICAgCQlpZiAoLyp0eXBlKi8gY3R4WzNdID09PSAicGFzc3dvcmQiKSByZXR1cm4gY3JlYXRlX2lmX2Jsb2NrXzIkMTsKICAgIAkJaWYgKC8qdHlwZSovIGN0eFszXSA9PT0gImVtYWlsIikgcmV0dXJuIGNyZWF0ZV9pZl9ibG9ja18zJDE7CiAgICAJCWlmICgvKnR5cGUqLyBjdHhbM10gPT09ICJmaWxlIikgcmV0dXJuIGNyZWF0ZV9pZl9ibG9ja180OwogICAgCQlpZiAoLyp0eXBlKi8gY3R4WzNdID09PSAiY2hlY2tib3giKSByZXR1cm4gY3JlYXRlX2lmX2Jsb2NrXzU7CiAgICAJCWlmICgvKnR5cGUqLyBjdHhbM10gPT09ICJyYWRpbyIpIHJldHVybiBjcmVhdGVfaWZfYmxvY2tfNjsKICAgIAkJaWYgKC8qdHlwZSovIGN0eFszXSA9PT0gInVybCIpIHJldHVybiBjcmVhdGVfaWZfYmxvY2tfNzsKICAgIAkJaWYgKC8qdHlwZSovIGN0eFszXSA9PT0gIm51bWJlciIpIHJldHVybiBjcmVhdGVfaWZfYmxvY2tfODsKICAgIAkJaWYgKC8qdHlwZSovIGN0eFszXSA9PT0gImRhdGUiKSByZXR1cm4gY3JlYXRlX2lmX2Jsb2NrXzk7CiAgICAJCWlmICgvKnR5cGUqLyBjdHhbM10gPT09ICJ0aW1lIikgcmV0dXJuIGNyZWF0ZV9pZl9ibG9ja18xMDsKICAgIAkJaWYgKC8qdHlwZSovIGN0eFszXSA9PT0gImRhdGV0aW1lIikgcmV0dXJuIGNyZWF0ZV9pZl9ibG9ja18xMTsKICAgIAkJaWYgKC8qdHlwZSovIGN0eFszXSA9PT0gImNvbG9yIikgcmV0dXJuIGNyZWF0ZV9pZl9ibG9ja18xMjsKICAgIAkJaWYgKC8qdHlwZSovIGN0eFszXSA9PT0gInJhbmdlIikgcmV0dXJuIGNyZWF0ZV9pZl9ibG9ja18xMzsKICAgIAkJaWYgKC8qdHlwZSovIGN0eFszXSA9PT0gInNlYXJjaCIpIHJldHVybiBjcmVhdGVfaWZfYmxvY2tfMTQ7CiAgICAJCXJldHVybiBjcmVhdGVfZWxzZV9ibG9jayQyOwogICAgCX0KCiAgICAJbGV0IGN1cnJlbnRfYmxvY2tfdHlwZSA9IHNlbGVjdF9ibG9ja190eXBlXzEoY3R4KTsKICAgIAlsZXQgaWZfYmxvY2sgPSBjdXJyZW50X2Jsb2NrX3R5cGUoY3R4KTsKCiAgICAJY29uc3QgYmxvY2sgPSB7CiAgICAJCWM6IGZ1bmN0aW9uIGNyZWF0ZSgpIHsKICAgIAkJCWlmX2Jsb2NrLmMoKTsKICAgIAkJCWlmX2Jsb2NrX2FuY2hvciA9IGVtcHR5KCk7CiAgICAJCX0sCiAgICAJCW06IGZ1bmN0aW9uIG1vdW50KHRhcmdldCwgYW5jaG9yKSB7CiAgICAJCQlpZl9ibG9jay5tKHRhcmdldCwgYW5jaG9yKTsKICAgIAkJCWluc2VydF9kZXYodGFyZ2V0LCBpZl9ibG9ja19hbmNob3IsIGFuY2hvcik7CiAgICAJCX0sCiAgICAJCXA6IGZ1bmN0aW9uIHVwZGF0ZShjdHgsIGRpcnR5KSB7CiAgICAJCQlpZiAoY3VycmVudF9ibG9ja190eXBlID09PSAoY3VycmVudF9ibG9ja190eXBlID0gc2VsZWN0X2Jsb2NrX3R5cGVfMShjdHgpKSAmJiBpZl9ibG9jaykgewogICAgCQkJCWlmX2Jsb2NrLnAoY3R4LCBkaXJ0eSk7CiAgICAJCQl9IGVsc2UgewogICAgCQkJCWlmX2Jsb2NrLmQoMSk7CiAgICAJCQkJaWZfYmxvY2sgPSBjdXJyZW50X2Jsb2NrX3R5cGUoY3R4KTsKCiAgICAJCQkJaWYgKGlmX2Jsb2NrKSB7CiAgICAJCQkJCWlmX2Jsb2NrLmMoKTsKICAgIAkJCQkJaWZfYmxvY2subShpZl9ibG9ja19hbmNob3IucGFyZW50Tm9kZSwgaWZfYmxvY2tfYW5jaG9yKTsKICAgIAkJCQl9CiAgICAJCQl9CiAgICAJCX0sCiAgICAJCWk6IG5vb3AsCiAgICAJCW86IG5vb3AsCiAgICAJCWQ6IGZ1bmN0aW9uIGRlc3Ryb3koZGV0YWNoaW5nKSB7CiAgICAJCQlpZl9ibG9jay5kKGRldGFjaGluZyk7CiAgICAJCQlpZiAoZGV0YWNoaW5nKSBkZXRhY2hfZGV2KGlmX2Jsb2NrX2FuY2hvcik7CiAgICAJCX0KICAgIAl9OwoKICAgIAlkaXNwYXRjaF9kZXYoIlN2ZWx0ZVJlZ2lzdGVyQmxvY2siLCB7CiAgICAJCWJsb2NrLAogICAgCQlpZDogY3JlYXRlX2lmX2Jsb2NrJDIubmFtZSwKICAgIAkJdHlwZTogImlmIiwKICAgIAkJc291cmNlOiAiKDgyOjApIHsjaWYgdGFnID09PSAnaW5wdXQnfSIsCiAgICAJCWN0eAogICAgCX0pOwoKICAgIAlyZXR1cm4gYmxvY2s7CiAgICB9CgogICAgLy8gKDMyMjoyKSB7OmVsc2V9CiAgICBmdW5jdGlvbiBjcmVhdGVfZWxzZV9ibG9jayQyKGN0eCkgewogICAgCWxldCBpbnB1dDsKICAgIAlsZXQgbW91bnRlZDsKICAgIAlsZXQgZGlzcG9zZTsKCiAgICAJbGV0IGlucHV0X2xldmVscyA9IFsKICAgIAkJLyokJHJlc3RQcm9wcyovIGN0eFsxMl0sCiAgICAJCXsgdHlwZTogLyp0eXBlKi8gY3R4WzNdIH0sCiAgICAJCXsgcmVhZE9ubHk6IC8qcmVhZG9ubHkqLyBjdHhbNF0gfSwKICAgIAkJeyBjbGFzczogLypjbGFzc2VzKi8gY3R4WzldIH0sCiAgICAJCXsgbmFtZTogLypuYW1lKi8gY3R4WzZdIH0sCiAgICAJCXsgZGlzYWJsZWQ6IC8qZGlzYWJsZWQqLyBjdHhbOF0gfSwKICAgIAkJeyBwbGFjZWhvbGRlcjogLypwbGFjZWhvbGRlciovIGN0eFs3XSB9LAogICAgCQl7IHZhbHVlOiAvKnZhbHVlKi8gY3R4WzFdIH0KICAgIAldOwoKICAgIAlsZXQgaW5wdXRfZGF0YSA9IHt9OwoKICAgIAlmb3IgKGxldCBpID0gMDsgaSA8IGlucHV0X2xldmVscy5sZW5ndGg7IGkgKz0gMSkgewogICAgCQlpbnB1dF9kYXRhID0gYXNzaWduKGlucHV0X2RhdGEsIGlucHV0X2xldmVsc1tpXSk7CiAgICAJfQoKICAgIAljb25zdCBibG9jayA9IHsKICAgIAkJYzogZnVuY3Rpb24gY3JlYXRlKCkgewogICAgCQkJaW5wdXQgPSBlbGVtZW50KCJpbnB1dCIpOwogICAgCQkJc2V0X2F0dHJpYnV0ZXMoaW5wdXQsIGlucHV0X2RhdGEpOwogICAgCQkJYWRkX2xvY2F0aW9uKGlucHV0LCBmaWxlJDYsIDMyMiwgNCwgNjUwMyk7CiAgICAJCX0sCiAgICAJCW06IGZ1bmN0aW9uIG1vdW50KHRhcmdldCwgYW5jaG9yKSB7CiAgICAJCQlpbnNlcnRfZGV2KHRhcmdldCwgaW5wdXQsIGFuY2hvcik7CiAgICAJCQlpbnB1dC52YWx1ZSA9IGlucHV0X2RhdGEudmFsdWU7CgogICAgCQkJaWYgKCFtb3VudGVkKSB7CiAgICAJCQkJZGlzcG9zZSA9IFsKICAgIAkJCQkJbGlzdGVuX2RldihpbnB1dCwgImJsdXIiLCAvKmJsdXJfaGFuZGxlcl8xNCovIGN0eFsxMjFdLCBmYWxzZSwgZmFsc2UsIGZhbHNlKSwKICAgIAkJCQkJbGlzdGVuX2RldihpbnB1dCwgImZvY3VzIiwgLypmb2N1c19oYW5kbGVyXzE0Ki8gY3R4WzEyMl0sIGZhbHNlLCBmYWxzZSwgZmFsc2UpLAogICAgCQkJCQlsaXN0ZW5fZGV2KGlucHV0LCAia2V5ZG93biIsIC8qa2V5ZG93bl9oYW5kbGVyXzE0Ki8gY3R4WzEyM10sIGZhbHNlLCBmYWxzZSwgZmFsc2UpLAogICAgCQkJCQlsaXN0ZW5fZGV2KGlucHV0LCAia2V5cHJlc3MiLCAvKmtleXByZXNzX2hhbmRsZXJfMTQqLyBjdHhbMTI0XSwgZmFsc2UsIGZhbHNlLCBmYWxzZSksCiAgICAJCQkJCWxpc3Rlbl9kZXYoaW5wdXQsICJrZXl1cCIsIC8qa2V5dXBfaGFuZGxlcl8xNCovIGN0eFsxMjVdLCBmYWxzZSwgZmFsc2UsIGZhbHNlKSwKICAgIAkJCQkJbGlzdGVuX2RldihpbnB1dCwgImlucHV0IiwgLypoYW5kbGVJbnB1dCovIGN0eFsxMV0sIGZhbHNlLCBmYWxzZSwgZmFsc2UpLAogICAgCQkJCQlsaXN0ZW5fZGV2KGlucHV0LCAiY2hhbmdlIiwgLypoYW5kbGVJbnB1dCovIGN0eFsxMV0sIGZhbHNlLCBmYWxzZSwgZmFsc2UpCiAgICAJCQkJXTsKCiAgICAJCQkJbW91bnRlZCA9IHRydWU7CiAgICAJCQl9CiAgICAJCX0sCiAgICAJCXA6IGZ1bmN0aW9uIHVwZGF0ZShjdHgsIGRpcnR5KSB7CiAgICAJCQlzZXRfYXR0cmlidXRlcyhpbnB1dCwgaW5wdXRfZGF0YSA9IGdldF9zcHJlYWRfdXBkYXRlKGlucHV0X2xldmVscywgWwogICAgCQkJCWRpcnR5WzBdICYgLyokJHJlc3RQcm9wcyovIDQwOTYgJiYgLyokJHJlc3RQcm9wcyovIGN0eFsxMl0sCiAgICAJCQkJZGlydHlbMF0gJiAvKnR5cGUqLyA4ICYmIHsgdHlwZTogLyp0eXBlKi8gY3R4WzNdIH0sCiAgICAJCQkJZGlydHlbMF0gJiAvKnJlYWRvbmx5Ki8gMTYgJiYgeyByZWFkT25seTogLypyZWFkb25seSovIGN0eFs0XSB9LAogICAgCQkJCWRpcnR5WzBdICYgLypjbGFzc2VzKi8gNTEyICYmIHsgY2xhc3M6IC8qY2xhc3NlcyovIGN0eFs5XSB9LAogICAgCQkJCWRpcnR5WzBdICYgLypuYW1lKi8gNjQgJiYgeyBuYW1lOiAvKm5hbWUqLyBjdHhbNl0gfSwKICAgIAkJCQlkaXJ0eVswXSAmIC8qZGlzYWJsZWQqLyAyNTYgJiYgeyBkaXNhYmxlZDogLypkaXNhYmxlZCovIGN0eFs4XSB9LAogICAgCQkJCWRpcnR5WzBdICYgLypwbGFjZWhvbGRlciovIDEyOCAmJiB7IHBsYWNlaG9sZGVyOiAvKnBsYWNlaG9sZGVyKi8gY3R4WzddIH0sCiAgICAJCQkJZGlydHlbMF0gJiAvKnZhbHVlKi8gMiAmJiBpbnB1dC52YWx1ZSAhPT0gLyp2YWx1ZSovIGN0eFsxXSAmJiB7IHZhbHVlOiAvKnZhbHVlKi8gY3R4WzFdIH0KICAgIAkJCV0pKTsKCiAgICAJCQlpZiAoInZhbHVlIiBpbiBpbnB1dF9kYXRhKSB7CiAgICAJCQkJaW5wdXQudmFsdWUgPSBpbnB1dF9kYXRhLnZhbHVlOwogICAgCQkJfQogICAgCQl9LAogICAgCQlkOiBmdW5jdGlvbiBkZXN0cm95KGRldGFjaGluZykgewogICAgCQkJaWYgKGRldGFjaGluZykgZGV0YWNoX2RldihpbnB1dCk7CiAgICAJCQltb3VudGVkID0gZmFsc2U7CiAgICAJCQlydW5fYWxsKGRpc3Bvc2UpOwogICAgCQl9CiAgICAJfTsKCiAgICAJZGlzcGF0Y2hfZGV2KCJTdmVsdGVSZWdpc3RlckJsb2NrIiwgewogICAgCQlibG9jaywKICAgIAkJaWQ6IGNyZWF0ZV9lbHNlX2Jsb2NrJDIubmFtZSwKICAgIAkJdHlwZTogImVsc2UiLAogICAgCQlzb3VyY2U6ICIoMzIyOjIpIHs6ZWxzZX0iLAogICAgCQljdHgKICAgIAl9KTsKCiAgICAJcmV0dXJuIGJsb2NrOwogICAgfQoKICAgIC8vICgzMDU6MzApIAogICAgZnVuY3Rpb24gY3JlYXRlX2lmX2Jsb2NrXzE0KGN0eCkgewogICAgCWxldCBpbnB1dDsKICAgIAlsZXQgbW91bnRlZDsKICAgIAlsZXQgZGlzcG9zZTsKCiAgICAJbGV0IGlucHV0X2xldmVscyA9IFsKICAgIAkJLyokJHJlc3RQcm9wcyovIGN0eFsxMl0sCiAgICAJCXsgdHlwZTogInNlYXJjaCIgfSwKICAgIAkJeyBkaXNhYmxlZDogLypkaXNhYmxlZCovIGN0eFs4XSB9LAogICAgCQl7IHJlYWRPbmx5OiAvKnJlYWRvbmx5Ki8gY3R4WzRdIH0sCiAgICAJCXsgY2xhc3M6IC8qY2xhc3NlcyovIGN0eFs5XSB9LAogICAgCQl7IG5hbWU6IC8qbmFtZSovIGN0eFs2XSB9LAogICAgCQl7IHBsYWNlaG9sZGVyOiAvKnBsYWNlaG9sZGVyKi8gY3R4WzddIH0KICAgIAldOwoKICAgIAlsZXQgaW5wdXRfZGF0YSA9IHt9OwoKICAgIAlmb3IgKGxldCBpID0gMDsgaSA8IGlucHV0X2xldmVscy5sZW5ndGg7IGkgKz0gMSkgewogICAgCQlpbnB1dF9kYXRhID0gYXNzaWduKGlucHV0X2RhdGEsIGlucHV0X2xldmVsc1tpXSk7CiAgICAJfQoKICAgIAljb25zdCBibG9jayA9IHsKICAgIAkJYzogZnVuY3Rpb24gY3JlYXRlKCkgewogICAgCQkJaW5wdXQgPSBlbGVtZW50KCJpbnB1dCIpOwogICAgCQkJc2V0X2F0dHJpYnV0ZXMoaW5wdXQsIGlucHV0X2RhdGEpOwogICAgCQkJYWRkX2xvY2F0aW9uKGlucHV0LCBmaWxlJDYsIDMwNSwgNCwgNjIyMCk7CiAgICAJCX0sCiAgICAJCW06IGZ1bmN0aW9uIG1vdW50KHRhcmdldCwgYW5jaG9yKSB7CiAgICAJCQlpbnNlcnRfZGV2KHRhcmdldCwgaW5wdXQsIGFuY2hvcik7CiAgICAJCQlzZXRfaW5wdXRfdmFsdWUoaW5wdXQsIC8qdmFsdWUqLyBjdHhbMV0pOwoKICAgIAkJCWlmICghbW91bnRlZCkgewogICAgCQkJCWRpc3Bvc2UgPSBbCiAgICAJCQkJCWxpc3Rlbl9kZXYoaW5wdXQsICJibHVyIiwgLypibHVyX2hhbmRsZXJfMTMqLyBjdHhbMTE1XSwgZmFsc2UsIGZhbHNlLCBmYWxzZSksCiAgICAJCQkJCWxpc3Rlbl9kZXYoaW5wdXQsICJmb2N1cyIsIC8qZm9jdXNfaGFuZGxlcl8xMyovIGN0eFsxMTZdLCBmYWxzZSwgZmFsc2UsIGZhbHNlKSwKICAgIAkJCQkJbGlzdGVuX2RldihpbnB1dCwgImtleWRvd24iLCAvKmtleWRvd25faGFuZGxlcl8xMyovIGN0eFsxMTddLCBmYWxzZSwgZmFsc2UsIGZhbHNlKSwKICAgIAkJCQkJbGlzdGVuX2RldihpbnB1dCwgImtleXByZXNzIiwgLyprZXlwcmVzc19oYW5kbGVyXzEzKi8gY3R4WzExOF0sIGZhbHNlLCBmYWxzZSwgZmFsc2UpLAogICAgCQkJCQlsaXN0ZW5fZGV2KGlucHV0LCAia2V5dXAiLCAvKmtleXVwX2hhbmRsZXJfMTMqLyBjdHhbMTE5XSwgZmFsc2UsIGZhbHNlLCBmYWxzZSksCiAgICAJCQkJCWxpc3Rlbl9kZXYoaW5wdXQsICJjaGFuZ2UiLCAvKmNoYW5nZV9oYW5kbGVyXzEzKi8gY3R4WzExNF0sIGZhbHNlLCBmYWxzZSwgZmFsc2UpLAogICAgCQkJCQlsaXN0ZW5fZGV2KGlucHV0LCAiaW5wdXQiLCAvKmlucHV0X2hhbmRsZXJfMTMqLyBjdHhbMTIwXSwgZmFsc2UsIGZhbHNlLCBmYWxzZSksCiAgICAJCQkJCWxpc3Rlbl9kZXYoaW5wdXQsICJpbnB1dCIsIC8qaW5wdXRfaW5wdXRfaGFuZGxlcl85Ki8gY3R4WzE1MF0pCiAgICAJCQkJXTsKCiAgICAJCQkJbW91bnRlZCA9IHRydWU7CiAgICAJCQl9CiAgICAJCX0sCiAgICAJCXA6IGZ1bmN0aW9uIHVwZGF0ZShjdHgsIGRpcnR5KSB7CiAgICAJCQlzZXRfYXR0cmlidXRlcyhpbnB1dCwgaW5wdXRfZGF0YSA9IGdldF9zcHJlYWRfdXBkYXRlKGlucHV0X2xldmVscywgWwogICAgCQkJCWRpcnR5WzBdICYgLyokJHJlc3RQcm9wcyovIDQwOTYgJiYgLyokJHJlc3RQcm9wcyovIGN0eFsxMl0sCiAgICAJCQkJeyB0eXBlOiAic2VhcmNoIiB9LAogICAgCQkJCWRpcnR5WzBdICYgLypkaXNhYmxlZCovIDI1NiAmJiB7IGRpc2FibGVkOiAvKmRpc2FibGVkKi8gY3R4WzhdIH0sCiAgICAJCQkJZGlydHlbMF0gJiAvKnJlYWRvbmx5Ki8gMTYgJiYgeyByZWFkT25seTogLypyZWFkb25seSovIGN0eFs0XSB9LAogICAgCQkJCWRpcnR5WzBdICYgLypjbGFzc2VzKi8gNTEyICYmIHsgY2xhc3M6IC8qY2xhc3NlcyovIGN0eFs5XSB9LAogICAgCQkJCWRpcnR5WzBdICYgLypuYW1lKi8gNjQgJiYgeyBuYW1lOiAvKm5hbWUqLyBjdHhbNl0gfSwKICAgIAkJCQlkaXJ0eVswXSAmIC8qcGxhY2Vob2xkZXIqLyAxMjggJiYgeyBwbGFjZWhvbGRlcjogLypwbGFjZWhvbGRlciovIGN0eFs3XSB9CiAgICAJCQldKSk7CgogICAgCQkJaWYgKGRpcnR5WzBdICYgLyp2YWx1ZSovIDIpIHsKICAgIAkJCQlzZXRfaW5wdXRfdmFsdWUoaW5wdXQsIC8qdmFsdWUqLyBjdHhbMV0pOwogICAgCQkJfQogICAgCQl9LAogICAgCQlkOiBmdW5jdGlvbiBkZXN0cm95KGRldGFjaGluZykgewogICAgCQkJaWYgKGRldGFjaGluZykgZGV0YWNoX2RldihpbnB1dCk7CiAgICAJCQltb3VudGVkID0gZmFsc2U7CiAgICAJCQlydW5fYWxsKGRpc3Bvc2UpOwogICAgCQl9CiAgICAJfTsKCiAgICAJZGlzcGF0Y2hfZGV2KCJTdmVsdGVSZWdpc3RlckJsb2NrIiwgewogICAgCQlibG9jaywKICAgIAkJaWQ6IGNyZWF0ZV9pZl9ibG9ja18xNC5uYW1lLAogICAgCQl0eXBlOiAiaWYiLAogICAgCQlzb3VyY2U6ICIoMzA1OjMwKSAiLAogICAgCQljdHgKICAgIAl9KTsKCiAgICAJcmV0dXJuIGJsb2NrOwogICAgfQoKICAgIC8vICgyODg6MjkpIAogICAgZnVuY3Rpb24gY3JlYXRlX2lmX2Jsb2NrXzEzKGN0eCkgewogICAgCWxldCBpbnB1dDsKICAgIAlsZXQgbW91bnRlZDsKICAgIAlsZXQgZGlzcG9zZTsKCiAgICAJbGV0IGlucHV0X2xldmVscyA9IFsKICAgIAkJLyokJHJlc3RQcm9wcyovIGN0eFsxMl0sCiAgICAJCXsgdHlwZTogInJhbmdlIiB9LAogICAgCQl7IGRpc2FibGVkOiAvKmRpc2FibGVkKi8gY3R4WzhdIH0sCiAgICAJCXsgcmVhZE9ubHk6IC8qcmVhZG9ubHkqLyBjdHhbNF0gfSwKICAgIAkJeyBjbGFzczogLypjbGFzc2VzKi8gY3R4WzldIH0sCiAgICAJCXsgbmFtZTogLypuYW1lKi8gY3R4WzZdIH0sCiAgICAJCXsgcGxhY2Vob2xkZXI6IC8qcGxhY2Vob2xkZXIqLyBjdHhbN10gfQogICAgCV07CgogICAgCWxldCBpbnB1dF9kYXRhID0ge307CgogICAgCWZvciAobGV0IGkgPSAwOyBpIDwgaW5wdXRfbGV2ZWxzLmxlbmd0aDsgaSArPSAxKSB7CiAgICAJCWlucHV0X2RhdGEgPSBhc3NpZ24oaW5wdXRfZGF0YSwgaW5wdXRfbGV2ZWxzW2ldKTsKICAgIAl9CgogICAgCWNvbnN0IGJsb2NrID0gewogICAgCQljOiBmdW5jdGlvbiBjcmVhdGUoKSB7CiAgICAJCQlpbnB1dCA9IGVsZW1lbnQoImlucHV0Iik7CiAgICAJCQlzZXRfYXR0cmlidXRlcyhpbnB1dCwgaW5wdXRfZGF0YSk7CiAgICAJCQlhZGRfbG9jYXRpb24oaW5wdXQsIGZpbGUkNiwgMjg4LCA0LCA1OTE3KTsKICAgIAkJfSwKICAgIAkJbTogZnVuY3Rpb24gbW91bnQodGFyZ2V0LCBhbmNob3IpIHsKICAgIAkJCWluc2VydF9kZXYodGFyZ2V0LCBpbnB1dCwgYW5jaG9yKTsKICAgIAkJCXNldF9pbnB1dF92YWx1ZShpbnB1dCwgLyp2YWx1ZSovIGN0eFsxXSk7CgogICAgCQkJaWYgKCFtb3VudGVkKSB7CiAgICAJCQkJZGlzcG9zZSA9IFsKICAgIAkJCQkJbGlzdGVuX2RldihpbnB1dCwgImJsdXIiLCAvKmJsdXJfaGFuZGxlcl8xMiovIGN0eFsxMDhdLCBmYWxzZSwgZmFsc2UsIGZhbHNlKSwKICAgIAkJCQkJbGlzdGVuX2RldihpbnB1dCwgImZvY3VzIiwgLypmb2N1c19oYW5kbGVyXzEyKi8gY3R4WzEwOV0sIGZhbHNlLCBmYWxzZSwgZmFsc2UpLAogICAgCQkJCQlsaXN0ZW5fZGV2KGlucHV0LCAia2V5ZG93biIsIC8qa2V5ZG93bl9oYW5kbGVyXzEyKi8gY3R4WzExMF0sIGZhbHNlLCBmYWxzZSwgZmFsc2UpLAogICAgCQkJCQlsaXN0ZW5fZGV2KGlucHV0LCAia2V5cHJlc3MiLCAvKmtleXByZXNzX2hhbmRsZXJfMTIqLyBjdHhbMTExXSwgZmFsc2UsIGZhbHNlLCBmYWxzZSksCiAgICAJCQkJCWxpc3Rlbl9kZXYoaW5wdXQsICJrZXl1cCIsIC8qa2V5dXBfaGFuZGxlcl8xMiovIGN0eFsxMTJdLCBmYWxzZSwgZmFsc2UsIGZhbHNlKSwKICAgIAkJCQkJbGlzdGVuX2RldihpbnB1dCwgImNoYW5nZSIsIC8qY2hhbmdlX2hhbmRsZXJfMTIqLyBjdHhbMTA3XSwgZmFsc2UsIGZhbHNlLCBmYWxzZSksCiAgICAJCQkJCWxpc3Rlbl9kZXYoaW5wdXQsICJpbnB1dCIsIC8qaW5wdXRfaGFuZGxlcl8xMiovIGN0eFsxMTNdLCBmYWxzZSwgZmFsc2UsIGZhbHNlKSwKICAgIAkJCQkJbGlzdGVuX2RldihpbnB1dCwgImNoYW5nZSIsIC8qaW5wdXRfY2hhbmdlX2lucHV0X2hhbmRsZXIqLyBjdHhbMTQ5XSksCiAgICAJCQkJCWxpc3Rlbl9kZXYoaW5wdXQsICJpbnB1dCIsIC8qaW5wdXRfY2hhbmdlX2lucHV0X2hhbmRsZXIqLyBjdHhbMTQ5XSkKICAgIAkJCQldOwoKICAgIAkJCQltb3VudGVkID0gdHJ1ZTsKICAgIAkJCX0KICAgIAkJfSwKICAgIAkJcDogZnVuY3Rpb24gdXBkYXRlKGN0eCwgZGlydHkpIHsKICAgIAkJCXNldF9hdHRyaWJ1dGVzKGlucHV0LCBpbnB1dF9kYXRhID0gZ2V0X3NwcmVhZF91cGRhdGUoaW5wdXRfbGV2ZWxzLCBbCiAgICAJCQkJZGlydHlbMF0gJiAvKiQkcmVzdFByb3BzKi8gNDA5NiAmJiAvKiQkcmVzdFByb3BzKi8gY3R4WzEyXSwKICAgIAkJCQl7IHR5cGU6ICJyYW5nZSIgfSwKICAgIAkJCQlkaXJ0eVswXSAmIC8qZGlzYWJsZWQqLyAyNTYgJiYgeyBkaXNhYmxlZDogLypkaXNhYmxlZCovIGN0eFs4XSB9LAogICAgCQkJCWRpcnR5WzBdICYgLypyZWFkb25seSovIDE2ICYmIHsgcmVhZE9ubHk6IC8qcmVhZG9ubHkqLyBjdHhbNF0gfSwKICAgIAkJCQlkaXJ0eVswXSAmIC8qY2xhc3NlcyovIDUxMiAmJiB7IGNsYXNzOiAvKmNsYXNzZXMqLyBjdHhbOV0gfSwKICAgIAkJCQlkaXJ0eVswXSAmIC8qbmFtZSovIDY0ICYmIHsgbmFtZTogLypuYW1lKi8gY3R4WzZdIH0sCiAgICAJCQkJZGlydHlbMF0gJiAvKnBsYWNlaG9sZGVyKi8gMTI4ICYmIHsgcGxhY2Vob2xkZXI6IC8qcGxhY2Vob2xkZXIqLyBjdHhbN10gfQogICAgCQkJXSkpOwoKICAgIAkJCWlmIChkaXJ0eVswXSAmIC8qdmFsdWUqLyAyKSB7CiAgICAJCQkJc2V0X2lucHV0X3ZhbHVlKGlucHV0LCAvKnZhbHVlKi8gY3R4WzFdKTsKICAgIAkJCX0KICAgIAkJfSwKICAgIAkJZDogZnVuY3Rpb24gZGVzdHJveShkZXRhY2hpbmcpIHsKICAgIAkJCWlmIChkZXRhY2hpbmcpIGRldGFjaF9kZXYoaW5wdXQpOwogICAgCQkJbW91bnRlZCA9IGZhbHNlOwogICAgCQkJcnVuX2FsbChkaXNwb3NlKTsKICAgIAkJfQogICAgCX07CgogICAgCWRpc3BhdGNoX2RldigiU3ZlbHRlUmVnaXN0ZXJCbG9jayIsIHsKICAgIAkJYmxvY2ssCiAgICAJCWlkOiBjcmVhdGVfaWZfYmxvY2tfMTMubmFtZSwKICAgIAkJdHlwZTogImlmIiwKICAgIAkJc291cmNlOiAiKDI4ODoyOSkgIiwKICAgIAkJY3R4CiAgICAJfSk7CgogICAgCXJldHVybiBibG9jazsKICAgIH0KCiAgICAvLyAoMjcxOjI5KSAKICAgIGZ1bmN0aW9uIGNyZWF0ZV9pZl9ibG9ja18xMihjdHgpIHsKICAgIAlsZXQgaW5wdXQ7CiAgICAJbGV0IG1vdW50ZWQ7CiAgICAJbGV0IGRpc3Bvc2U7CgogICAgCWxldCBpbnB1dF9sZXZlbHMgPSBbCiAgICAJCS8qJCRyZXN0UHJvcHMqLyBjdHhbMTJdLAogICAgCQl7IHR5cGU6ICJjb2xvciIgfSwKICAgIAkJeyBkaXNhYmxlZDogLypkaXNhYmxlZCovIGN0eFs4XSB9LAogICAgCQl7IHJlYWRPbmx5OiAvKnJlYWRvbmx5Ki8gY3R4WzRdIH0sCiAgICAJCXsgY2xhc3M6IC8qY2xhc3NlcyovIGN0eFs5XSB9LAogICAgCQl7IG5hbWU6IC8qbmFtZSovIGN0eFs2XSB9LAogICAgCQl7IHBsYWNlaG9sZGVyOiAvKnBsYWNlaG9sZGVyKi8gY3R4WzddIH0KICAgIAldOwoKICAgIAlsZXQgaW5wdXRfZGF0YSA9IHt9OwoKICAgIAlmb3IgKGxldCBpID0gMDsgaSA8IGlucHV0X2xldmVscy5sZW5ndGg7IGkgKz0gMSkgewogICAgCQlpbnB1dF9kYXRhID0gYXNzaWduKGlucHV0X2RhdGEsIGlucHV0X2xldmVsc1tpXSk7CiAgICAJfQoKICAgIAljb25zdCBibG9jayA9IHsKICAgIAkJYzogZnVuY3Rpb24gY3JlYXRlKCkgewogICAgCQkJaW5wdXQgPSBlbGVtZW50KCJpbnB1dCIpOwogICAgCQkJc2V0X2F0dHJpYnV0ZXMoaW5wdXQsIGlucHV0X2RhdGEpOwogICAgCQkJYWRkX2xvY2F0aW9uKGlucHV0LCBmaWxlJDYsIDI3MSwgNCwgNTYxNSk7CiAgICAJCX0sCiAgICAJCW06IGZ1bmN0aW9uIG1vdW50KHRhcmdldCwgYW5jaG9yKSB7CiAgICAJCQlpbnNlcnRfZGV2KHRhcmdldCwgaW5wdXQsIGFuY2hvcik7CiAgICAJCQlzZXRfaW5wdXRfdmFsdWUoaW5wdXQsIC8qdmFsdWUqLyBjdHhbMV0pOwoKICAgIAkJCWlmICghbW91bnRlZCkgewogICAgCQkJCWRpc3Bvc2UgPSBbCiAgICAJCQkJCWxpc3Rlbl9kZXYoaW5wdXQsICJibHVyIiwgLypibHVyX2hhbmRsZXJfMTEqLyBjdHhbMTAxXSwgZmFsc2UsIGZhbHNlLCBmYWxzZSksCiAgICAJCQkJCWxpc3Rlbl9kZXYoaW5wdXQsICJmb2N1cyIsIC8qZm9jdXNfaGFuZGxlcl8xMSovIGN0eFsxMDJdLCBmYWxzZSwgZmFsc2UsIGZhbHNlKSwKICAgIAkJCQkJbGlzdGVuX2RldihpbnB1dCwgImtleWRvd24iLCAvKmtleWRvd25faGFuZGxlcl8xMSovIGN0eFsxMDNdLCBmYWxzZSwgZmFsc2UsIGZhbHNlKSwKICAgIAkJCQkJbGlzdGVuX2RldihpbnB1dCwgImtleXByZXNzIiwgLyprZXlwcmVzc19oYW5kbGVyXzExKi8gY3R4WzEwNF0sIGZhbHNlLCBmYWxzZSwgZmFsc2UpLAogICAgCQkJCQlsaXN0ZW5fZGV2KGlucHV0LCAia2V5dXAiLCAvKmtleXVwX2hhbmRsZXJfMTEqLyBjdHhbMTA1XSwgZmFsc2UsIGZhbHNlLCBmYWxzZSksCiAgICAJCQkJCWxpc3Rlbl9kZXYoaW5wdXQsICJjaGFuZ2UiLCAvKmNoYW5nZV9oYW5kbGVyXzExKi8gY3R4WzEwMF0sIGZhbHNlLCBmYWxzZSwgZmFsc2UpLAogICAgCQkJCQlsaXN0ZW5fZGV2KGlucHV0LCAiaW5wdXQiLCAvKmlucHV0X2hhbmRsZXJfMTEqLyBjdHhbMTA2XSwgZmFsc2UsIGZhbHNlLCBmYWxzZSksCiAgICAJCQkJCWxpc3Rlbl9kZXYoaW5wdXQsICJpbnB1dCIsIC8qaW5wdXRfaW5wdXRfaGFuZGxlcl84Ki8gY3R4WzE0OF0pCiAgICAJCQkJXTsKCiAgICAJCQkJbW91bnRlZCA9IHRydWU7CiAgICAJCQl9CiAgICAJCX0sCiAgICAJCXA6IGZ1bmN0aW9uIHVwZGF0ZShjdHgsIGRpcnR5KSB7CiAgICAJCQlzZXRfYXR0cmlidXRlcyhpbnB1dCwgaW5wdXRfZGF0YSA9IGdldF9zcHJlYWRfdXBkYXRlKGlucHV0X2xldmVscywgWwogICAgCQkJCWRpcnR5WzBdICYgLyokJHJlc3RQcm9wcyovIDQwOTYgJiYgLyokJHJlc3RQcm9wcyovIGN0eFsxMl0sCiAgICAJCQkJeyB0eXBlOiAiY29sb3IiIH0sCiAgICAJCQkJZGlydHlbMF0gJiAvKmRpc2FibGVkKi8gMjU2ICYmIHsgZGlzYWJsZWQ6IC8qZGlzYWJsZWQqLyBjdHhbOF0gfSwKICAgIAkJCQlkaXJ0eVswXSAmIC8qcmVhZG9ubHkqLyAxNiAmJiB7IHJlYWRPbmx5OiAvKnJlYWRvbmx5Ki8gY3R4WzRdIH0sCiAgICAJCQkJZGlydHlbMF0gJiAvKmNsYXNzZXMqLyA1MTIgJiYgeyBjbGFzczogLypjbGFzc2VzKi8gY3R4WzldIH0sCiAgICAJCQkJZGlydHlbMF0gJiAvKm5hbWUqLyA2NCAmJiB7IG5hbWU6IC8qbmFtZSovIGN0eFs2XSB9LAogICAgCQkJCWRpcnR5WzBdICYgLypwbGFjZWhvbGRlciovIDEyOCAmJiB7IHBsYWNlaG9sZGVyOiAvKnBsYWNlaG9sZGVyKi8gY3R4WzddIH0KICAgIAkJCV0pKTsKCiAgICAJCQlpZiAoZGlydHlbMF0gJiAvKnZhbHVlKi8gMikgewogICAgCQkJCXNldF9pbnB1dF92YWx1ZShpbnB1dCwgLyp2YWx1ZSovIGN0eFsxXSk7CiAgICAJCQl9CiAgICAJCX0sCiAgICAJCWQ6IGZ1bmN0aW9uIGRlc3Ryb3koZGV0YWNoaW5nKSB7CiAgICAJCQlpZiAoZGV0YWNoaW5nKSBkZXRhY2hfZGV2KGlucHV0KTsKICAgIAkJCW1vdW50ZWQgPSBmYWxzZTsKICAgIAkJCXJ1bl9hbGwoZGlzcG9zZSk7CiAgICAJCX0KICAgIAl9OwoKICAgIAlkaXNwYXRjaF9kZXYoIlN2ZWx0ZVJlZ2lzdGVyQmxvY2siLCB7CiAgICAJCWJsb2NrLAogICAgCQlpZDogY3JlYXRlX2lmX2Jsb2NrXzEyLm5hbWUsCiAgICAJCXR5cGU6ICJpZiIsCiAgICAJCXNvdXJjZTogIigyNzE6MjkpICIsCiAgICAJCWN0eAogICAgCX0pOwoKICAgIAlyZXR1cm4gYmxvY2s7CiAgICB9CgogICAgLy8gKDI1NDozMikgCiAgICBmdW5jdGlvbiBjcmVhdGVfaWZfYmxvY2tfMTEoY3R4KSB7CiAgICAJbGV0IGlucHV0OwogICAgCWxldCBtb3VudGVkOwogICAgCWxldCBkaXNwb3NlOwoKICAgIAlsZXQgaW5wdXRfbGV2ZWxzID0gWwogICAgCQkvKiQkcmVzdFByb3BzKi8gY3R4WzEyXSwKICAgIAkJeyB0eXBlOiAiZGF0ZXRpbWUiIH0sCiAgICAJCXsgZGlzYWJsZWQ6IC8qZGlzYWJsZWQqLyBjdHhbOF0gfSwKICAgIAkJeyByZWFkT25seTogLypyZWFkb25seSovIGN0eFs0XSB9LAogICAgCQl7IGNsYXNzOiAvKmNsYXNzZXMqLyBjdHhbOV0gfSwKICAgIAkJeyBuYW1lOiAvKm5hbWUqLyBjdHhbNl0gfSwKICAgIAkJeyBwbGFjZWhvbGRlcjogLypwbGFjZWhvbGRlciovIGN0eFs3XSB9CiAgICAJXTsKCiAgICAJbGV0IGlucHV0X2RhdGEgPSB7fTsKCiAgICAJZm9yIChsZXQgaSA9IDA7IGkgPCBpbnB1dF9sZXZlbHMubGVuZ3RoOyBpICs9IDEpIHsKICAgIAkJaW5wdXRfZGF0YSA9IGFzc2lnbihpbnB1dF9kYXRhLCBpbnB1dF9sZXZlbHNbaV0pOwogICAgCX0KCiAgICAJY29uc3QgYmxvY2sgPSB7CiAgICAJCWM6IGZ1bmN0aW9uIGNyZWF0ZSgpIHsKICAgIAkJCWlucHV0ID0gZWxlbWVudCgiaW5wdXQiKTsKICAgIAkJCXNldF9hdHRyaWJ1dGVzKGlucHV0LCBpbnB1dF9kYXRhKTsKICAgIAkJCWFkZF9sb2NhdGlvbihpbnB1dCwgZmlsZSQ2LCAyNTQsIDQsIDUzMTApOwogICAgCQl9LAogICAgCQltOiBmdW5jdGlvbiBtb3VudCh0YXJnZXQsIGFuY2hvcikgewogICAgCQkJaW5zZXJ0X2Rldih0YXJnZXQsIGlucHV0LCBhbmNob3IpOwogICAgCQkJc2V0X2lucHV0X3ZhbHVlKGlucHV0LCAvKnZhbHVlKi8gY3R4WzFdKTsKCiAgICAJCQlpZiAoIW1vdW50ZWQpIHsKICAgIAkJCQlkaXNwb3NlID0gWwogICAgCQkJCQlsaXN0ZW5fZGV2KGlucHV0LCAiYmx1ciIsIC8qYmx1cl9oYW5kbGVyXzEwKi8gY3R4Wzk0XSwgZmFsc2UsIGZhbHNlLCBmYWxzZSksCiAgICAJCQkJCWxpc3Rlbl9kZXYoaW5wdXQsICJmb2N1cyIsIC8qZm9jdXNfaGFuZGxlcl8xMCovIGN0eFs5NV0sIGZhbHNlLCBmYWxzZSwgZmFsc2UpLAogICAgCQkJCQlsaXN0ZW5fZGV2KGlucHV0LCAia2V5ZG93biIsIC8qa2V5ZG93bl9oYW5kbGVyXzEwKi8gY3R4Wzk2XSwgZmFsc2UsIGZhbHNlLCBmYWxzZSksCiAgICAJCQkJCWxpc3Rlbl9kZXYoaW5wdXQsICJrZXlwcmVzcyIsIC8qa2V5cHJlc3NfaGFuZGxlcl8xMCovIGN0eFs5N10sIGZhbHNlLCBmYWxzZSwgZmFsc2UpLAogICAgCQkJCQlsaXN0ZW5fZGV2KGlucHV0LCAia2V5dXAiLCAvKmtleXVwX2hhbmRsZXJfMTAqLyBjdHhbOThdLCBmYWxzZSwgZmFsc2UsIGZhbHNlKSwKICAgIAkJCQkJbGlzdGVuX2RldihpbnB1dCwgImNoYW5nZSIsIC8qY2hhbmdlX2hhbmRsZXJfMTAqLyBjdHhbOTNdLCBmYWxzZSwgZmFsc2UsIGZhbHNlKSwKICAgIAkJCQkJbGlzdGVuX2RldihpbnB1dCwgImlucHV0IiwgLyppbnB1dF9oYW5kbGVyXzEwKi8gY3R4Wzk5XSwgZmFsc2UsIGZhbHNlLCBmYWxzZSksCiAgICAJCQkJCWxpc3Rlbl9kZXYoaW5wdXQsICJpbnB1dCIsIC8qaW5wdXRfaW5wdXRfaGFuZGxlcl83Ki8gY3R4WzE0N10pCiAgICAJCQkJXTsKCiAgICAJCQkJbW91bnRlZCA9IHRydWU7CiAgICAJCQl9CiAgICAJCX0sCiAgICAJCXA6IGZ1bmN0aW9uIHVwZGF0ZShjdHgsIGRpcnR5KSB7CiAgICAJCQlzZXRfYXR0cmlidXRlcyhpbnB1dCwgaW5wdXRfZGF0YSA9IGdldF9zcHJlYWRfdXBkYXRlKGlucHV0X2xldmVscywgWwogICAgCQkJCWRpcnR5WzBdICYgLyokJHJlc3RQcm9wcyovIDQwOTYgJiYgLyokJHJlc3RQcm9wcyovIGN0eFsxMl0sCiAgICAJCQkJeyB0eXBlOiAiZGF0ZXRpbWUiIH0sCiAgICAJCQkJZGlydHlbMF0gJiAvKmRpc2FibGVkKi8gMjU2ICYmIHsgZGlzYWJsZWQ6IC8qZGlzYWJsZWQqLyBjdHhbOF0gfSwKICAgIAkJCQlkaXJ0eVswXSAmIC8qcmVhZG9ubHkqLyAxNiAmJiB7IHJlYWRPbmx5OiAvKnJlYWRvbmx5Ki8gY3R4WzRdIH0sCiAgICAJCQkJZGlydHlbMF0gJiAvKmNsYXNzZXMqLyA1MTIgJiYgeyBjbGFzczogLypjbGFzc2VzKi8gY3R4WzldIH0sCiAgICAJCQkJZGlydHlbMF0gJiAvKm5hbWUqLyA2NCAmJiB7IG5hbWU6IC8qbmFtZSovIGN0eFs2XSB9LAogICAgCQkJCWRpcnR5WzBdICYgLypwbGFjZWhvbGRlciovIDEyOCAmJiB7IHBsYWNlaG9sZGVyOiAvKnBsYWNlaG9sZGVyKi8gY3R4WzddIH0KICAgIAkJCV0pKTsKCiAgICAJCQlpZiAoZGlydHlbMF0gJiAvKnZhbHVlKi8gMikgewogICAgCQkJCXNldF9pbnB1dF92YWx1ZShpbnB1dCwgLyp2YWx1ZSovIGN0eFsxXSk7CiAgICAJCQl9CiAgICAJCX0sCiAgICAJCWQ6IGZ1bmN0aW9uIGRlc3Ryb3koZGV0YWNoaW5nKSB7CiAgICAJCQlpZiAoZGV0YWNoaW5nKSBkZXRhY2hfZGV2KGlucHV0KTsKICAgIAkJCW1vdW50ZWQgPSBmYWxzZTsKICAgIAkJCXJ1bl9hbGwoZGlzcG9zZSk7CiAgICAJCX0KICAgIAl9OwoKICAgIAlkaXNwYXRjaF9kZXYoIlN2ZWx0ZVJlZ2lzdGVyQmxvY2siLCB7CiAgICAJCWJsb2NrLAogICAgCQlpZDogY3JlYXRlX2lmX2Jsb2NrXzExLm5hbWUsCiAgICAJCXR5cGU6ICJpZiIsCiAgICAJCXNvdXJjZTogIigyNTQ6MzIpICIsCiAgICAJCWN0eAogICAgCX0pOwoKICAgIAlyZXR1cm4gYmxvY2s7CiAgICB9CgogICAgLy8gKDIzNzoyOCkgCiAgICBmdW5jdGlvbiBjcmVhdGVfaWZfYmxvY2tfMTAoY3R4KSB7CiAgICAJbGV0IGlucHV0OwogICAgCWxldCBtb3VudGVkOwogICAgCWxldCBkaXNwb3NlOwoKICAgIAlsZXQgaW5wdXRfbGV2ZWxzID0gWwogICAgCQkvKiQkcmVzdFByb3BzKi8gY3R4WzEyXSwKICAgIAkJeyB0eXBlOiAidGltZSIgfSwKICAgIAkJeyBkaXNhYmxlZDogLypkaXNhYmxlZCovIGN0eFs4XSB9LAogICAgCQl7IHJlYWRPbmx5OiAvKnJlYWRvbmx5Ki8gY3R4WzRdIH0sCiAgICAJCXsgY2xhc3M6IC8qY2xhc3NlcyovIGN0eFs5XSB9LAogICAgCQl7IG5hbWU6IC8qbmFtZSovIGN0eFs2XSB9LAogICAgCQl7IHBsYWNlaG9sZGVyOiAvKnBsYWNlaG9sZGVyKi8gY3R4WzddIH0KICAgIAldOwoKICAgIAlsZXQgaW5wdXRfZGF0YSA9IHt9OwoKICAgIAlmb3IgKGxldCBpID0gMDsgaSA8IGlucHV0X2xldmVscy5sZW5ndGg7IGkgKz0gMSkgewogICAgCQlpbnB1dF9kYXRhID0gYXNzaWduKGlucHV0X2RhdGEsIGlucHV0X2xldmVsc1tpXSk7CiAgICAJfQoKICAgIAljb25zdCBibG9jayA9IHsKICAgIAkJYzogZnVuY3Rpb24gY3JlYXRlKCkgewogICAgCQkJaW5wdXQgPSBlbGVtZW50KCJpbnB1dCIpOwogICAgCQkJc2V0X2F0dHJpYnV0ZXMoaW5wdXQsIGlucHV0X2RhdGEpOwogICAgCQkJYWRkX2xvY2F0aW9uKGlucHV0LCBmaWxlJDYsIDIzNywgNCwgNTAwNik7CiAgICAJCX0sCiAgICAJCW06IGZ1bmN0aW9uIG1vdW50KHRhcmdldCwgYW5jaG9yKSB7CiAgICAJCQlpbnNlcnRfZGV2KHRhcmdldCwgaW5wdXQsIGFuY2hvcik7CiAgICAJCQlzZXRfaW5wdXRfdmFsdWUoaW5wdXQsIC8qdmFsdWUqLyBjdHhbMV0pOwoKICAgIAkJCWlmICghbW91bnRlZCkgewogICAgCQkJCWRpc3Bvc2UgPSBbCiAgICAJCQkJCWxpc3Rlbl9kZXYoaW5wdXQsICJibHVyIiwgLypibHVyX2hhbmRsZXJfOSovIGN0eFs4N10sIGZhbHNlLCBmYWxzZSwgZmFsc2UpLAogICAgCQkJCQlsaXN0ZW5fZGV2KGlucHV0LCAiZm9jdXMiLCAvKmZvY3VzX2hhbmRsZXJfOSovIGN0eFs4OF0sIGZhbHNlLCBmYWxzZSwgZmFsc2UpLAogICAgCQkJCQlsaXN0ZW5fZGV2KGlucHV0LCAia2V5ZG93biIsIC8qa2V5ZG93bl9oYW5kbGVyXzkqLyBjdHhbODldLCBmYWxzZSwgZmFsc2UsIGZhbHNlKSwKICAgIAkJCQkJbGlzdGVuX2RldihpbnB1dCwgImtleXByZXNzIiwgLyprZXlwcmVzc19oYW5kbGVyXzkqLyBjdHhbOTBdLCBmYWxzZSwgZmFsc2UsIGZhbHNlKSwKICAgIAkJCQkJbGlzdGVuX2RldihpbnB1dCwgImtleXVwIiwgLyprZXl1cF9oYW5kbGVyXzkqLyBjdHhbOTFdLCBmYWxzZSwgZmFsc2UsIGZhbHNlKSwKICAgIAkJCQkJbGlzdGVuX2RldihpbnB1dCwgImNoYW5nZSIsIC8qY2hhbmdlX2hhbmRsZXJfOSovIGN0eFs4Nl0sIGZhbHNlLCBmYWxzZSwgZmFsc2UpLAogICAgCQkJCQlsaXN0ZW5fZGV2KGlucHV0LCAiaW5wdXQiLCAvKmlucHV0X2hhbmRsZXJfOSovIGN0eFs5Ml0sIGZhbHNlLCBmYWxzZSwgZmFsc2UpLAogICAgCQkJCQlsaXN0ZW5fZGV2KGlucHV0LCAiaW5wdXQiLCAvKmlucHV0X2lucHV0X2hhbmRsZXJfNiovIGN0eFsxNDZdKQogICAgCQkJCV07CgogICAgCQkJCW1vdW50ZWQgPSB0cnVlOwogICAgCQkJfQogICAgCQl9LAogICAgCQlwOiBmdW5jdGlvbiB1cGRhdGUoY3R4LCBkaXJ0eSkgewogICAgCQkJc2V0X2F0dHJpYnV0ZXMoaW5wdXQsIGlucHV0X2RhdGEgPSBnZXRfc3ByZWFkX3VwZGF0ZShpbnB1dF9sZXZlbHMsIFsKICAgIAkJCQlkaXJ0eVswXSAmIC8qJCRyZXN0UHJvcHMqLyA0MDk2ICYmIC8qJCRyZXN0UHJvcHMqLyBjdHhbMTJdLAogICAgCQkJCXsgdHlwZTogInRpbWUiIH0sCiAgICAJCQkJZGlydHlbMF0gJiAvKmRpc2FibGVkKi8gMjU2ICYmIHsgZGlzYWJsZWQ6IC8qZGlzYWJsZWQqLyBjdHhbOF0gfSwKICAgIAkJCQlkaXJ0eVswXSAmIC8qcmVhZG9ubHkqLyAxNiAmJiB7IHJlYWRPbmx5OiAvKnJlYWRvbmx5Ki8gY3R4WzRdIH0sCiAgICAJCQkJZGlydHlbMF0gJiAvKmNsYXNzZXMqLyA1MTIgJiYgeyBjbGFzczogLypjbGFzc2VzKi8gY3R4WzldIH0sCiAgICAJCQkJZGlydHlbMF0gJiAvKm5hbWUqLyA2NCAmJiB7IG5hbWU6IC8qbmFtZSovIGN0eFs2XSB9LAogICAgCQkJCWRpcnR5WzBdICYgLypwbGFjZWhvbGRlciovIDEyOCAmJiB7IHBsYWNlaG9sZGVyOiAvKnBsYWNlaG9sZGVyKi8gY3R4WzddIH0KICAgIAkJCV0pKTsKCiAgICAJCQlpZiAoZGlydHlbMF0gJiAvKnZhbHVlKi8gMikgewogICAgCQkJCXNldF9pbnB1dF92YWx1ZShpbnB1dCwgLyp2YWx1ZSovIGN0eFsxXSk7CiAgICAJCQl9CiAgICAJCX0sCiAgICAJCWQ6IGZ1bmN0aW9uIGRlc3Ryb3koZGV0YWNoaW5nKSB7CiAgICAJCQlpZiAoZGV0YWNoaW5nKSBkZXRhY2hfZGV2KGlucHV0KTsKICAgIAkJCW1vdW50ZWQgPSBmYWxzZTsKICAgIAkJCXJ1bl9hbGwoZGlzcG9zZSk7CiAgICAJCX0KICAgIAl9OwoKICAgIAlkaXNwYXRjaF9kZXYoIlN2ZWx0ZVJlZ2lzdGVyQmxvY2siLCB7CiAgICAJCWJsb2NrLAogICAgCQlpZDogY3JlYXRlX2lmX2Jsb2NrXzEwLm5hbWUsCiAgICAJCXR5cGU6ICJpZiIsCiAgICAJCXNvdXJjZTogIigyMzc6MjgpICIsCiAgICAJCWN0eAogICAgCX0pOwoKICAgIAlyZXR1cm4gYmxvY2s7CiAgICB9CgogICAgLy8gKDIyMDoyOCkgCiAgICBmdW5jdGlvbiBjcmVhdGVfaWZfYmxvY2tfOShjdHgpIHsKICAgIAlsZXQgaW5wdXQ7CiAgICAJbGV0IG1vdW50ZWQ7CiAgICAJbGV0IGRpc3Bvc2U7CgogICAgCWxldCBpbnB1dF9sZXZlbHMgPSBbCiAgICAJCS8qJCRyZXN0UHJvcHMqLyBjdHhbMTJdLAogICAgCQl7IHR5cGU6ICJkYXRlIiB9LAogICAgCQl7IGRpc2FibGVkOiAvKmRpc2FibGVkKi8gY3R4WzhdIH0sCiAgICAJCXsgcmVhZE9ubHk6IC8qcmVhZG9ubHkqLyBjdHhbNF0gfSwKICAgIAkJeyBjbGFzczogLypjbGFzc2VzKi8gY3R4WzldIH0sCiAgICAJCXsgbmFtZTogLypuYW1lKi8gY3R4WzZdIH0sCiAgICAJCXsgcGxhY2Vob2xkZXI6IC8qcGxhY2Vob2xkZXIqLyBjdHhbN10gfQogICAgCV07CgogICAgCWxldCBpbnB1dF9kYXRhID0ge307CgogICAgCWZvciAobGV0IGkgPSAwOyBpIDwgaW5wdXRfbGV2ZWxzLmxlbmd0aDsgaSArPSAxKSB7CiAgICAJCWlucHV0X2RhdGEgPSBhc3NpZ24oaW5wdXRfZGF0YSwgaW5wdXRfbGV2ZWxzW2ldKTsKICAgIAl9CgogICAgCWNvbnN0IGJsb2NrID0gewogICAgCQljOiBmdW5jdGlvbiBjcmVhdGUoKSB7CiAgICAJCQlpbnB1dCA9IGVsZW1lbnQoImlucHV0Iik7CiAgICAJCQlzZXRfYXR0cmlidXRlcyhpbnB1dCwgaW5wdXRfZGF0YSk7CiAgICAJCQlhZGRfbG9jYXRpb24oaW5wdXQsIGZpbGUkNiwgMjIwLCA0LCA0NzA2KTsKICAgIAkJfSwKICAgIAkJbTogZnVuY3Rpb24gbW91bnQodGFyZ2V0LCBhbmNob3IpIHsKICAgIAkJCWluc2VydF9kZXYodGFyZ2V0LCBpbnB1dCwgYW5jaG9yKTsKICAgIAkJCXNldF9pbnB1dF92YWx1ZShpbnB1dCwgLyp2YWx1ZSovIGN0eFsxXSk7CgogICAgCQkJaWYgKCFtb3VudGVkKSB7CiAgICAJCQkJZGlzcG9zZSA9IFsKICAgIAkJCQkJbGlzdGVuX2RldihpbnB1dCwgImJsdXIiLCAvKmJsdXJfaGFuZGxlcl84Ki8gY3R4WzgwXSwgZmFsc2UsIGZhbHNlLCBmYWxzZSksCiAgICAJCQkJCWxpc3Rlbl9kZXYoaW5wdXQsICJmb2N1cyIsIC8qZm9jdXNfaGFuZGxlcl84Ki8gY3R4WzgxXSwgZmFsc2UsIGZhbHNlLCBmYWxzZSksCiAgICAJCQkJCWxpc3Rlbl9kZXYoaW5wdXQsICJrZXlkb3duIiwgLyprZXlkb3duX2hhbmRsZXJfOCovIGN0eFs4Ml0sIGZhbHNlLCBmYWxzZSwgZmFsc2UpLAogICAgCQkJCQlsaXN0ZW5fZGV2KGlucHV0LCAia2V5cHJlc3MiLCAvKmtleXByZXNzX2hhbmRsZXJfOCovIGN0eFs4M10sIGZhbHNlLCBmYWxzZSwgZmFsc2UpLAogICAgCQkJCQlsaXN0ZW5fZGV2KGlucHV0LCAia2V5dXAiLCAvKmtleXVwX2hhbmRsZXJfOCovIGN0eFs4NF0sIGZhbHNlLCBmYWxzZSwgZmFsc2UpLAogICAgCQkJCQlsaXN0ZW5fZGV2KGlucHV0LCAiY2hhbmdlIiwgLypjaGFuZ2VfaGFuZGxlcl84Ki8gY3R4Wzc5XSwgZmFsc2UsIGZhbHNlLCBmYWxzZSksCiAgICAJCQkJCWxpc3Rlbl9kZXYoaW5wdXQsICJpbnB1dCIsIC8qaW5wdXRfaGFuZGxlcl84Ki8gY3R4Wzg1XSwgZmFsc2UsIGZhbHNlLCBmYWxzZSksCiAgICAJCQkJCWxpc3Rlbl9kZXYoaW5wdXQsICJpbnB1dCIsIC8qaW5wdXRfaW5wdXRfaGFuZGxlcl81Ki8gY3R4WzE0NV0pCiAgICAJCQkJXTsKCiAgICAJCQkJbW91bnRlZCA9IHRydWU7CiAgICAJCQl9CiAgICAJCX0sCiAgICAJCXA6IGZ1bmN0aW9uIHVwZGF0ZShjdHgsIGRpcnR5KSB7CiAgICAJCQlzZXRfYXR0cmlidXRlcyhpbnB1dCwgaW5wdXRfZGF0YSA9IGdldF9zcHJlYWRfdXBkYXRlKGlucHV0X2xldmVscywgWwogICAgCQkJCWRpcnR5WzBdICYgLyokJHJlc3RQcm9wcyovIDQwOTYgJiYgLyokJHJlc3RQcm9wcyovIGN0eFsxMl0sCiAgICAJCQkJeyB0eXBlOiAiZGF0ZSIgfSwKICAgIAkJCQlkaXJ0eVswXSAmIC8qZGlzYWJsZWQqLyAyNTYgJiYgeyBkaXNhYmxlZDogLypkaXNhYmxlZCovIGN0eFs4XSB9LAogICAgCQkJCWRpcnR5WzBdICYgLypyZWFkb25seSovIDE2ICYmIHsgcmVhZE9ubHk6IC8qcmVhZG9ubHkqLyBjdHhbNF0gfSwKICAgIAkJCQlkaXJ0eVswXSAmIC8qY2xhc3NlcyovIDUxMiAmJiB7IGNsYXNzOiAvKmNsYXNzZXMqLyBjdHhbOV0gfSwKICAgIAkJCQlkaXJ0eVswXSAmIC8qbmFtZSovIDY0ICYmIHsgbmFtZTogLypuYW1lKi8gY3R4WzZdIH0sCiAgICAJCQkJZGlydHlbMF0gJiAvKnBsYWNlaG9sZGVyKi8gMTI4ICYmIHsgcGxhY2Vob2xkZXI6IC8qcGxhY2Vob2xkZXIqLyBjdHhbN10gfQogICAgCQkJXSkpOwoKICAgIAkJCWlmIChkaXJ0eVswXSAmIC8qdmFsdWUqLyAyKSB7CiAgICAJCQkJc2V0X2lucHV0X3ZhbHVlKGlucHV0LCAvKnZhbHVlKi8gY3R4WzFdKTsKICAgIAkJCX0KICAgIAkJfSwKICAgIAkJZDogZnVuY3Rpb24gZGVzdHJveShkZXRhY2hpbmcpIHsKICAgIAkJCWlmIChkZXRhY2hpbmcpIGRldGFjaF9kZXYoaW5wdXQpOwogICAgCQkJbW91bnRlZCA9IGZhbHNlOwogICAgCQkJcnVuX2FsbChkaXNwb3NlKTsKICAgIAkJfQogICAgCX07CgogICAgCWRpc3BhdGNoX2RldigiU3ZlbHRlUmVnaXN0ZXJCbG9jayIsIHsKICAgIAkJYmxvY2ssCiAgICAJCWlkOiBjcmVhdGVfaWZfYmxvY2tfOS5uYW1lLAogICAgCQl0eXBlOiAiaWYiLAogICAgCQlzb3VyY2U6ICIoMjIwOjI4KSAiLAogICAgCQljdHgKICAgIAl9KTsKCiAgICAJcmV0dXJuIGJsb2NrOwogICAgfQoKICAgIC8vICgyMDM6MzApIAogICAgZnVuY3Rpb24gY3JlYXRlX2lmX2Jsb2NrXzgoY3R4KSB7CiAgICAJbGV0IGlucHV0OwogICAgCWxldCBtb3VudGVkOwogICAgCWxldCBkaXNwb3NlOwoKICAgIAlsZXQgaW5wdXRfbGV2ZWxzID0gWwogICAgCQkvKiQkcmVzdFByb3BzKi8gY3R4WzEyXSwKICAgIAkJeyB0eXBlOiAibnVtYmVyIiB9LAogICAgCQl7IGRpc2FibGVkOiAvKmRpc2FibGVkKi8gY3R4WzhdIH0sCiAgICAJCXsgcmVhZE9ubHk6IC8qcmVhZG9ubHkqLyBjdHhbNF0gfSwKICAgIAkJeyBjbGFzczogLypjbGFzc2VzKi8gY3R4WzldIH0sCiAgICAJCXsgbmFtZTogLypuYW1lKi8gY3R4WzZdIH0sCiAgICAJCXsgcGxhY2Vob2xkZXI6IC8qcGxhY2Vob2xkZXIqLyBjdHhbN10gfQogICAgCV07CgogICAgCWxldCBpbnB1dF9kYXRhID0ge307CgogICAgCWZvciAobGV0IGkgPSAwOyBpIDwgaW5wdXRfbGV2ZWxzLmxlbmd0aDsgaSArPSAxKSB7CiAgICAJCWlucHV0X2RhdGEgPSBhc3NpZ24oaW5wdXRfZGF0YSwgaW5wdXRfbGV2ZWxzW2ldKTsKICAgIAl9CgogICAgCWNvbnN0IGJsb2NrID0gewogICAgCQljOiBmdW5jdGlvbiBjcmVhdGUoKSB7CiAgICAJCQlpbnB1dCA9IGVsZW1lbnQoImlucHV0Iik7CiAgICAJCQlzZXRfYXR0cmlidXRlcyhpbnB1dCwgaW5wdXRfZGF0YSk7CiAgICAJCQlhZGRfbG9jYXRpb24oaW5wdXQsIGZpbGUkNiwgMjAzLCA0LCA0NDA0KTsKICAgIAkJfSwKICAgIAkJbTogZnVuY3Rpb24gbW91bnQodGFyZ2V0LCBhbmNob3IpIHsKICAgIAkJCWluc2VydF9kZXYodGFyZ2V0LCBpbnB1dCwgYW5jaG9yKTsKICAgIAkJCXNldF9pbnB1dF92YWx1ZShpbnB1dCwgLyp2YWx1ZSovIGN0eFsxXSk7CgogICAgCQkJaWYgKCFtb3VudGVkKSB7CiAgICAJCQkJZGlzcG9zZSA9IFsKICAgIAkJCQkJbGlzdGVuX2RldihpbnB1dCwgImJsdXIiLCAvKmJsdXJfaGFuZGxlcl83Ki8gY3R4WzczXSwgZmFsc2UsIGZhbHNlLCBmYWxzZSksCiAgICAJCQkJCWxpc3Rlbl9kZXYoaW5wdXQsICJmb2N1cyIsIC8qZm9jdXNfaGFuZGxlcl83Ki8gY3R4Wzc0XSwgZmFsc2UsIGZhbHNlLCBmYWxzZSksCiAgICAJCQkJCWxpc3Rlbl9kZXYoaW5wdXQsICJrZXlkb3duIiwgLyprZXlkb3duX2hhbmRsZXJfNyovIGN0eFs3NV0sIGZhbHNlLCBmYWxzZSwgZmFsc2UpLAogICAgCQkJCQlsaXN0ZW5fZGV2KGlucHV0LCAia2V5cHJlc3MiLCAvKmtleXByZXNzX2hhbmRsZXJfNyovIGN0eFs3Nl0sIGZhbHNlLCBmYWxzZSwgZmFsc2UpLAogICAgCQkJCQlsaXN0ZW5fZGV2KGlucHV0LCAia2V5dXAiLCAvKmtleXVwX2hhbmRsZXJfNyovIGN0eFs3N10sIGZhbHNlLCBmYWxzZSwgZmFsc2UpLAogICAgCQkJCQlsaXN0ZW5fZGV2KGlucHV0LCAiY2hhbmdlIiwgLypjaGFuZ2VfaGFuZGxlcl83Ki8gY3R4WzcyXSwgZmFsc2UsIGZhbHNlLCBmYWxzZSksCiAgICAJCQkJCWxpc3Rlbl9kZXYoaW5wdXQsICJpbnB1dCIsIC8qaW5wdXRfaGFuZGxlcl83Ki8gY3R4Wzc4XSwgZmFsc2UsIGZhbHNlLCBmYWxzZSksCiAgICAJCQkJCWxpc3Rlbl9kZXYoaW5wdXQsICJpbnB1dCIsIC8qaW5wdXRfaW5wdXRfaGFuZGxlcl80Ki8gY3R4WzE0NF0pCiAgICAJCQkJXTsKCiAgICAJCQkJbW91bnRlZCA9IHRydWU7CiAgICAJCQl9CiAgICAJCX0sCiAgICAJCXA6IGZ1bmN0aW9uIHVwZGF0ZShjdHgsIGRpcnR5KSB7CiAgICAJCQlzZXRfYXR0cmlidXRlcyhpbnB1dCwgaW5wdXRfZGF0YSA9IGdldF9zcHJlYWRfdXBkYXRlKGlucHV0X2xldmVscywgWwogICAgCQkJCWRpcnR5WzBdICYgLyokJHJlc3RQcm9wcyovIDQwOTYgJiYgLyokJHJlc3RQcm9wcyovIGN0eFsxMl0sCiAgICAJCQkJeyB0eXBlOiAibnVtYmVyIiB9LAogICAgCQkJCWRpcnR5WzBdICYgLypkaXNhYmxlZCovIDI1NiAmJiB7IGRpc2FibGVkOiAvKmRpc2FibGVkKi8gY3R4WzhdIH0sCiAgICAJCQkJZGlydHlbMF0gJiAvKnJlYWRvbmx5Ki8gMTYgJiYgeyByZWFkT25seTogLypyZWFkb25seSovIGN0eFs0XSB9LAogICAgCQkJCWRpcnR5WzBdICYgLypjbGFzc2VzKi8gNTEyICYmIHsgY2xhc3M6IC8qY2xhc3NlcyovIGN0eFs5XSB9LAogICAgCQkJCWRpcnR5WzBdICYgLypuYW1lKi8gNjQgJiYgeyBuYW1lOiAvKm5hbWUqLyBjdHhbNl0gfSwKICAgIAkJCQlkaXJ0eVswXSAmIC8qcGxhY2Vob2xkZXIqLyAxMjggJiYgeyBwbGFjZWhvbGRlcjogLypwbGFjZWhvbGRlciovIGN0eFs3XSB9CiAgICAJCQldKSk7CgogICAgCQkJaWYgKGRpcnR5WzBdICYgLyp2YWx1ZSovIDIgJiYgdG9fbnVtYmVyKGlucHV0LnZhbHVlKSAhPT0gLyp2YWx1ZSovIGN0eFsxXSkgewogICAgCQkJCXNldF9pbnB1dF92YWx1ZShpbnB1dCwgLyp2YWx1ZSovIGN0eFsxXSk7CiAgICAJCQl9CiAgICAJCX0sCiAgICAJCWQ6IGZ1bmN0aW9uIGRlc3Ryb3koZGV0YWNoaW5nKSB7CiAgICAJCQlpZiAoZGV0YWNoaW5nKSBkZXRhY2hfZGV2KGlucHV0KTsKICAgIAkJCW1vdW50ZWQgPSBmYWxzZTsKICAgIAkJCXJ1bl9hbGwoZGlzcG9zZSk7CiAgICAJCX0KICAgIAl9OwoKICAgIAlkaXNwYXRjaF9kZXYoIlN2ZWx0ZVJlZ2lzdGVyQmxvY2siLCB7CiAgICAJCWJsb2NrLAogICAgCQlpZDogY3JlYXRlX2lmX2Jsb2NrXzgubmFtZSwKICAgIAkJdHlwZTogImlmIiwKICAgIAkJc291cmNlOiAiKDIwMzozMCkgIiwKICAgIAkJY3R4CiAgICAJfSk7CgogICAgCXJldHVybiBibG9jazsKICAgIH0KCiAgICAvLyAoMTg2OjI3KSAKICAgIGZ1bmN0aW9uIGNyZWF0ZV9pZl9ibG9ja183KGN0eCkgewogICAgCWxldCBpbnB1dDsKICAgIAlsZXQgbW91bnRlZDsKICAgIAlsZXQgZGlzcG9zZTsKCiAgICAJbGV0IGlucHV0X2xldmVscyA9IFsKICAgIAkJLyokJHJlc3RQcm9wcyovIGN0eFsxMl0sCiAgICAJCXsgdHlwZTogInVybCIgfSwKICAgIAkJeyBkaXNhYmxlZDogLypkaXNhYmxlZCovIGN0eFs4XSB9LAogICAgCQl7IHJlYWRPbmx5OiAvKnJlYWRvbmx5Ki8gY3R4WzRdIH0sCiAgICAJCXsgY2xhc3M6IC8qY2xhc3NlcyovIGN0eFs5XSB9LAogICAgCQl7IG5hbWU6IC8qbmFtZSovIGN0eFs2XSB9LAogICAgCQl7IHBsYWNlaG9sZGVyOiAvKnBsYWNlaG9sZGVyKi8gY3R4WzddIH0KICAgIAldOwoKICAgIAlsZXQgaW5wdXRfZGF0YSA9IHt9OwoKICAgIAlmb3IgKGxldCBpID0gMDsgaSA8IGlucHV0X2xldmVscy5sZW5ndGg7IGkgKz0gMSkgewogICAgCQlpbnB1dF9kYXRhID0gYXNzaWduKGlucHV0X2RhdGEsIGlucHV0X2xldmVsc1tpXSk7CiAgICAJfQoKICAgIAljb25zdCBibG9jayA9IHsKICAgIAkJYzogZnVuY3Rpb24gY3JlYXRlKCkgewogICAgCQkJaW5wdXQgPSBlbGVtZW50KCJpbnB1dCIpOwogICAgCQkJc2V0X2F0dHJpYnV0ZXMoaW5wdXQsIGlucHV0X2RhdGEpOwogICAgCQkJYWRkX2xvY2F0aW9uKGlucHV0LCBmaWxlJDYsIDE4NiwgNCwgNDEwMyk7CiAgICAJCX0sCiAgICAJCW06IGZ1bmN0aW9uIG1vdW50KHRhcmdldCwgYW5jaG9yKSB7CiAgICAJCQlpbnNlcnRfZGV2KHRhcmdldCwgaW5wdXQsIGFuY2hvcik7CiAgICAJCQlzZXRfaW5wdXRfdmFsdWUoaW5wdXQsIC8qdmFsdWUqLyBjdHhbMV0pOwoKICAgIAkJCWlmICghbW91bnRlZCkgewogICAgCQkJCWRpc3Bvc2UgPSBbCiAgICAJCQkJCWxpc3Rlbl9kZXYoaW5wdXQsICJibHVyIiwgLypibHVyX2hhbmRsZXJfNiovIGN0eFs2Nl0sIGZhbHNlLCBmYWxzZSwgZmFsc2UpLAogICAgCQkJCQlsaXN0ZW5fZGV2KGlucHV0LCAiZm9jdXMiLCAvKmZvY3VzX2hhbmRsZXJfNiovIGN0eFs2N10sIGZhbHNlLCBmYWxzZSwgZmFsc2UpLAogICAgCQkJCQlsaXN0ZW5fZGV2KGlucHV0LCAia2V5ZG93biIsIC8qa2V5ZG93bl9oYW5kbGVyXzYqLyBjdHhbNjhdLCBmYWxzZSwgZmFsc2UsIGZhbHNlKSwKICAgIAkJCQkJbGlzdGVuX2RldihpbnB1dCwgImtleXByZXNzIiwgLyprZXlwcmVzc19oYW5kbGVyXzYqLyBjdHhbNjldLCBmYWxzZSwgZmFsc2UsIGZhbHNlKSwKICAgIAkJCQkJbGlzdGVuX2RldihpbnB1dCwgImtleXVwIiwgLyprZXl1cF9oYW5kbGVyXzYqLyBjdHhbNzBdLCBmYWxzZSwgZmFsc2UsIGZhbHNlKSwKICAgIAkJCQkJbGlzdGVuX2RldihpbnB1dCwgImNoYW5nZSIsIC8qY2hhbmdlX2hhbmRsZXJfNiovIGN0eFs2NV0sIGZhbHNlLCBmYWxzZSwgZmFsc2UpLAogICAgCQkJCQlsaXN0ZW5fZGV2KGlucHV0LCAiaW5wdXQiLCAvKmlucHV0X2hhbmRsZXJfNiovIGN0eFs3MV0sIGZhbHNlLCBmYWxzZSwgZmFsc2UpLAogICAgCQkJCQlsaXN0ZW5fZGV2KGlucHV0LCAiaW5wdXQiLCAvKmlucHV0X2lucHV0X2hhbmRsZXJfMyovIGN0eFsxNDNdKQogICAgCQkJCV07CgogICAgCQkJCW1vdW50ZWQgPSB0cnVlOwogICAgCQkJfQogICAgCQl9LAogICAgCQlwOiBmdW5jdGlvbiB1cGRhdGUoY3R4LCBkaXJ0eSkgewogICAgCQkJc2V0X2F0dHJpYnV0ZXMoaW5wdXQsIGlucHV0X2RhdGEgPSBnZXRfc3ByZWFkX3VwZGF0ZShpbnB1dF9sZXZlbHMsIFsKICAgIAkJCQlkaXJ0eVswXSAmIC8qJCRyZXN0UHJvcHMqLyA0MDk2ICYmIC8qJCRyZXN0UHJvcHMqLyBjdHhbMTJdLAogICAgCQkJCXsgdHlwZTogInVybCIgfSwKICAgIAkJCQlkaXJ0eVswXSAmIC8qZGlzYWJsZWQqLyAyNTYgJiYgeyBkaXNhYmxlZDogLypkaXNhYmxlZCovIGN0eFs4XSB9LAogICAgCQkJCWRpcnR5WzBdICYgLypyZWFkb25seSovIDE2ICYmIHsgcmVhZE9ubHk6IC8qcmVhZG9ubHkqLyBjdHhbNF0gfSwKICAgIAkJCQlkaXJ0eVswXSAmIC8qY2xhc3NlcyovIDUxMiAmJiB7IGNsYXNzOiAvKmNsYXNzZXMqLyBjdHhbOV0gfSwKICAgIAkJCQlkaXJ0eVswXSAmIC8qbmFtZSovIDY0ICYmIHsgbmFtZTogLypuYW1lKi8gY3R4WzZdIH0sCiAgICAJCQkJZGlydHlbMF0gJiAvKnBsYWNlaG9sZGVyKi8gMTI4ICYmIHsgcGxhY2Vob2xkZXI6IC8qcGxhY2Vob2xkZXIqLyBjdHhbN10gfQogICAgCQkJXSkpOwoKICAgIAkJCWlmIChkaXJ0eVswXSAmIC8qdmFsdWUqLyAyKSB7CiAgICAJCQkJc2V0X2lucHV0X3ZhbHVlKGlucHV0LCAvKnZhbHVlKi8gY3R4WzFdKTsKICAgIAkJCX0KICAgIAkJfSwKICAgIAkJZDogZnVuY3Rpb24gZGVzdHJveShkZXRhY2hpbmcpIHsKICAgIAkJCWlmIChkZXRhY2hpbmcpIGRldGFjaF9kZXYoaW5wdXQpOwogICAgCQkJbW91bnRlZCA9IGZhbHNlOwogICAgCQkJcnVuX2FsbChkaXNwb3NlKTsKICAgIAkJfQogICAgCX07CgogICAgCWRpc3BhdGNoX2RldigiU3ZlbHRlUmVnaXN0ZXJCbG9jayIsIHsKICAgIAkJYmxvY2ssCiAgICAJCWlkOiBjcmVhdGVfaWZfYmxvY2tfNy5uYW1lLAogICAgCQl0eXBlOiAiaWYiLAogICAgCQlzb3VyY2U6ICIoMTg2OjI3KSAiLAogICAgCQljdHgKICAgIAl9KTsKCiAgICAJcmV0dXJuIGJsb2NrOwogICAgfQoKICAgIC8vICgxNjk6MjkpIAogICAgZnVuY3Rpb24gY3JlYXRlX2lmX2Jsb2NrXzYoY3R4KSB7CiAgICAJbGV0IGlucHV0OwogICAgCWxldCBtb3VudGVkOwogICAgCWxldCBkaXNwb3NlOwoKICAgIAlsZXQgaW5wdXRfbGV2ZWxzID0gWwogICAgCQkvKiQkcmVzdFByb3BzKi8gY3R4WzEyXSwKICAgIAkJeyB0eXBlOiAicmFkaW8iIH0sCiAgICAJCXsgZGlzYWJsZWQ6IC8qZGlzYWJsZWQqLyBjdHhbOF0gfSwKICAgIAkJeyByZWFkT25seTogLypyZWFkb25seSovIGN0eFs0XSB9LAogICAgCQl7IGNsYXNzOiAvKmNsYXNzZXMqLyBjdHhbOV0gfSwKICAgIAkJeyBuYW1lOiAvKm5hbWUqLyBjdHhbNl0gfSwKICAgIAkJeyBwbGFjZWhvbGRlcjogLypwbGFjZWhvbGRlciovIGN0eFs3XSB9CiAgICAJXTsKCiAgICAJbGV0IGlucHV0X2RhdGEgPSB7fTsKCiAgICAJZm9yIChsZXQgaSA9IDA7IGkgPCBpbnB1dF9sZXZlbHMubGVuZ3RoOyBpICs9IDEpIHsKICAgIAkJaW5wdXRfZGF0YSA9IGFzc2lnbihpbnB1dF9kYXRhLCBpbnB1dF9sZXZlbHNbaV0pOwogICAgCX0KCiAgICAJY29uc3QgYmxvY2sgPSB7CiAgICAJCWM6IGZ1bmN0aW9uIGNyZWF0ZSgpIHsKICAgIAkJCWlucHV0ID0gZWxlbWVudCgiaW5wdXQiKTsKICAgIAkJCXNldF9hdHRyaWJ1dGVzKGlucHV0LCBpbnB1dF9kYXRhKTsKICAgIAkJCWFkZF9sb2NhdGlvbihpbnB1dCwgZmlsZSQ2LCAxNjksIDQsIDM4MDMpOwogICAgCQl9LAogICAgCQltOiBmdW5jdGlvbiBtb3VudCh0YXJnZXQsIGFuY2hvcikgewogICAgCQkJaW5zZXJ0X2Rldih0YXJnZXQsIGlucHV0LCBhbmNob3IpOwogICAgCQkJc2V0X2lucHV0X3ZhbHVlKGlucHV0LCAvKnZhbHVlKi8gY3R4WzFdKTsKCiAgICAJCQlpZiAoIW1vdW50ZWQpIHsKICAgIAkJCQlkaXNwb3NlID0gWwogICAgCQkJCQlsaXN0ZW5fZGV2KGlucHV0LCAiYmx1ciIsIC8qYmx1cl9oYW5kbGVyXzUqLyBjdHhbNTldLCBmYWxzZSwgZmFsc2UsIGZhbHNlKSwKICAgIAkJCQkJbGlzdGVuX2RldihpbnB1dCwgImZvY3VzIiwgLypmb2N1c19oYW5kbGVyXzUqLyBjdHhbNjBdLCBmYWxzZSwgZmFsc2UsIGZhbHNlKSwKICAgIAkJCQkJbGlzdGVuX2RldihpbnB1dCwgImtleWRvd24iLCAvKmtleWRvd25faGFuZGxlcl81Ki8gY3R4WzYxXSwgZmFsc2UsIGZhbHNlLCBmYWxzZSksCiAgICAJCQkJCWxpc3Rlbl9kZXYoaW5wdXQsICJrZXlwcmVzcyIsIC8qa2V5cHJlc3NfaGFuZGxlcl81Ki8gY3R4WzYyXSwgZmFsc2UsIGZhbHNlLCBmYWxzZSksCiAgICAJCQkJCWxpc3Rlbl9kZXYoaW5wdXQsICJrZXl1cCIsIC8qa2V5dXBfaGFuZGxlcl81Ki8gY3R4WzYzXSwgZmFsc2UsIGZhbHNlLCBmYWxzZSksCiAgICAJCQkJCWxpc3Rlbl9kZXYoaW5wdXQsICJjaGFuZ2UiLCAvKmNoYW5nZV9oYW5kbGVyXzUqLyBjdHhbNThdLCBmYWxzZSwgZmFsc2UsIGZhbHNlKSwKICAgIAkJCQkJbGlzdGVuX2RldihpbnB1dCwgImlucHV0IiwgLyppbnB1dF9oYW5kbGVyXzUqLyBjdHhbNjRdLCBmYWxzZSwgZmFsc2UsIGZhbHNlKSwKICAgIAkJCQkJbGlzdGVuX2RldihpbnB1dCwgImNoYW5nZSIsIC8qaW5wdXRfY2hhbmdlX2hhbmRsZXJfMiovIGN0eFsxNDJdKQogICAgCQkJCV07CgogICAgCQkJCW1vdW50ZWQgPSB0cnVlOwogICAgCQkJfQogICAgCQl9LAogICAgCQlwOiBmdW5jdGlvbiB1cGRhdGUoY3R4LCBkaXJ0eSkgewogICAgCQkJc2V0X2F0dHJpYnV0ZXMoaW5wdXQsIGlucHV0X2RhdGEgPSBnZXRfc3ByZWFkX3VwZGF0ZShpbnB1dF9sZXZlbHMsIFsKICAgIAkJCQlkaXJ0eVswXSAmIC8qJCRyZXN0UHJvcHMqLyA0MDk2ICYmIC8qJCRyZXN0UHJvcHMqLyBjdHhbMTJdLAogICAgCQkJCXsgdHlwZTogInJhZGlvIiB9LAogICAgCQkJCWRpcnR5WzBdICYgLypkaXNhYmxlZCovIDI1NiAmJiB7IGRpc2FibGVkOiAvKmRpc2FibGVkKi8gY3R4WzhdIH0sCiAgICAJCQkJZGlydHlbMF0gJiAvKnJlYWRvbmx5Ki8gMTYgJiYgeyByZWFkT25seTogLypyZWFkb25seSovIGN0eFs0XSB9LAogICAgCQkJCWRpcnR5WzBdICYgLypjbGFzc2VzKi8gNTEyICYmIHsgY2xhc3M6IC8qY2xhc3NlcyovIGN0eFs5XSB9LAogICAgCQkJCWRpcnR5WzBdICYgLypuYW1lKi8gNjQgJiYgeyBuYW1lOiAvKm5hbWUqLyBjdHhbNl0gfSwKICAgIAkJCQlkaXJ0eVswXSAmIC8qcGxhY2Vob2xkZXIqLyAxMjggJiYgeyBwbGFjZWhvbGRlcjogLypwbGFjZWhvbGRlciovIGN0eFs3XSB9CiAgICAJCQldKSk7CgogICAgCQkJaWYgKGRpcnR5WzBdICYgLyp2YWx1ZSovIDIpIHsKICAgIAkJCQlzZXRfaW5wdXRfdmFsdWUoaW5wdXQsIC8qdmFsdWUqLyBjdHhbMV0pOwogICAgCQkJfQogICAgCQl9LAogICAgCQlkOiBmdW5jdGlvbiBkZXN0cm95KGRldGFjaGluZykgewogICAgCQkJaWYgKGRldGFjaGluZykgZGV0YWNoX2RldihpbnB1dCk7CiAgICAJCQltb3VudGVkID0gZmFsc2U7CiAgICAJCQlydW5fYWxsKGRpc3Bvc2UpOwogICAgCQl9CiAgICAJfTsKCiAgICAJZGlzcGF0Y2hfZGV2KCJTdmVsdGVSZWdpc3RlckJsb2NrIiwgewogICAgCQlibG9jaywKICAgIAkJaWQ6IGNyZWF0ZV9pZl9ibG9ja182Lm5hbWUsCiAgICAJCXR5cGU6ICJpZiIsCiAgICAJCXNvdXJjZTogIigxNjk6MjkpICIsCiAgICAJCWN0eAogICAgCX0pOwoKICAgIAlyZXR1cm4gYmxvY2s7CiAgICB9CgogICAgLy8gKDE1MTozMikgCiAgICBmdW5jdGlvbiBjcmVhdGVfaWZfYmxvY2tfNShjdHgpIHsKICAgIAlsZXQgaW5wdXQ7CiAgICAJbGV0IG1vdW50ZWQ7CiAgICAJbGV0IGRpc3Bvc2U7CgogICAgCWxldCBpbnB1dF9sZXZlbHMgPSBbCiAgICAJCS8qJCRyZXN0UHJvcHMqLyBjdHhbMTJdLAogICAgCQl7IHR5cGU6ICJjaGVja2JveCIgfSwKICAgIAkJeyBkaXNhYmxlZDogLypkaXNhYmxlZCovIGN0eFs4XSB9LAogICAgCQl7IG5hbWU6IC8qbmFtZSovIGN0eFs2XSB9LAogICAgCQl7IHJlYWRPbmx5OiAvKnJlYWRvbmx5Ki8gY3R4WzRdIH0sCiAgICAJCXsgY2xhc3M6IC8qY2xhc3NlcyovIGN0eFs5XSB9LAogICAgCQl7IHBsYWNlaG9sZGVyOiAvKnBsYWNlaG9sZGVyKi8gY3R4WzddIH0KICAgIAldOwoKICAgIAlsZXQgaW5wdXRfZGF0YSA9IHt9OwoKICAgIAlmb3IgKGxldCBpID0gMDsgaSA8IGlucHV0X2xldmVscy5sZW5ndGg7IGkgKz0gMSkgewogICAgCQlpbnB1dF9kYXRhID0gYXNzaWduKGlucHV0X2RhdGEsIGlucHV0X2xldmVsc1tpXSk7CiAgICAJfQoKICAgIAljb25zdCBibG9jayA9IHsKICAgIAkJYzogZnVuY3Rpb24gY3JlYXRlKCkgewogICAgCQkJaW5wdXQgPSBlbGVtZW50KCJpbnB1dCIpOwogICAgCQkJc2V0X2F0dHJpYnV0ZXMoaW5wdXQsIGlucHV0X2RhdGEpOwogICAgCQkJYWRkX2xvY2F0aW9uKGlucHV0LCBmaWxlJDYsIDE1MSwgNCwgMzQ3OSk7CiAgICAJCX0sCiAgICAJCW06IGZ1bmN0aW9uIG1vdW50KHRhcmdldCwgYW5jaG9yKSB7CiAgICAJCQlpbnNlcnRfZGV2KHRhcmdldCwgaW5wdXQsIGFuY2hvcik7CiAgICAJCQlzZXRfaW5wdXRfdmFsdWUoaW5wdXQsIC8qdmFsdWUqLyBjdHhbMV0pOwogICAgCQkJaW5wdXQuY2hlY2tlZCA9IC8qY2hlY2tlZCovIGN0eFswXTsKCiAgICAJCQlpZiAoIW1vdW50ZWQpIHsKICAgIAkJCQlkaXNwb3NlID0gWwogICAgCQkJCQlsaXN0ZW5fZGV2KGlucHV0LCAiYmx1ciIsIC8qYmx1cl9oYW5kbGVyXzQqLyBjdHhbNTJdLCBmYWxzZSwgZmFsc2UsIGZhbHNlKSwKICAgIAkJCQkJbGlzdGVuX2RldihpbnB1dCwgImZvY3VzIiwgLypmb2N1c19oYW5kbGVyXzQqLyBjdHhbNTNdLCBmYWxzZSwgZmFsc2UsIGZhbHNlKSwKICAgIAkJCQkJbGlzdGVuX2RldihpbnB1dCwgImtleWRvd24iLCAvKmtleWRvd25faGFuZGxlcl80Ki8gY3R4WzU0XSwgZmFsc2UsIGZhbHNlLCBmYWxzZSksCiAgICAJCQkJCWxpc3Rlbl9kZXYoaW5wdXQsICJrZXlwcmVzcyIsIC8qa2V5cHJlc3NfaGFuZGxlcl80Ki8gY3R4WzU1XSwgZmFsc2UsIGZhbHNlLCBmYWxzZSksCiAgICAJCQkJCWxpc3Rlbl9kZXYoaW5wdXQsICJrZXl1cCIsIC8qa2V5dXBfaGFuZGxlcl80Ki8gY3R4WzU2XSwgZmFsc2UsIGZhbHNlLCBmYWxzZSksCiAgICAJCQkJCWxpc3Rlbl9kZXYoaW5wdXQsICJjaGFuZ2UiLCAvKmNoYW5nZV9oYW5kbGVyXzQqLyBjdHhbNTddLCBmYWxzZSwgZmFsc2UsIGZhbHNlKSwKICAgIAkJCQkJbGlzdGVuX2RldihpbnB1dCwgImlucHV0IiwgLyppbnB1dF9oYW5kbGVyXzQqLyBjdHhbNTFdLCBmYWxzZSwgZmFsc2UsIGZhbHNlKSwKICAgIAkJCQkJbGlzdGVuX2RldihpbnB1dCwgImNoYW5nZSIsIC8qaW5wdXRfY2hhbmdlX2hhbmRsZXJfMSovIGN0eFsxNDFdKQogICAgCQkJCV07CgogICAgCQkJCW1vdW50ZWQgPSB0cnVlOwogICAgCQkJfQogICAgCQl9LAogICAgCQlwOiBmdW5jdGlvbiB1cGRhdGUoY3R4LCBkaXJ0eSkgewogICAgCQkJc2V0X2F0dHJpYnV0ZXMoaW5wdXQsIGlucHV0X2RhdGEgPSBnZXRfc3ByZWFkX3VwZGF0ZShpbnB1dF9sZXZlbHMsIFsKICAgIAkJCQlkaXJ0eVswXSAmIC8qJCRyZXN0UHJvcHMqLyA0MDk2ICYmIC8qJCRyZXN0UHJvcHMqLyBjdHhbMTJdLAogICAgCQkJCXsgdHlwZTogImNoZWNrYm94IiB9LAogICAgCQkJCWRpcnR5WzBdICYgLypkaXNhYmxlZCovIDI1NiAmJiB7IGRpc2FibGVkOiAvKmRpc2FibGVkKi8gY3R4WzhdIH0sCiAgICAJCQkJZGlydHlbMF0gJiAvKm5hbWUqLyA2NCAmJiB7IG5hbWU6IC8qbmFtZSovIGN0eFs2XSB9LAogICAgCQkJCWRpcnR5WzBdICYgLypyZWFkb25seSovIDE2ICYmIHsgcmVhZE9ubHk6IC8qcmVhZG9ubHkqLyBjdHhbNF0gfSwKICAgIAkJCQlkaXJ0eVswXSAmIC8qY2xhc3NlcyovIDUxMiAmJiB7IGNsYXNzOiAvKmNsYXNzZXMqLyBjdHhbOV0gfSwKICAgIAkJCQlkaXJ0eVswXSAmIC8qcGxhY2Vob2xkZXIqLyAxMjggJiYgeyBwbGFjZWhvbGRlcjogLypwbGFjZWhvbGRlciovIGN0eFs3XSB9CiAgICAJCQldKSk7CgogICAgCQkJaWYgKGRpcnR5WzBdICYgLyp2YWx1ZSovIDIpIHsKICAgIAkJCQlzZXRfaW5wdXRfdmFsdWUoaW5wdXQsIC8qdmFsdWUqLyBjdHhbMV0pOwogICAgCQkJfQoKICAgIAkJCWlmIChkaXJ0eVswXSAmIC8qY2hlY2tlZCovIDEpIHsKICAgIAkJCQlpbnB1dC5jaGVja2VkID0gLypjaGVja2VkKi8gY3R4WzBdOwogICAgCQkJfQogICAgCQl9LAogICAgCQlkOiBmdW5jdGlvbiBkZXN0cm95KGRldGFjaGluZykgewogICAgCQkJaWYgKGRldGFjaGluZykgZGV0YWNoX2RldihpbnB1dCk7CiAgICAJCQltb3VudGVkID0gZmFsc2U7CiAgICAJCQlydW5fYWxsKGRpc3Bvc2UpOwogICAgCQl9CiAgICAJfTsKCiAgICAJZGlzcGF0Y2hfZGV2KCJTdmVsdGVSZWdpc3RlckJsb2NrIiwgewogICAgCQlibG9jaywKICAgIAkJaWQ6IGNyZWF0ZV9pZl9ibG9ja181Lm5hbWUsCiAgICAJCXR5cGU6ICJpZiIsCiAgICAJCXNvdXJjZTogIigxNTE6MzIpICIsCiAgICAJCWN0eAogICAgCX0pOwoKICAgIAlyZXR1cm4gYmxvY2s7CiAgICB9CgogICAgLy8gKDEzNDoyOCkgCiAgICBmdW5jdGlvbiBjcmVhdGVfaWZfYmxvY2tfNChjdHgpIHsKICAgIAlsZXQgaW5wdXQ7CiAgICAJbGV0IG1vdW50ZWQ7CiAgICAJbGV0IGRpc3Bvc2U7CgogICAgCWxldCBpbnB1dF9sZXZlbHMgPSBbCiAgICAJCS8qJCRyZXN0UHJvcHMqLyBjdHhbMTJdLAogICAgCQl7IHR5cGU6ICJmaWxlIiB9LAogICAgCQl7IGRpc2FibGVkOiAvKmRpc2FibGVkKi8gY3R4WzhdIH0sCiAgICAJCXsgcmVhZE9ubHk6IC8qcmVhZG9ubHkqLyBjdHhbNF0gfSwKICAgIAkJeyBjbGFzczogLypjbGFzc2VzKi8gY3R4WzldIH0sCiAgICAJCXsgbmFtZTogLypuYW1lKi8gY3R4WzZdIH0sCiAgICAJCXsgcGxhY2Vob2xkZXI6IC8qcGxhY2Vob2xkZXIqLyBjdHhbN10gfQogICAgCV07CgogICAgCWxldCBpbnB1dF9kYXRhID0ge307CgogICAgCWZvciAobGV0IGkgPSAwOyBpIDwgaW5wdXRfbGV2ZWxzLmxlbmd0aDsgaSArPSAxKSB7CiAgICAJCWlucHV0X2RhdGEgPSBhc3NpZ24oaW5wdXRfZGF0YSwgaW5wdXRfbGV2ZWxzW2ldKTsKICAgIAl9CgogICAgCWNvbnN0IGJsb2NrID0gewogICAgCQljOiBmdW5jdGlvbiBjcmVhdGUoKSB7CiAgICAJCQlpbnB1dCA9IGVsZW1lbnQoImlucHV0Iik7CiAgICAJCQlzZXRfYXR0cmlidXRlcyhpbnB1dCwgaW5wdXRfZGF0YSk7CiAgICAJCQlhZGRfbG9jYXRpb24oaW5wdXQsIGZpbGUkNiwgMTM0LCA0LCAzMTc1KTsKICAgIAkJfSwKICAgIAkJbTogZnVuY3Rpb24gbW91bnQodGFyZ2V0LCBhbmNob3IpIHsKICAgIAkJCWluc2VydF9kZXYodGFyZ2V0LCBpbnB1dCwgYW5jaG9yKTsKCiAgICAJCQlpZiAoIW1vdW50ZWQpIHsKICAgIAkJCQlkaXNwb3NlID0gWwogICAgCQkJCQlsaXN0ZW5fZGV2KGlucHV0LCAiYmx1ciIsIC8qYmx1cl9oYW5kbGVyXzMqLyBjdHhbNDVdLCBmYWxzZSwgZmFsc2UsIGZhbHNlKSwKICAgIAkJCQkJbGlzdGVuX2RldihpbnB1dCwgImZvY3VzIiwgLypmb2N1c19oYW5kbGVyXzMqLyBjdHhbNDZdLCBmYWxzZSwgZmFsc2UsIGZhbHNlKSwKICAgIAkJCQkJbGlzdGVuX2RldihpbnB1dCwgImtleWRvd24iLCAvKmtleWRvd25faGFuZGxlcl8zKi8gY3R4WzQ3XSwgZmFsc2UsIGZhbHNlLCBmYWxzZSksCiAgICAJCQkJCWxpc3Rlbl9kZXYoaW5wdXQsICJrZXlwcmVzcyIsIC8qa2V5cHJlc3NfaGFuZGxlcl8zKi8gY3R4WzQ4XSwgZmFsc2UsIGZhbHNlLCBmYWxzZSksCiAgICAJCQkJCWxpc3Rlbl9kZXYoaW5wdXQsICJrZXl1cCIsIC8qa2V5dXBfaGFuZGxlcl8zKi8gY3R4WzQ5XSwgZmFsc2UsIGZhbHNlLCBmYWxzZSksCiAgICAJCQkJCWxpc3Rlbl9kZXYoaW5wdXQsICJjaGFuZ2UiLCAvKmNoYW5nZV9oYW5kbGVyXzMqLyBjdHhbNDRdLCBmYWxzZSwgZmFsc2UsIGZhbHNlKSwKICAgIAkJCQkJbGlzdGVuX2RldihpbnB1dCwgImlucHV0IiwgLyppbnB1dF9oYW5kbGVyXzMqLyBjdHhbNTBdLCBmYWxzZSwgZmFsc2UsIGZhbHNlKSwKICAgIAkJCQkJbGlzdGVuX2RldihpbnB1dCwgImNoYW5nZSIsIC8qaW5wdXRfY2hhbmdlX2hhbmRsZXIqLyBjdHhbMTQwXSkKICAgIAkJCQldOwoKICAgIAkJCQltb3VudGVkID0gdHJ1ZTsKICAgIAkJCX0KICAgIAkJfSwKICAgIAkJcDogZnVuY3Rpb24gdXBkYXRlKGN0eCwgZGlydHkpIHsKICAgIAkJCXNldF9hdHRyaWJ1dGVzKGlucHV0LCBpbnB1dF9kYXRhID0gZ2V0X3NwcmVhZF91cGRhdGUoaW5wdXRfbGV2ZWxzLCBbCiAgICAJCQkJZGlydHlbMF0gJiAvKiQkcmVzdFByb3BzKi8gNDA5NiAmJiAvKiQkcmVzdFByb3BzKi8gY3R4WzEyXSwKICAgIAkJCQl7IHR5cGU6ICJmaWxlIiB9LAogICAgCQkJCWRpcnR5WzBdICYgLypkaXNhYmxlZCovIDI1NiAmJiB7IGRpc2FibGVkOiAvKmRpc2FibGVkKi8gY3R4WzhdIH0sCiAgICAJCQkJZGlydHlbMF0gJiAvKnJlYWRvbmx5Ki8gMTYgJiYgeyByZWFkT25seTogLypyZWFkb25seSovIGN0eFs0XSB9LAogICAgCQkJCWRpcnR5WzBdICYgLypjbGFzc2VzKi8gNTEyICYmIHsgY2xhc3M6IC8qY2xhc3NlcyovIGN0eFs5XSB9LAogICAgCQkJCWRpcnR5WzBdICYgLypuYW1lKi8gNjQgJiYgeyBuYW1lOiAvKm5hbWUqLyBjdHhbNl0gfSwKICAgIAkJCQlkaXJ0eVswXSAmIC8qcGxhY2Vob2xkZXIqLyAxMjggJiYgeyBwbGFjZWhvbGRlcjogLypwbGFjZWhvbGRlciovIGN0eFs3XSB9CiAgICAJCQldKSk7CiAgICAJCX0sCiAgICAJCWQ6IGZ1bmN0aW9uIGRlc3Ryb3koZGV0YWNoaW5nKSB7CiAgICAJCQlpZiAoZGV0YWNoaW5nKSBkZXRhY2hfZGV2KGlucHV0KTsKICAgIAkJCW1vdW50ZWQgPSBmYWxzZTsKICAgIAkJCXJ1bl9hbGwoZGlzcG9zZSk7CiAgICAJCX0KICAgIAl9OwoKICAgIAlkaXNwYXRjaF9kZXYoIlN2ZWx0ZVJlZ2lzdGVyQmxvY2siLCB7CiAgICAJCWJsb2NrLAogICAgCQlpZDogY3JlYXRlX2lmX2Jsb2NrXzQubmFtZSwKICAgIAkJdHlwZTogImlmIiwKICAgIAkJc291cmNlOiAiKDEzNDoyOCkgIiwKICAgIAkJY3R4CiAgICAJfSk7CgogICAgCXJldHVybiBibG9jazsKICAgIH0KCiAgICAvLyAoMTE3OjI5KSAKICAgIGZ1bmN0aW9uIGNyZWF0ZV9pZl9ibG9ja18zJDEoY3R4KSB7CiAgICAJbGV0IGlucHV0OwogICAgCWxldCBtb3VudGVkOwogICAgCWxldCBkaXNwb3NlOwoKICAgIAlsZXQgaW5wdXRfbGV2ZWxzID0gWwogICAgCQkvKiQkcmVzdFByb3BzKi8gY3R4WzEyXSwKICAgIAkJeyB0eXBlOiAiZW1haWwiIH0sCiAgICAJCXsgZGlzYWJsZWQ6IC8qZGlzYWJsZWQqLyBjdHhbOF0gfSwKICAgIAkJeyByZWFkT25seTogLypyZWFkb25seSovIGN0eFs0XSB9LAogICAgCQl7IGNsYXNzOiAvKmNsYXNzZXMqLyBjdHhbOV0gfSwKICAgIAkJeyBuYW1lOiAvKm5hbWUqLyBjdHhbNl0gfSwKICAgIAkJeyBwbGFjZWhvbGRlcjogLypwbGFjZWhvbGRlciovIGN0eFs3XSB9CiAgICAJXTsKCiAgICAJbGV0IGlucHV0X2RhdGEgPSB7fTsKCiAgICAJZm9yIChsZXQgaSA9IDA7IGkgPCBpbnB1dF9sZXZlbHMubGVuZ3RoOyBpICs9IDEpIHsKICAgIAkJaW5wdXRfZGF0YSA9IGFzc2lnbihpbnB1dF9kYXRhLCBpbnB1dF9sZXZlbHNbaV0pOwogICAgCX0KCiAgICAJY29uc3QgYmxvY2sgPSB7CiAgICAJCWM6IGZ1bmN0aW9uIGNyZWF0ZSgpIHsKICAgIAkJCWlucHV0ID0gZWxlbWVudCgiaW5wdXQiKTsKICAgIAkJCXNldF9hdHRyaWJ1dGVzKGlucHV0LCBpbnB1dF9kYXRhKTsKICAgIAkJCWFkZF9sb2NhdGlvbihpbnB1dCwgZmlsZSQ2LCAxMTcsIDQsIDI4NzQpOwogICAgCQl9LAogICAgCQltOiBmdW5jdGlvbiBtb3VudCh0YXJnZXQsIGFuY2hvcikgewogICAgCQkJaW5zZXJ0X2Rldih0YXJnZXQsIGlucHV0LCBhbmNob3IpOwogICAgCQkJc2V0X2lucHV0X3ZhbHVlKGlucHV0LCAvKnZhbHVlKi8gY3R4WzFdKTsKCiAgICAJCQlpZiAoIW1vdW50ZWQpIHsKICAgIAkJCQlkaXNwb3NlID0gWwogICAgCQkJCQlsaXN0ZW5fZGV2KGlucHV0LCAiYmx1ciIsIC8qYmx1cl9oYW5kbGVyXzIqLyBjdHhbMzhdLCBmYWxzZSwgZmFsc2UsIGZhbHNlKSwKICAgIAkJCQkJbGlzdGVuX2RldihpbnB1dCwgImZvY3VzIiwgLypmb2N1c19oYW5kbGVyXzIqLyBjdHhbMzldLCBmYWxzZSwgZmFsc2UsIGZhbHNlKSwKICAgIAkJCQkJbGlzdGVuX2RldihpbnB1dCwgImtleWRvd24iLCAvKmtleWRvd25faGFuZGxlcl8yKi8gY3R4WzQwXSwgZmFsc2UsIGZhbHNlLCBmYWxzZSksCiAgICAJCQkJCWxpc3Rlbl9kZXYoaW5wdXQsICJrZXlwcmVzcyIsIC8qa2V5cHJlc3NfaGFuZGxlcl8yKi8gY3R4WzQxXSwgZmFsc2UsIGZhbHNlLCBmYWxzZSksCiAgICAJCQkJCWxpc3Rlbl9kZXYoaW5wdXQsICJrZXl1cCIsIC8qa2V5dXBfaGFuZGxlcl8yKi8gY3R4WzQyXSwgZmFsc2UsIGZhbHNlLCBmYWxzZSksCiAgICAJCQkJCWxpc3Rlbl9kZXYoaW5wdXQsICJjaGFuZ2UiLCAvKmNoYW5nZV9oYW5kbGVyXzIqLyBjdHhbMzddLCBmYWxzZSwgZmFsc2UsIGZhbHNlKSwKICAgIAkJCQkJbGlzdGVuX2RldihpbnB1dCwgImlucHV0IiwgLyppbnB1dF9oYW5kbGVyXzIqLyBjdHhbNDNdLCBmYWxzZSwgZmFsc2UsIGZhbHNlKSwKICAgIAkJCQkJbGlzdGVuX2RldihpbnB1dCwgImlucHV0IiwgLyppbnB1dF9pbnB1dF9oYW5kbGVyXzIqLyBjdHhbMTM5XSkKICAgIAkJCQldOwoKICAgIAkJCQltb3VudGVkID0gdHJ1ZTsKICAgIAkJCX0KICAgIAkJfSwKICAgIAkJcDogZnVuY3Rpb24gdXBkYXRlKGN0eCwgZGlydHkpIHsKICAgIAkJCXNldF9hdHRyaWJ1dGVzKGlucHV0LCBpbnB1dF9kYXRhID0gZ2V0X3NwcmVhZF91cGRhdGUoaW5wdXRfbGV2ZWxzLCBbCiAgICAJCQkJZGlydHlbMF0gJiAvKiQkcmVzdFByb3BzKi8gNDA5NiAmJiAvKiQkcmVzdFByb3BzKi8gY3R4WzEyXSwKICAgIAkJCQl7IHR5cGU6ICJlbWFpbCIgfSwKICAgIAkJCQlkaXJ0eVswXSAmIC8qZGlzYWJsZWQqLyAyNTYgJiYgeyBkaXNhYmxlZDogLypkaXNhYmxlZCovIGN0eFs4XSB9LAogICAgCQkJCWRpcnR5WzBdICYgLypyZWFkb25seSovIDE2ICYmIHsgcmVhZE9ubHk6IC8qcmVhZG9ubHkqLyBjdHhbNF0gfSwKICAgIAkJCQlkaXJ0eVswXSAmIC8qY2xhc3NlcyovIDUxMiAmJiB7IGNsYXNzOiAvKmNsYXNzZXMqLyBjdHhbOV0gfSwKICAgIAkJCQlkaXJ0eVswXSAmIC8qbmFtZSovIDY0ICYmIHsgbmFtZTogLypuYW1lKi8gY3R4WzZdIH0sCiAgICAJCQkJZGlydHlbMF0gJiAvKnBsYWNlaG9sZGVyKi8gMTI4ICYmIHsgcGxhY2Vob2xkZXI6IC8qcGxhY2Vob2xkZXIqLyBjdHhbN10gfQogICAgCQkJXSkpOwoKICAgIAkJCWlmIChkaXJ0eVswXSAmIC8qdmFsdWUqLyAyICYmIGlucHV0LnZhbHVlICE9PSAvKnZhbHVlKi8gY3R4WzFdKSB7CiAgICAJCQkJc2V0X2lucHV0X3ZhbHVlKGlucHV0LCAvKnZhbHVlKi8gY3R4WzFdKTsKICAgIAkJCX0KICAgIAkJfSwKICAgIAkJZDogZnVuY3Rpb24gZGVzdHJveShkZXRhY2hpbmcpIHsKICAgIAkJCWlmIChkZXRhY2hpbmcpIGRldGFjaF9kZXYoaW5wdXQpOwogICAgCQkJbW91bnRlZCA9IGZhbHNlOwogICAgCQkJcnVuX2FsbChkaXNwb3NlKTsKICAgIAkJfQogICAgCX07CgogICAgCWRpc3BhdGNoX2RldigiU3ZlbHRlUmVnaXN0ZXJCbG9jayIsIHsKICAgIAkJYmxvY2ssCiAgICAJCWlkOiBjcmVhdGVfaWZfYmxvY2tfMyQxLm5hbWUsCiAgICAJCXR5cGU6ICJpZiIsCiAgICAJCXNvdXJjZTogIigxMTc6MjkpICIsCiAgICAJCWN0eAogICAgCX0pOwoKICAgIAlyZXR1cm4gYmxvY2s7CiAgICB9CgogICAgLy8gKDEwMDozMikgCiAgICBmdW5jdGlvbiBjcmVhdGVfaWZfYmxvY2tfMiQxKGN0eCkgewogICAgCWxldCBpbnB1dDsKICAgIAlsZXQgbW91bnRlZDsKICAgIAlsZXQgZGlzcG9zZTsKCiAgICAJbGV0IGlucHV0X2xldmVscyA9IFsKICAgIAkJLyokJHJlc3RQcm9wcyovIGN0eFsxMl0sCiAgICAJCXsgdHlwZTogInBhc3N3b3JkIiB9LAogICAgCQl7IGRpc2FibGVkOiAvKmRpc2FibGVkKi8gY3R4WzhdIH0sCiAgICAJCXsgcmVhZE9ubHk6IC8qcmVhZG9ubHkqLyBjdHhbNF0gfSwKICAgIAkJeyBjbGFzczogLypjbGFzc2VzKi8gY3R4WzldIH0sCiAgICAJCXsgbmFtZTogLypuYW1lKi8gY3R4WzZdIH0sCiAgICAJCXsgcGxhY2Vob2xkZXI6IC8qcGxhY2Vob2xkZXIqLyBjdHhbN10gfQogICAgCV07CgogICAgCWxldCBpbnB1dF9kYXRhID0ge307CgogICAgCWZvciAobGV0IGkgPSAwOyBpIDwgaW5wdXRfbGV2ZWxzLmxlbmd0aDsgaSArPSAxKSB7CiAgICAJCWlucHV0X2RhdGEgPSBhc3NpZ24oaW5wdXRfZGF0YSwgaW5wdXRfbGV2ZWxzW2ldKTsKICAgIAl9CgogICAgCWNvbnN0IGJsb2NrID0gewogICAgCQljOiBmdW5jdGlvbiBjcmVhdGUoKSB7CiAgICAJCQlpbnB1dCA9IGVsZW1lbnQoImlucHV0Iik7CiAgICAJCQlzZXRfYXR0cmlidXRlcyhpbnB1dCwgaW5wdXRfZGF0YSk7CiAgICAJCQlhZGRfbG9jYXRpb24oaW5wdXQsIGZpbGUkNiwgMTAwLCA0LCAyNTY5KTsKICAgIAkJfSwKICAgIAkJbTogZnVuY3Rpb24gbW91bnQodGFyZ2V0LCBhbmNob3IpIHsKICAgIAkJCWluc2VydF9kZXYodGFyZ2V0LCBpbnB1dCwgYW5jaG9yKTsKICAgIAkJCXNldF9pbnB1dF92YWx1ZShpbnB1dCwgLyp2YWx1ZSovIGN0eFsxXSk7CgogICAgCQkJaWYgKCFtb3VudGVkKSB7CiAgICAJCQkJZGlzcG9zZSA9IFsKICAgIAkJCQkJbGlzdGVuX2RldihpbnB1dCwgImJsdXIiLCAvKmJsdXJfaGFuZGxlcl8xKi8gY3R4WzMxXSwgZmFsc2UsIGZhbHNlLCBmYWxzZSksCiAgICAJCQkJCWxpc3Rlbl9kZXYoaW5wdXQsICJmb2N1cyIsIC8qZm9jdXNfaGFuZGxlcl8xKi8gY3R4WzMyXSwgZmFsc2UsIGZhbHNlLCBmYWxzZSksCiAgICAJCQkJCWxpc3Rlbl9kZXYoaW5wdXQsICJrZXlkb3duIiwgLyprZXlkb3duX2hhbmRsZXJfMSovIGN0eFszM10sIGZhbHNlLCBmYWxzZSwgZmFsc2UpLAogICAgCQkJCQlsaXN0ZW5fZGV2KGlucHV0LCAia2V5cHJlc3MiLCAvKmtleXByZXNzX2hhbmRsZXJfMSovIGN0eFszNF0sIGZhbHNlLCBmYWxzZSwgZmFsc2UpLAogICAgCQkJCQlsaXN0ZW5fZGV2KGlucHV0LCAia2V5dXAiLCAvKmtleXVwX2hhbmRsZXJfMSovIGN0eFszNV0sIGZhbHNlLCBmYWxzZSwgZmFsc2UpLAogICAgCQkJCQlsaXN0ZW5fZGV2KGlucHV0LCAiY2hhbmdlIiwgLypjaGFuZ2VfaGFuZGxlcl8xKi8gY3R4WzMwXSwgZmFsc2UsIGZhbHNlLCBmYWxzZSksCiAgICAJCQkJCWxpc3Rlbl9kZXYoaW5wdXQsICJpbnB1dCIsIC8qaW5wdXRfaGFuZGxlcl8xKi8gY3R4WzM2XSwgZmFsc2UsIGZhbHNlLCBmYWxzZSksCiAgICAJCQkJCWxpc3Rlbl9kZXYoaW5wdXQsICJpbnB1dCIsIC8qaW5wdXRfaW5wdXRfaGFuZGxlcl8xKi8gY3R4WzEzOF0pCiAgICAJCQkJXTsKCiAgICAJCQkJbW91bnRlZCA9IHRydWU7CiAgICAJCQl9CiAgICAJCX0sCiAgICAJCXA6IGZ1bmN0aW9uIHVwZGF0ZShjdHgsIGRpcnR5KSB7CiAgICAJCQlzZXRfYXR0cmlidXRlcyhpbnB1dCwgaW5wdXRfZGF0YSA9IGdldF9zcHJlYWRfdXBkYXRlKGlucHV0X2xldmVscywgWwogICAgCQkJCWRpcnR5WzBdICYgLyokJHJlc3RQcm9wcyovIDQwOTYgJiYgLyokJHJlc3RQcm9wcyovIGN0eFsxMl0sCiAgICAJCQkJeyB0eXBlOiAicGFzc3dvcmQiIH0sCiAgICAJCQkJZGlydHlbMF0gJiAvKmRpc2FibGVkKi8gMjU2ICYmIHsgZGlzYWJsZWQ6IC8qZGlzYWJsZWQqLyBjdHhbOF0gfSwKICAgIAkJCQlkaXJ0eVswXSAmIC8qcmVhZG9ubHkqLyAxNiAmJiB7IHJlYWRPbmx5OiAvKnJlYWRvbmx5Ki8gY3R4WzRdIH0sCiAgICAJCQkJZGlydHlbMF0gJiAvKmNsYXNzZXMqLyA1MTIgJiYgeyBjbGFzczogLypjbGFzc2VzKi8gY3R4WzldIH0sCiAgICAJCQkJZGlydHlbMF0gJiAvKm5hbWUqLyA2NCAmJiB7IG5hbWU6IC8qbmFtZSovIGN0eFs2XSB9LAogICAgCQkJCWRpcnR5WzBdICYgLypwbGFjZWhvbGRlciovIDEyOCAmJiB7IHBsYWNlaG9sZGVyOiAvKnBsYWNlaG9sZGVyKi8gY3R4WzddIH0KICAgIAkJCV0pKTsKCiAgICAJCQlpZiAoZGlydHlbMF0gJiAvKnZhbHVlKi8gMiAmJiBpbnB1dC52YWx1ZSAhPT0gLyp2YWx1ZSovIGN0eFsxXSkgewogICAgCQkJCXNldF9pbnB1dF92YWx1ZShpbnB1dCwgLyp2YWx1ZSovIGN0eFsxXSk7CiAgICAJCQl9CiAgICAJCX0sCiAgICAJCWQ6IGZ1bmN0aW9uIGRlc3Ryb3koZGV0YWNoaW5nKSB7CiAgICAJCQlpZiAoZGV0YWNoaW5nKSBkZXRhY2hfZGV2KGlucHV0KTsKICAgIAkJCW1vdW50ZWQgPSBmYWxzZTsKICAgIAkJCXJ1bl9hbGwoZGlzcG9zZSk7CiAgICAJCX0KICAgIAl9OwoKICAgIAlkaXNwYXRjaF9kZXYoIlN2ZWx0ZVJlZ2lzdGVyQmxvY2siLCB7CiAgICAJCWJsb2NrLAogICAgCQlpZDogY3JlYXRlX2lmX2Jsb2NrXzIkMS5uYW1lLAogICAgCQl0eXBlOiAiaWYiLAogICAgCQlzb3VyY2U6ICIoMTAwOjMyKSAiLAogICAgCQljdHgKICAgIAl9KTsKCiAgICAJcmV0dXJuIGJsb2NrOwogICAgfQoKICAgIC8vICg4MzoyKSB7I2lmIHR5cGUgPT09ICd0ZXh0J30KICAgIGZ1bmN0aW9uIGNyZWF0ZV9pZl9ibG9ja18xJDEoY3R4KSB7CiAgICAJbGV0IGlucHV0OwogICAgCWxldCBtb3VudGVkOwogICAgCWxldCBkaXNwb3NlOwoKICAgIAlsZXQgaW5wdXRfbGV2ZWxzID0gWwogICAgCQkvKiQkcmVzdFByb3BzKi8gY3R4WzEyXSwKICAgIAkJeyB0eXBlOiAidGV4dCIgfSwKICAgIAkJeyBkaXNhYmxlZDogLypkaXNhYmxlZCovIGN0eFs4XSB9LAogICAgCQl7IHJlYWRPbmx5OiAvKnJlYWRvbmx5Ki8gY3R4WzRdIH0sCiAgICAJCXsgY2xhc3M6IC8qY2xhc3NlcyovIGN0eFs5XSB9LAogICAgCQl7IG5hbWU6IC8qbmFtZSovIGN0eFs2XSB9LAogICAgCQl7IHBsYWNlaG9sZGVyOiAvKnBsYWNlaG9sZGVyKi8gY3R4WzddIH0KICAgIAldOwoKICAgIAlsZXQgaW5wdXRfZGF0YSA9IHt9OwoKICAgIAlmb3IgKGxldCBpID0gMDsgaSA8IGlucHV0X2xldmVscy5sZW5ndGg7IGkgKz0gMSkgewogICAgCQlpbnB1dF9kYXRhID0gYXNzaWduKGlucHV0X2RhdGEsIGlucHV0X2xldmVsc1tpXSk7CiAgICAJfQoKICAgIAljb25zdCBibG9jayA9IHsKICAgIAkJYzogZnVuY3Rpb24gY3JlYXRlKCkgewogICAgCQkJaW5wdXQgPSBlbGVtZW50KCJpbnB1dCIpOwogICAgCQkJc2V0X2F0dHJpYnV0ZXMoaW5wdXQsIGlucHV0X2RhdGEpOwogICAgCQkJYWRkX2xvY2F0aW9uKGlucHV0LCBmaWxlJDYsIDgzLCA0LCAyMjY1KTsKICAgIAkJfSwKICAgIAkJbTogZnVuY3Rpb24gbW91bnQodGFyZ2V0LCBhbmNob3IpIHsKICAgIAkJCWluc2VydF9kZXYodGFyZ2V0LCBpbnB1dCwgYW5jaG9yKTsKICAgIAkJCXNldF9pbnB1dF92YWx1ZShpbnB1dCwgLyp2YWx1ZSovIGN0eFsxXSk7CgogICAgCQkJaWYgKCFtb3VudGVkKSB7CiAgICAJCQkJZGlzcG9zZSA9IFsKICAgIAkJCQkJbGlzdGVuX2RldihpbnB1dCwgImJsdXIiLCAvKmJsdXJfaGFuZGxlciovIGN0eFsyNF0sIGZhbHNlLCBmYWxzZSwgZmFsc2UpLAogICAgCQkJCQlsaXN0ZW5fZGV2KGlucHV0LCAiZm9jdXMiLCAvKmZvY3VzX2hhbmRsZXIqLyBjdHhbMjVdLCBmYWxzZSwgZmFsc2UsIGZhbHNlKSwKICAgIAkJCQkJbGlzdGVuX2RldihpbnB1dCwgImtleWRvd24iLCAvKmtleWRvd25faGFuZGxlciovIGN0eFsyNl0sIGZhbHNlLCBmYWxzZSwgZmFsc2UpLAogICAgCQkJCQlsaXN0ZW5fZGV2KGlucHV0LCAia2V5cHJlc3MiLCAvKmtleXByZXNzX2hhbmRsZXIqLyBjdHhbMjddLCBmYWxzZSwgZmFsc2UsIGZhbHNlKSwKICAgIAkJCQkJbGlzdGVuX2RldihpbnB1dCwgImtleXVwIiwgLyprZXl1cF9oYW5kbGVyKi8gY3R4WzI4XSwgZmFsc2UsIGZhbHNlLCBmYWxzZSksCiAgICAJCQkJCWxpc3Rlbl9kZXYoaW5wdXQsICJjaGFuZ2UiLCAvKmNoYW5nZV9oYW5kbGVyKi8gY3R4WzIzXSwgZmFsc2UsIGZhbHNlLCBmYWxzZSksCiAgICAJCQkJCWxpc3Rlbl9kZXYoaW5wdXQsICJpbnB1dCIsIC8qaW5wdXRfaGFuZGxlciovIGN0eFsyOV0sIGZhbHNlLCBmYWxzZSwgZmFsc2UpLAogICAgCQkJCQlsaXN0ZW5fZGV2KGlucHV0LCAiaW5wdXQiLCAvKmlucHV0X2lucHV0X2hhbmRsZXIqLyBjdHhbMTM3XSkKICAgIAkJCQldOwoKICAgIAkJCQltb3VudGVkID0gdHJ1ZTsKICAgIAkJCX0KICAgIAkJfSwKICAgIAkJcDogZnVuY3Rpb24gdXBkYXRlKGN0eCwgZGlydHkpIHsKICAgIAkJCXNldF9hdHRyaWJ1dGVzKGlucHV0LCBpbnB1dF9kYXRhID0gZ2V0X3NwcmVhZF91cGRhdGUoaW5wdXRfbGV2ZWxzLCBbCiAgICAJCQkJZGlydHlbMF0gJiAvKiQkcmVzdFByb3BzKi8gNDA5NiAmJiAvKiQkcmVzdFByb3BzKi8gY3R4WzEyXSwKICAgIAkJCQl7IHR5cGU6ICJ0ZXh0IiB9LAogICAgCQkJCWRpcnR5WzBdICYgLypkaXNhYmxlZCovIDI1NiAmJiB7IGRpc2FibGVkOiAvKmRpc2FibGVkKi8gY3R4WzhdIH0sCiAgICAJCQkJZGlydHlbMF0gJiAvKnJlYWRvbmx5Ki8gMTYgJiYgeyByZWFkT25seTogLypyZWFkb25seSovIGN0eFs0XSB9LAogICAgCQkJCWRpcnR5WzBdICYgLypjbGFzc2VzKi8gNTEyICYmIHsgY2xhc3M6IC8qY2xhc3NlcyovIGN0eFs5XSB9LAogICAgCQkJCWRpcnR5WzBdICYgLypuYW1lKi8gNjQgJiYgeyBuYW1lOiAvKm5hbWUqLyBjdHhbNl0gfSwKICAgIAkJCQlkaXJ0eVswXSAmIC8qcGxhY2Vob2xkZXIqLyAxMjggJiYgeyBwbGFjZWhvbGRlcjogLypwbGFjZWhvbGRlciovIGN0eFs3XSB9CiAgICAJCQldKSk7CgogICAgCQkJaWYgKGRpcnR5WzBdICYgLyp2YWx1ZSovIDIgJiYgaW5wdXQudmFsdWUgIT09IC8qdmFsdWUqLyBjdHhbMV0pIHsKICAgIAkJCQlzZXRfaW5wdXRfdmFsdWUoaW5wdXQsIC8qdmFsdWUqLyBjdHhbMV0pOwogICAgCQkJfQogICAgCQl9LAogICAgCQlkOiBmdW5jdGlvbiBkZXN0cm95KGRldGFjaGluZykgewogICAgCQkJaWYgKGRldGFjaGluZykgZGV0YWNoX2RldihpbnB1dCk7CiAgICAJCQltb3VudGVkID0gZmFsc2U7CiAgICAJCQlydW5fYWxsKGRpc3Bvc2UpOwogICAgCQl9CiAgICAJfTsKCiAgICAJZGlzcGF0Y2hfZGV2KCJTdmVsdGVSZWdpc3RlckJsb2NrIiwgewogICAgCQlibG9jaywKICAgIAkJaWQ6IGNyZWF0ZV9pZl9ibG9ja18xJDEubmFtZSwKICAgIAkJdHlwZTogImlmIiwKICAgIAkJc291cmNlOiAiKDgzOjIpIHsjaWYgdHlwZSA9PT0gJ3RleHQnfSIsCiAgICAJCWN0eAogICAgCX0pOwoKICAgIAlyZXR1cm4gYmxvY2s7CiAgICB9CgogICAgZnVuY3Rpb24gY3JlYXRlX2ZyYWdtZW50JDYoY3R4KSB7CiAgICAJbGV0IGN1cnJlbnRfYmxvY2tfdHlwZV9pbmRleDsKICAgIAlsZXQgaWZfYmxvY2s7CiAgICAJbGV0IGlmX2Jsb2NrX2FuY2hvcjsKICAgIAlsZXQgY3VycmVudDsKICAgIAljb25zdCBpZl9ibG9ja19jcmVhdG9ycyA9IFtjcmVhdGVfaWZfYmxvY2skMiwgY3JlYXRlX2lmX2Jsb2NrXzE1LCBjcmVhdGVfaWZfYmxvY2tfMTZdOwogICAgCWNvbnN0IGlmX2Jsb2NrcyA9IFtdOwoKICAgIAlmdW5jdGlvbiBzZWxlY3RfYmxvY2tfdHlwZShjdHgsIGRpcnR5KSB7CiAgICAJCWlmICgvKnRhZyovIGN0eFsxMF0gPT09ICJpbnB1dCIpIHJldHVybiAwOwogICAgCQlpZiAoLyp0YWcqLyBjdHhbMTBdID09PSAidGV4dGFyZWEiKSByZXR1cm4gMTsKICAgIAkJaWYgKC8qdGFnKi8gY3R4WzEwXSA9PT0gInNlbGVjdCIgJiYgIS8qbXVsdGlwbGUqLyBjdHhbNV0pIHJldHVybiAyOwogICAgCQlyZXR1cm4gLTE7CiAgICAJfQoKICAgIAlpZiAofihjdXJyZW50X2Jsb2NrX3R5cGVfaW5kZXggPSBzZWxlY3RfYmxvY2tfdHlwZShjdHgpKSkgewogICAgCQlpZl9ibG9jayA9IGlmX2Jsb2Nrc1tjdXJyZW50X2Jsb2NrX3R5cGVfaW5kZXhdID0gaWZfYmxvY2tfY3JlYXRvcnNbY3VycmVudF9ibG9ja190eXBlX2luZGV4XShjdHgpOwogICAgCX0KCiAgICAJY29uc3QgYmxvY2sgPSB7CiAgICAJCWM6IGZ1bmN0aW9uIGNyZWF0ZSgpIHsKICAgIAkJCWlmIChpZl9ibG9jaykgaWZfYmxvY2suYygpOwogICAgCQkJaWZfYmxvY2tfYW5jaG9yID0gZW1wdHkoKTsKICAgIAkJfSwKICAgIAkJbDogZnVuY3Rpb24gY2xhaW0obm9kZXMpIHsKICAgIAkJCXRocm93IG5ldyBFcnJvcigib3B0aW9ucy5oeWRyYXRlIG9ubHkgd29ya3MgaWYgdGhlIGNvbXBvbmVudCB3YXMgY29tcGlsZWQgd2l0aCB0aGUgYGh5ZHJhdGFibGU6IHRydWVgIG9wdGlvbiIpOwogICAgCQl9LAogICAgCQltOiBmdW5jdGlvbiBtb3VudCh0YXJnZXQsIGFuY2hvcikgewogICAgCQkJaWYgKH5jdXJyZW50X2Jsb2NrX3R5cGVfaW5kZXgpIHsKICAgIAkJCQlpZl9ibG9ja3NbY3VycmVudF9ibG9ja190eXBlX2luZGV4XS5tKHRhcmdldCwgYW5jaG9yKTsKICAgIAkJCX0KCiAgICAJCQlpbnNlcnRfZGV2KHRhcmdldCwgaWZfYmxvY2tfYW5jaG9yLCBhbmNob3IpOwogICAgCQkJY3VycmVudCA9IHRydWU7CiAgICAJCX0sCiAgICAJCXA6IGZ1bmN0aW9uIHVwZGF0ZShjdHgsIGRpcnR5KSB7CiAgICAJCQlsZXQgcHJldmlvdXNfYmxvY2tfaW5kZXggPSBjdXJyZW50X2Jsb2NrX3R5cGVfaW5kZXg7CiAgICAJCQljdXJyZW50X2Jsb2NrX3R5cGVfaW5kZXggPSBzZWxlY3RfYmxvY2tfdHlwZShjdHgpOwoKICAgIAkJCWlmIChjdXJyZW50X2Jsb2NrX3R5cGVfaW5kZXggPT09IHByZXZpb3VzX2Jsb2NrX2luZGV4KSB7CiAgICAJCQkJaWYgKH5jdXJyZW50X2Jsb2NrX3R5cGVfaW5kZXgpIHsKICAgIAkJCQkJaWZfYmxvY2tzW2N1cnJlbnRfYmxvY2tfdHlwZV9pbmRleF0ucChjdHgsIGRpcnR5KTsKICAgIAkJCQl9CiAgICAJCQl9IGVsc2UgewogICAgCQkJCWlmIChpZl9ibG9jaykgewogICAgCQkJCQlncm91cF9vdXRyb3MoKTsKCiAgICAJCQkJCXRyYW5zaXRpb25fb3V0KGlmX2Jsb2Nrc1twcmV2aW91c19ibG9ja19pbmRleF0sIDEsIDEsICgpID0+IHsKICAgIAkJCQkJCWlmX2Jsb2Nrc1twcmV2aW91c19ibG9ja19pbmRleF0gPSBudWxsOwogICAgCQkJCQl9KTsKCiAgICAJCQkJCWNoZWNrX291dHJvcygpOwogICAgCQkJCX0KCiAgICAJCQkJaWYgKH5jdXJyZW50X2Jsb2NrX3R5cGVfaW5kZXgpIHsKICAgIAkJCQkJaWZfYmxvY2sgPSBpZl9ibG9ja3NbY3VycmVudF9ibG9ja190eXBlX2luZGV4XTsKCiAgICAJCQkJCWlmICghaWZfYmxvY2spIHsKICAgIAkJCQkJCWlmX2Jsb2NrID0gaWZfYmxvY2tzW2N1cnJlbnRfYmxvY2tfdHlwZV9pbmRleF0gPSBpZl9ibG9ja19jcmVhdG9yc1tjdXJyZW50X2Jsb2NrX3R5cGVfaW5kZXhdKGN0eCk7CiAgICAJCQkJCQlpZl9ibG9jay5jKCk7CiAgICAJCQkJCX0gZWxzZSB7CiAgICAJCQkJCQlpZl9ibG9jay5wKGN0eCwgZGlydHkpOwogICAgCQkJCQl9CgogICAgCQkJCQl0cmFuc2l0aW9uX2luKGlmX2Jsb2NrLCAxKTsKICAgIAkJCQkJaWZfYmxvY2subShpZl9ibG9ja19hbmNob3IucGFyZW50Tm9kZSwgaWZfYmxvY2tfYW5jaG9yKTsKICAgIAkJCQl9IGVsc2UgewogICAgCQkJCQlpZl9ibG9jayA9IG51bGw7CiAgICAJCQkJfQogICAgCQkJfQogICAgCQl9LAogICAgCQlpOiBmdW5jdGlvbiBpbnRybyhsb2NhbCkgewogICAgCQkJaWYgKGN1cnJlbnQpIHJldHVybjsKICAgIAkJCXRyYW5zaXRpb25faW4oaWZfYmxvY2spOwogICAgCQkJY3VycmVudCA9IHRydWU7CiAgICAJCX0sCiAgICAJCW86IGZ1bmN0aW9uIG91dHJvKGxvY2FsKSB7CiAgICAJCQl0cmFuc2l0aW9uX291dChpZl9ibG9jayk7CiAgICAJCQljdXJyZW50ID0gZmFsc2U7CiAgICAJCX0sCiAgICAJCWQ6IGZ1bmN0aW9uIGRlc3Ryb3koZGV0YWNoaW5nKSB7CiAgICAJCQlpZiAofmN1cnJlbnRfYmxvY2tfdHlwZV9pbmRleCkgewogICAgCQkJCWlmX2Jsb2Nrc1tjdXJyZW50X2Jsb2NrX3R5cGVfaW5kZXhdLmQoZGV0YWNoaW5nKTsKICAgIAkJCX0KCiAgICAJCQlpZiAoZGV0YWNoaW5nKSBkZXRhY2hfZGV2KGlmX2Jsb2NrX2FuY2hvcik7CiAgICAJCX0KICAgIAl9OwoKICAgIAlkaXNwYXRjaF9kZXYoIlN2ZWx0ZVJlZ2lzdGVyQmxvY2siLCB7CiAgICAJCWJsb2NrLAogICAgCQlpZDogY3JlYXRlX2ZyYWdtZW50JDYubmFtZSwKICAgIAkJdHlwZTogImNvbXBvbmVudCIsCiAgICAJCXNvdXJjZTogIiIsCiAgICAJCWN0eAogICAgCX0pOwoKICAgIAlyZXR1cm4gYmxvY2s7CiAgICB9CgogICAgZnVuY3Rpb24gaW5zdGFuY2UkNigkJHNlbGYsICQkcHJvcHMsICQkaW52YWxpZGF0ZSkgewogICAgCWNvbnN0IG9taXRfcHJvcHNfbmFtZXMgPSBbCiAgICAJCSJjbGFzcyIsInR5cGUiLCJzaXplIiwiYnNTaXplIiwiY29sb3IiLCJjaGVja2VkIiwidmFsaWQiLCJpbnZhbGlkIiwicGxhaW50ZXh0IiwiYWRkb24iLCJ2YWx1ZSIsImZpbGVzIiwicmVhZG9ubHkiLCJtdWx0aXBsZSIsIm5hbWUiLCJwbGFjZWhvbGRlciIsImRpc2FibGVkIgogICAgCV07CgogICAgCWxldCAkJHJlc3RQcm9wcyA9IGNvbXB1dGVfcmVzdF9wcm9wcygkJHByb3BzLCBvbWl0X3Byb3BzX25hbWVzKTsKICAgIAlsZXQgeyAkJHNsb3RzOiBzbG90cyA9IHt9LCAkJHNjb3BlIH0gPSAkJHByb3BzOwogICAgCXZhbGlkYXRlX3Nsb3RzKCJJbnB1dCIsIHNsb3RzLCBbJ2RlZmF1bHQnXSk7CiAgICAJbGV0IHsgY2xhc3M6IGNsYXNzTmFtZSA9ICIiIH0gPSAkJHByb3BzOwogICAgCWxldCB7IHR5cGUgPSAidGV4dCIgfSA9ICQkcHJvcHM7CiAgICAJbGV0IHsgc2l6ZSA9IHVuZGVmaW5lZCB9ID0gJCRwcm9wczsKICAgIAlsZXQgeyBic1NpemUgPSB1bmRlZmluZWQgfSA9ICQkcHJvcHM7CiAgICAJbGV0IHsgY29sb3IgPSB1bmRlZmluZWQgfSA9ICQkcHJvcHM7CiAgICAJbGV0IHsgY2hlY2tlZCA9IGZhbHNlIH0gPSAkJHByb3BzOwogICAgCWxldCB7IHZhbGlkID0gZmFsc2UgfSA9ICQkcHJvcHM7CiAgICAJbGV0IHsgaW52YWxpZCA9IGZhbHNlIH0gPSAkJHByb3BzOwogICAgCWxldCB7IHBsYWludGV4dCA9IGZhbHNlIH0gPSAkJHByb3BzOwogICAgCWxldCB7IGFkZG9uID0gZmFsc2UgfSA9ICQkcHJvcHM7CiAgICAJbGV0IHsgdmFsdWUgPSAiIiB9ID0gJCRwcm9wczsKICAgIAlsZXQgeyBmaWxlcyA9ICIiIH0gPSAkJHByb3BzOwogICAgCWxldCB7IHJlYWRvbmx5ID0gdW5kZWZpbmVkIH0gPSAkJHByb3BzOwogICAgCWxldCB7IG11bHRpcGxlID0gdW5kZWZpbmVkIH0gPSAkJHByb3BzOwogICAgCWxldCB7IG5hbWUgPSAiIiB9ID0gJCRwcm9wczsKICAgIAlsZXQgeyBwbGFjZWhvbGRlciA9ICIiIH0gPSAkJHByb3BzOwogICAgCWxldCB7IGRpc2FibGVkID0gdW5kZWZpbmVkIH0gPSAkJHByb3BzOwogICAgCWxldCBjbGFzc2VzOwogICAgCWxldCB0YWc7CgogICAgCWNvbnN0IGhhbmRsZUlucHV0ID0gZXZlbnQgPT4gewogICAgCQkkJGludmFsaWRhdGUoMSwgdmFsdWUgPSBldmVudC50YXJnZXQudmFsdWUpOwogICAgCX07CgogICAgCWZ1bmN0aW9uIGNoYW5nZV9oYW5kbGVyKGV2ZW50KSB7CiAgICAJCWJ1YmJsZSgkJHNlbGYsIGV2ZW50KTsKICAgIAl9CgogICAgCWZ1bmN0aW9uIGJsdXJfaGFuZGxlcihldmVudCkgewogICAgCQlidWJibGUoJCRzZWxmLCBldmVudCk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBmb2N1c19oYW5kbGVyKGV2ZW50KSB7CiAgICAJCWJ1YmJsZSgkJHNlbGYsIGV2ZW50KTsKICAgIAl9CgogICAgCWZ1bmN0aW9uIGtleWRvd25faGFuZGxlcihldmVudCkgewogICAgCQlidWJibGUoJCRzZWxmLCBldmVudCk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBrZXlwcmVzc19oYW5kbGVyKGV2ZW50KSB7CiAgICAJCWJ1YmJsZSgkJHNlbGYsIGV2ZW50KTsKICAgIAl9CgogICAgCWZ1bmN0aW9uIGtleXVwX2hhbmRsZXIoZXZlbnQpIHsKICAgIAkJYnViYmxlKCQkc2VsZiwgZXZlbnQpOwogICAgCX0KCiAgICAJZnVuY3Rpb24gaW5wdXRfaGFuZGxlcihldmVudCkgewogICAgCQlidWJibGUoJCRzZWxmLCBldmVudCk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBjaGFuZ2VfaGFuZGxlcl8xKGV2ZW50KSB7CiAgICAJCWJ1YmJsZSgkJHNlbGYsIGV2ZW50KTsKICAgIAl9CgogICAgCWZ1bmN0aW9uIGJsdXJfaGFuZGxlcl8xKGV2ZW50KSB7CiAgICAJCWJ1YmJsZSgkJHNlbGYsIGV2ZW50KTsKICAgIAl9CgogICAgCWZ1bmN0aW9uIGZvY3VzX2hhbmRsZXJfMShldmVudCkgewogICAgCQlidWJibGUoJCRzZWxmLCBldmVudCk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBrZXlkb3duX2hhbmRsZXJfMShldmVudCkgewogICAgCQlidWJibGUoJCRzZWxmLCBldmVudCk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBrZXlwcmVzc19oYW5kbGVyXzEoZXZlbnQpIHsKICAgIAkJYnViYmxlKCQkc2VsZiwgZXZlbnQpOwogICAgCX0KCiAgICAJZnVuY3Rpb24ga2V5dXBfaGFuZGxlcl8xKGV2ZW50KSB7CiAgICAJCWJ1YmJsZSgkJHNlbGYsIGV2ZW50KTsKICAgIAl9CgogICAgCWZ1bmN0aW9uIGlucHV0X2hhbmRsZXJfMShldmVudCkgewogICAgCQlidWJibGUoJCRzZWxmLCBldmVudCk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBjaGFuZ2VfaGFuZGxlcl8yKGV2ZW50KSB7CiAgICAJCWJ1YmJsZSgkJHNlbGYsIGV2ZW50KTsKICAgIAl9CgogICAgCWZ1bmN0aW9uIGJsdXJfaGFuZGxlcl8yKGV2ZW50KSB7CiAgICAJCWJ1YmJsZSgkJHNlbGYsIGV2ZW50KTsKICAgIAl9CgogICAgCWZ1bmN0aW9uIGZvY3VzX2hhbmRsZXJfMihldmVudCkgewogICAgCQlidWJibGUoJCRzZWxmLCBldmVudCk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBrZXlkb3duX2hhbmRsZXJfMihldmVudCkgewogICAgCQlidWJibGUoJCRzZWxmLCBldmVudCk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBrZXlwcmVzc19oYW5kbGVyXzIoZXZlbnQpIHsKICAgIAkJYnViYmxlKCQkc2VsZiwgZXZlbnQpOwogICAgCX0KCiAgICAJZnVuY3Rpb24ga2V5dXBfaGFuZGxlcl8yKGV2ZW50KSB7CiAgICAJCWJ1YmJsZSgkJHNlbGYsIGV2ZW50KTsKICAgIAl9CgogICAgCWZ1bmN0aW9uIGlucHV0X2hhbmRsZXJfMihldmVudCkgewogICAgCQlidWJibGUoJCRzZWxmLCBldmVudCk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBjaGFuZ2VfaGFuZGxlcl8zKGV2ZW50KSB7CiAgICAJCWJ1YmJsZSgkJHNlbGYsIGV2ZW50KTsKICAgIAl9CgogICAgCWZ1bmN0aW9uIGJsdXJfaGFuZGxlcl8zKGV2ZW50KSB7CiAgICAJCWJ1YmJsZSgkJHNlbGYsIGV2ZW50KTsKICAgIAl9CgogICAgCWZ1bmN0aW9uIGZvY3VzX2hhbmRsZXJfMyhldmVudCkgewogICAgCQlidWJibGUoJCRzZWxmLCBldmVudCk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBrZXlkb3duX2hhbmRsZXJfMyhldmVudCkgewogICAgCQlidWJibGUoJCRzZWxmLCBldmVudCk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBrZXlwcmVzc19oYW5kbGVyXzMoZXZlbnQpIHsKICAgIAkJYnViYmxlKCQkc2VsZiwgZXZlbnQpOwogICAgCX0KCiAgICAJZnVuY3Rpb24ga2V5dXBfaGFuZGxlcl8zKGV2ZW50KSB7CiAgICAJCWJ1YmJsZSgkJHNlbGYsIGV2ZW50KTsKICAgIAl9CgogICAgCWZ1bmN0aW9uIGlucHV0X2hhbmRsZXJfMyhldmVudCkgewogICAgCQlidWJibGUoJCRzZWxmLCBldmVudCk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBpbnB1dF9oYW5kbGVyXzQoZXZlbnQpIHsKICAgIAkJYnViYmxlKCQkc2VsZiwgZXZlbnQpOwogICAgCX0KCiAgICAJZnVuY3Rpb24gYmx1cl9oYW5kbGVyXzQoZXZlbnQpIHsKICAgIAkJYnViYmxlKCQkc2VsZiwgZXZlbnQpOwogICAgCX0KCiAgICAJZnVuY3Rpb24gZm9jdXNfaGFuZGxlcl80KGV2ZW50KSB7CiAgICAJCWJ1YmJsZSgkJHNlbGYsIGV2ZW50KTsKICAgIAl9CgogICAgCWZ1bmN0aW9uIGtleWRvd25faGFuZGxlcl80KGV2ZW50KSB7CiAgICAJCWJ1YmJsZSgkJHNlbGYsIGV2ZW50KTsKICAgIAl9CgogICAgCWZ1bmN0aW9uIGtleXByZXNzX2hhbmRsZXJfNChldmVudCkgewogICAgCQlidWJibGUoJCRzZWxmLCBldmVudCk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBrZXl1cF9oYW5kbGVyXzQoZXZlbnQpIHsKICAgIAkJYnViYmxlKCQkc2VsZiwgZXZlbnQpOwogICAgCX0KCiAgICAJZnVuY3Rpb24gY2hhbmdlX2hhbmRsZXJfNChldmVudCkgewogICAgCQlidWJibGUoJCRzZWxmLCBldmVudCk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBjaGFuZ2VfaGFuZGxlcl81KGV2ZW50KSB7CiAgICAJCWJ1YmJsZSgkJHNlbGYsIGV2ZW50KTsKICAgIAl9CgogICAgCWZ1bmN0aW9uIGJsdXJfaGFuZGxlcl81KGV2ZW50KSB7CiAgICAJCWJ1YmJsZSgkJHNlbGYsIGV2ZW50KTsKICAgIAl9CgogICAgCWZ1bmN0aW9uIGZvY3VzX2hhbmRsZXJfNShldmVudCkgewogICAgCQlidWJibGUoJCRzZWxmLCBldmVudCk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBrZXlkb3duX2hhbmRsZXJfNShldmVudCkgewogICAgCQlidWJibGUoJCRzZWxmLCBldmVudCk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBrZXlwcmVzc19oYW5kbGVyXzUoZXZlbnQpIHsKICAgIAkJYnViYmxlKCQkc2VsZiwgZXZlbnQpOwogICAgCX0KCiAgICAJZnVuY3Rpb24ga2V5dXBfaGFuZGxlcl81KGV2ZW50KSB7CiAgICAJCWJ1YmJsZSgkJHNlbGYsIGV2ZW50KTsKICAgIAl9CgogICAgCWZ1bmN0aW9uIGlucHV0X2hhbmRsZXJfNShldmVudCkgewogICAgCQlidWJibGUoJCRzZWxmLCBldmVudCk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBjaGFuZ2VfaGFuZGxlcl82KGV2ZW50KSB7CiAgICAJCWJ1YmJsZSgkJHNlbGYsIGV2ZW50KTsKICAgIAl9CgogICAgCWZ1bmN0aW9uIGJsdXJfaGFuZGxlcl82KGV2ZW50KSB7CiAgICAJCWJ1YmJsZSgkJHNlbGYsIGV2ZW50KTsKICAgIAl9CgogICAgCWZ1bmN0aW9uIGZvY3VzX2hhbmRsZXJfNihldmVudCkgewogICAgCQlidWJibGUoJCRzZWxmLCBldmVudCk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBrZXlkb3duX2hhbmRsZXJfNihldmVudCkgewogICAgCQlidWJibGUoJCRzZWxmLCBldmVudCk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBrZXlwcmVzc19oYW5kbGVyXzYoZXZlbnQpIHsKICAgIAkJYnViYmxlKCQkc2VsZiwgZXZlbnQpOwogICAgCX0KCiAgICAJZnVuY3Rpb24ga2V5dXBfaGFuZGxlcl82KGV2ZW50KSB7CiAgICAJCWJ1YmJsZSgkJHNlbGYsIGV2ZW50KTsKICAgIAl9CgogICAgCWZ1bmN0aW9uIGlucHV0X2hhbmRsZXJfNihldmVudCkgewogICAgCQlidWJibGUoJCRzZWxmLCBldmVudCk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBjaGFuZ2VfaGFuZGxlcl83KGV2ZW50KSB7CiAgICAJCWJ1YmJsZSgkJHNlbGYsIGV2ZW50KTsKICAgIAl9CgogICAgCWZ1bmN0aW9uIGJsdXJfaGFuZGxlcl83KGV2ZW50KSB7CiAgICAJCWJ1YmJsZSgkJHNlbGYsIGV2ZW50KTsKICAgIAl9CgogICAgCWZ1bmN0aW9uIGZvY3VzX2hhbmRsZXJfNyhldmVudCkgewogICAgCQlidWJibGUoJCRzZWxmLCBldmVudCk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBrZXlkb3duX2hhbmRsZXJfNyhldmVudCkgewogICAgCQlidWJibGUoJCRzZWxmLCBldmVudCk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBrZXlwcmVzc19oYW5kbGVyXzcoZXZlbnQpIHsKICAgIAkJYnViYmxlKCQkc2VsZiwgZXZlbnQpOwogICAgCX0KCiAgICAJZnVuY3Rpb24ga2V5dXBfaGFuZGxlcl83KGV2ZW50KSB7CiAgICAJCWJ1YmJsZSgkJHNlbGYsIGV2ZW50KTsKICAgIAl9CgogICAgCWZ1bmN0aW9uIGlucHV0X2hhbmRsZXJfNyhldmVudCkgewogICAgCQlidWJibGUoJCRzZWxmLCBldmVudCk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBjaGFuZ2VfaGFuZGxlcl84KGV2ZW50KSB7CiAgICAJCWJ1YmJsZSgkJHNlbGYsIGV2ZW50KTsKICAgIAl9CgogICAgCWZ1bmN0aW9uIGJsdXJfaGFuZGxlcl84KGV2ZW50KSB7CiAgICAJCWJ1YmJsZSgkJHNlbGYsIGV2ZW50KTsKICAgIAl9CgogICAgCWZ1bmN0aW9uIGZvY3VzX2hhbmRsZXJfOChldmVudCkgewogICAgCQlidWJibGUoJCRzZWxmLCBldmVudCk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBrZXlkb3duX2hhbmRsZXJfOChldmVudCkgewogICAgCQlidWJibGUoJCRzZWxmLCBldmVudCk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBrZXlwcmVzc19oYW5kbGVyXzgoZXZlbnQpIHsKICAgIAkJYnViYmxlKCQkc2VsZiwgZXZlbnQpOwogICAgCX0KCiAgICAJZnVuY3Rpb24ga2V5dXBfaGFuZGxlcl84KGV2ZW50KSB7CiAgICAJCWJ1YmJsZSgkJHNlbGYsIGV2ZW50KTsKICAgIAl9CgogICAgCWZ1bmN0aW9uIGlucHV0X2hhbmRsZXJfOChldmVudCkgewogICAgCQlidWJibGUoJCRzZWxmLCBldmVudCk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBjaGFuZ2VfaGFuZGxlcl85KGV2ZW50KSB7CiAgICAJCWJ1YmJsZSgkJHNlbGYsIGV2ZW50KTsKICAgIAl9CgogICAgCWZ1bmN0aW9uIGJsdXJfaGFuZGxlcl85KGV2ZW50KSB7CiAgICAJCWJ1YmJsZSgkJHNlbGYsIGV2ZW50KTsKICAgIAl9CgogICAgCWZ1bmN0aW9uIGZvY3VzX2hhbmRsZXJfOShldmVudCkgewogICAgCQlidWJibGUoJCRzZWxmLCBldmVudCk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBrZXlkb3duX2hhbmRsZXJfOShldmVudCkgewogICAgCQlidWJibGUoJCRzZWxmLCBldmVudCk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBrZXlwcmVzc19oYW5kbGVyXzkoZXZlbnQpIHsKICAgIAkJYnViYmxlKCQkc2VsZiwgZXZlbnQpOwogICAgCX0KCiAgICAJZnVuY3Rpb24ga2V5dXBfaGFuZGxlcl85KGV2ZW50KSB7CiAgICAJCWJ1YmJsZSgkJHNlbGYsIGV2ZW50KTsKICAgIAl9CgogICAgCWZ1bmN0aW9uIGlucHV0X2hhbmRsZXJfOShldmVudCkgewogICAgCQlidWJibGUoJCRzZWxmLCBldmVudCk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBjaGFuZ2VfaGFuZGxlcl8xMChldmVudCkgewogICAgCQlidWJibGUoJCRzZWxmLCBldmVudCk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBibHVyX2hhbmRsZXJfMTAoZXZlbnQpIHsKICAgIAkJYnViYmxlKCQkc2VsZiwgZXZlbnQpOwogICAgCX0KCiAgICAJZnVuY3Rpb24gZm9jdXNfaGFuZGxlcl8xMChldmVudCkgewogICAgCQlidWJibGUoJCRzZWxmLCBldmVudCk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBrZXlkb3duX2hhbmRsZXJfMTAoZXZlbnQpIHsKICAgIAkJYnViYmxlKCQkc2VsZiwgZXZlbnQpOwogICAgCX0KCiAgICAJZnVuY3Rpb24ga2V5cHJlc3NfaGFuZGxlcl8xMChldmVudCkgewogICAgCQlidWJibGUoJCRzZWxmLCBldmVudCk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBrZXl1cF9oYW5kbGVyXzEwKGV2ZW50KSB7CiAgICAJCWJ1YmJsZSgkJHNlbGYsIGV2ZW50KTsKICAgIAl9CgogICAgCWZ1bmN0aW9uIGlucHV0X2hhbmRsZXJfMTAoZXZlbnQpIHsKICAgIAkJYnViYmxlKCQkc2VsZiwgZXZlbnQpOwogICAgCX0KCiAgICAJZnVuY3Rpb24gY2hhbmdlX2hhbmRsZXJfMTEoZXZlbnQpIHsKICAgIAkJYnViYmxlKCQkc2VsZiwgZXZlbnQpOwogICAgCX0KCiAgICAJZnVuY3Rpb24gYmx1cl9oYW5kbGVyXzExKGV2ZW50KSB7CiAgICAJCWJ1YmJsZSgkJHNlbGYsIGV2ZW50KTsKICAgIAl9CgogICAgCWZ1bmN0aW9uIGZvY3VzX2hhbmRsZXJfMTEoZXZlbnQpIHsKICAgIAkJYnViYmxlKCQkc2VsZiwgZXZlbnQpOwogICAgCX0KCiAgICAJZnVuY3Rpb24ga2V5ZG93bl9oYW5kbGVyXzExKGV2ZW50KSB7CiAgICAJCWJ1YmJsZSgkJHNlbGYsIGV2ZW50KTsKICAgIAl9CgogICAgCWZ1bmN0aW9uIGtleXByZXNzX2hhbmRsZXJfMTEoZXZlbnQpIHsKICAgIAkJYnViYmxlKCQkc2VsZiwgZXZlbnQpOwogICAgCX0KCiAgICAJZnVuY3Rpb24ga2V5dXBfaGFuZGxlcl8xMShldmVudCkgewogICAgCQlidWJibGUoJCRzZWxmLCBldmVudCk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBpbnB1dF9oYW5kbGVyXzExKGV2ZW50KSB7CiAgICAJCWJ1YmJsZSgkJHNlbGYsIGV2ZW50KTsKICAgIAl9CgogICAgCWZ1bmN0aW9uIGNoYW5nZV9oYW5kbGVyXzEyKGV2ZW50KSB7CiAgICAJCWJ1YmJsZSgkJHNlbGYsIGV2ZW50KTsKICAgIAl9CgogICAgCWZ1bmN0aW9uIGJsdXJfaGFuZGxlcl8xMihldmVudCkgewogICAgCQlidWJibGUoJCRzZWxmLCBldmVudCk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBmb2N1c19oYW5kbGVyXzEyKGV2ZW50KSB7CiAgICAJCWJ1YmJsZSgkJHNlbGYsIGV2ZW50KTsKICAgIAl9CgogICAgCWZ1bmN0aW9uIGtleWRvd25faGFuZGxlcl8xMihldmVudCkgewogICAgCQlidWJibGUoJCRzZWxmLCBldmVudCk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBrZXlwcmVzc19oYW5kbGVyXzEyKGV2ZW50KSB7CiAgICAJCWJ1YmJsZSgkJHNlbGYsIGV2ZW50KTsKICAgIAl9CgogICAgCWZ1bmN0aW9uIGtleXVwX2hhbmRsZXJfMTIoZXZlbnQpIHsKICAgIAkJYnViYmxlKCQkc2VsZiwgZXZlbnQpOwogICAgCX0KCiAgICAJZnVuY3Rpb24gaW5wdXRfaGFuZGxlcl8xMihldmVudCkgewogICAgCQlidWJibGUoJCRzZWxmLCBldmVudCk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBjaGFuZ2VfaGFuZGxlcl8xMyhldmVudCkgewogICAgCQlidWJibGUoJCRzZWxmLCBldmVudCk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBibHVyX2hhbmRsZXJfMTMoZXZlbnQpIHsKICAgIAkJYnViYmxlKCQkc2VsZiwgZXZlbnQpOwogICAgCX0KCiAgICAJZnVuY3Rpb24gZm9jdXNfaGFuZGxlcl8xMyhldmVudCkgewogICAgCQlidWJibGUoJCRzZWxmLCBldmVudCk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBrZXlkb3duX2hhbmRsZXJfMTMoZXZlbnQpIHsKICAgIAkJYnViYmxlKCQkc2VsZiwgZXZlbnQpOwogICAgCX0KCiAgICAJZnVuY3Rpb24ga2V5cHJlc3NfaGFuZGxlcl8xMyhldmVudCkgewogICAgCQlidWJibGUoJCRzZWxmLCBldmVudCk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBrZXl1cF9oYW5kbGVyXzEzKGV2ZW50KSB7CiAgICAJCWJ1YmJsZSgkJHNlbGYsIGV2ZW50KTsKICAgIAl9CgogICAgCWZ1bmN0aW9uIGlucHV0X2hhbmRsZXJfMTMoZXZlbnQpIHsKICAgIAkJYnViYmxlKCQkc2VsZiwgZXZlbnQpOwogICAgCX0KCiAgICAJZnVuY3Rpb24gYmx1cl9oYW5kbGVyXzE0KGV2ZW50KSB7CiAgICAJCWJ1YmJsZSgkJHNlbGYsIGV2ZW50KTsKICAgIAl9CgogICAgCWZ1bmN0aW9uIGZvY3VzX2hhbmRsZXJfMTQoZXZlbnQpIHsKICAgIAkJYnViYmxlKCQkc2VsZiwgZXZlbnQpOwogICAgCX0KCiAgICAJZnVuY3Rpb24ga2V5ZG93bl9oYW5kbGVyXzE0KGV2ZW50KSB7CiAgICAJCWJ1YmJsZSgkJHNlbGYsIGV2ZW50KTsKICAgIAl9CgogICAgCWZ1bmN0aW9uIGtleXByZXNzX2hhbmRsZXJfMTQoZXZlbnQpIHsKICAgIAkJYnViYmxlKCQkc2VsZiwgZXZlbnQpOwogICAgCX0KCiAgICAJZnVuY3Rpb24ga2V5dXBfaGFuZGxlcl8xNChldmVudCkgewogICAgCQlidWJibGUoJCRzZWxmLCBldmVudCk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBjaGFuZ2VfaGFuZGxlcl8xNChldmVudCkgewogICAgCQlidWJibGUoJCRzZWxmLCBldmVudCk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBibHVyX2hhbmRsZXJfMTUoZXZlbnQpIHsKICAgIAkJYnViYmxlKCQkc2VsZiwgZXZlbnQpOwogICAgCX0KCiAgICAJZnVuY3Rpb24gZm9jdXNfaGFuZGxlcl8xNShldmVudCkgewogICAgCQlidWJibGUoJCRzZWxmLCBldmVudCk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBrZXlkb3duX2hhbmRsZXJfMTUoZXZlbnQpIHsKICAgIAkJYnViYmxlKCQkc2VsZiwgZXZlbnQpOwogICAgCX0KCiAgICAJZnVuY3Rpb24ga2V5cHJlc3NfaGFuZGxlcl8xNShldmVudCkgewogICAgCQlidWJibGUoJCRzZWxmLCBldmVudCk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBrZXl1cF9oYW5kbGVyXzE1KGV2ZW50KSB7CiAgICAJCWJ1YmJsZSgkJHNlbGYsIGV2ZW50KTsKICAgIAl9CgogICAgCWZ1bmN0aW9uIGlucHV0X2hhbmRsZXJfMTQoZXZlbnQpIHsKICAgIAkJYnViYmxlKCQkc2VsZiwgZXZlbnQpOwogICAgCX0KCiAgICAJZnVuY3Rpb24gYmx1cl9oYW5kbGVyXzE2KGV2ZW50KSB7CiAgICAJCWJ1YmJsZSgkJHNlbGYsIGV2ZW50KTsKICAgIAl9CgogICAgCWZ1bmN0aW9uIGZvY3VzX2hhbmRsZXJfMTYoZXZlbnQpIHsKICAgIAkJYnViYmxlKCQkc2VsZiwgZXZlbnQpOwogICAgCX0KCiAgICAJZnVuY3Rpb24gY2hhbmdlX2hhbmRsZXJfMTUoZXZlbnQpIHsKICAgIAkJYnViYmxlKCQkc2VsZiwgZXZlbnQpOwogICAgCX0KCiAgICAJZnVuY3Rpb24gaW5wdXRfaGFuZGxlcl8xNShldmVudCkgewogICAgCQlidWJibGUoJCRzZWxmLCBldmVudCk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBpbnB1dF9pbnB1dF9oYW5kbGVyKCkgewogICAgCQl2YWx1ZSA9IHRoaXMudmFsdWU7CiAgICAJCSQkaW52YWxpZGF0ZSgxLCB2YWx1ZSk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBpbnB1dF9pbnB1dF9oYW5kbGVyXzEoKSB7CiAgICAJCXZhbHVlID0gdGhpcy52YWx1ZTsKICAgIAkJJCRpbnZhbGlkYXRlKDEsIHZhbHVlKTsKICAgIAl9CgogICAgCWZ1bmN0aW9uIGlucHV0X2lucHV0X2hhbmRsZXJfMigpIHsKICAgIAkJdmFsdWUgPSB0aGlzLnZhbHVlOwogICAgCQkkJGludmFsaWRhdGUoMSwgdmFsdWUpOwogICAgCX0KCiAgICAJZnVuY3Rpb24gaW5wdXRfY2hhbmdlX2hhbmRsZXIoKSB7CiAgICAJCWZpbGVzID0gdGhpcy5maWxlczsKICAgIAkJJCRpbnZhbGlkYXRlKDIsIGZpbGVzKTsKICAgIAl9CgogICAgCWZ1bmN0aW9uIGlucHV0X2NoYW5nZV9oYW5kbGVyXzEoKSB7CiAgICAJCXZhbHVlID0gdGhpcy52YWx1ZTsKICAgIAkJY2hlY2tlZCA9IHRoaXMuY2hlY2tlZDsKICAgIAkJJCRpbnZhbGlkYXRlKDEsIHZhbHVlKTsKICAgIAkJJCRpbnZhbGlkYXRlKDAsIGNoZWNrZWQpOwogICAgCX0KCiAgICAJZnVuY3Rpb24gaW5wdXRfY2hhbmdlX2hhbmRsZXJfMigpIHsKICAgIAkJdmFsdWUgPSB0aGlzLnZhbHVlOwogICAgCQkkJGludmFsaWRhdGUoMSwgdmFsdWUpOwogICAgCX0KCiAgICAJZnVuY3Rpb24gaW5wdXRfaW5wdXRfaGFuZGxlcl8zKCkgewogICAgCQl2YWx1ZSA9IHRoaXMudmFsdWU7CiAgICAJCSQkaW52YWxpZGF0ZSgxLCB2YWx1ZSk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBpbnB1dF9pbnB1dF9oYW5kbGVyXzQoKSB7CiAgICAJCXZhbHVlID0gdG9fbnVtYmVyKHRoaXMudmFsdWUpOwogICAgCQkkJGludmFsaWRhdGUoMSwgdmFsdWUpOwogICAgCX0KCiAgICAJZnVuY3Rpb24gaW5wdXRfaW5wdXRfaGFuZGxlcl81KCkgewogICAgCQl2YWx1ZSA9IHRoaXMudmFsdWU7CiAgICAJCSQkaW52YWxpZGF0ZSgxLCB2YWx1ZSk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBpbnB1dF9pbnB1dF9oYW5kbGVyXzYoKSB7CiAgICAJCXZhbHVlID0gdGhpcy52YWx1ZTsKICAgIAkJJCRpbnZhbGlkYXRlKDEsIHZhbHVlKTsKICAgIAl9CgogICAgCWZ1bmN0aW9uIGlucHV0X2lucHV0X2hhbmRsZXJfNygpIHsKICAgIAkJdmFsdWUgPSB0aGlzLnZhbHVlOwogICAgCQkkJGludmFsaWRhdGUoMSwgdmFsdWUpOwogICAgCX0KCiAgICAJZnVuY3Rpb24gaW5wdXRfaW5wdXRfaGFuZGxlcl84KCkgewogICAgCQl2YWx1ZSA9IHRoaXMudmFsdWU7CiAgICAJCSQkaW52YWxpZGF0ZSgxLCB2YWx1ZSk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBpbnB1dF9jaGFuZ2VfaW5wdXRfaGFuZGxlcigpIHsKICAgIAkJdmFsdWUgPSB0b19udW1iZXIodGhpcy52YWx1ZSk7CiAgICAJCSQkaW52YWxpZGF0ZSgxLCB2YWx1ZSk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBpbnB1dF9pbnB1dF9oYW5kbGVyXzkoKSB7CiAgICAJCXZhbHVlID0gdGhpcy52YWx1ZTsKICAgIAkJJCRpbnZhbGlkYXRlKDEsIHZhbHVlKTsKICAgIAl9CgogICAgCWZ1bmN0aW9uIHRleHRhcmVhX2lucHV0X2hhbmRsZXIoKSB7CiAgICAJCXZhbHVlID0gdGhpcy52YWx1ZTsKICAgIAkJJCRpbnZhbGlkYXRlKDEsIHZhbHVlKTsKICAgIAl9CgogICAgCWZ1bmN0aW9uIHNlbGVjdF9jaGFuZ2VfaGFuZGxlcigpIHsKICAgIAkJdmFsdWUgPSBzZWxlY3RfdmFsdWUodGhpcyk7CiAgICAJCSQkaW52YWxpZGF0ZSgxLCB2YWx1ZSk7CiAgICAJfQoKICAgIAkkJHNlbGYuJCRzZXQgPSAkJG5ld19wcm9wcyA9PiB7CiAgICAJCSQkcHJvcHMgPSBhc3NpZ24oYXNzaWduKHt9LCAkJHByb3BzKSwgZXhjbHVkZV9pbnRlcm5hbF9wcm9wcygkJG5ld19wcm9wcykpOwogICAgCQkkJGludmFsaWRhdGUoMTIsICQkcmVzdFByb3BzID0gY29tcHV0ZV9yZXN0X3Byb3BzKCQkcHJvcHMsIG9taXRfcHJvcHNfbmFtZXMpKTsKICAgIAkJaWYgKCJjbGFzcyIgaW4gJCRuZXdfcHJvcHMpICQkaW52YWxpZGF0ZSgxNSwgY2xhc3NOYW1lID0gJCRuZXdfcHJvcHMuY2xhc3MpOwogICAgCQlpZiAoInR5cGUiIGluICQkbmV3X3Byb3BzKSAkJGludmFsaWRhdGUoMywgdHlwZSA9ICQkbmV3X3Byb3BzLnR5cGUpOwogICAgCQlpZiAoInNpemUiIGluICQkbmV3X3Byb3BzKSAkJGludmFsaWRhdGUoMTMsIHNpemUgPSAkJG5ld19wcm9wcy5zaXplKTsKICAgIAkJaWYgKCJic1NpemUiIGluICQkbmV3X3Byb3BzKSAkJGludmFsaWRhdGUoMTQsIGJzU2l6ZSA9ICQkbmV3X3Byb3BzLmJzU2l6ZSk7CiAgICAJCWlmICgiY29sb3IiIGluICQkbmV3X3Byb3BzKSAkJGludmFsaWRhdGUoMTYsIGNvbG9yID0gJCRuZXdfcHJvcHMuY29sb3IpOwogICAgCQlpZiAoImNoZWNrZWQiIGluICQkbmV3X3Byb3BzKSAkJGludmFsaWRhdGUoMCwgY2hlY2tlZCA9ICQkbmV3X3Byb3BzLmNoZWNrZWQpOwogICAgCQlpZiAoInZhbGlkIiBpbiAkJG5ld19wcm9wcykgJCRpbnZhbGlkYXRlKDE3LCB2YWxpZCA9ICQkbmV3X3Byb3BzLnZhbGlkKTsKICAgIAkJaWYgKCJpbnZhbGlkIiBpbiAkJG5ld19wcm9wcykgJCRpbnZhbGlkYXRlKDE4LCBpbnZhbGlkID0gJCRuZXdfcHJvcHMuaW52YWxpZCk7CiAgICAJCWlmICgicGxhaW50ZXh0IiBpbiAkJG5ld19wcm9wcykgJCRpbnZhbGlkYXRlKDE5LCBwbGFpbnRleHQgPSAkJG5ld19wcm9wcy5wbGFpbnRleHQpOwogICAgCQlpZiAoImFkZG9uIiBpbiAkJG5ld19wcm9wcykgJCRpbnZhbGlkYXRlKDIwLCBhZGRvbiA9ICQkbmV3X3Byb3BzLmFkZG9uKTsKICAgIAkJaWYgKCJ2YWx1ZSIgaW4gJCRuZXdfcHJvcHMpICQkaW52YWxpZGF0ZSgxLCB2YWx1ZSA9ICQkbmV3X3Byb3BzLnZhbHVlKTsKICAgIAkJaWYgKCJmaWxlcyIgaW4gJCRuZXdfcHJvcHMpICQkaW52YWxpZGF0ZSgyLCBmaWxlcyA9ICQkbmV3X3Byb3BzLmZpbGVzKTsKICAgIAkJaWYgKCJyZWFkb25seSIgaW4gJCRuZXdfcHJvcHMpICQkaW52YWxpZGF0ZSg0LCByZWFkb25seSA9ICQkbmV3X3Byb3BzLnJlYWRvbmx5KTsKICAgIAkJaWYgKCJtdWx0aXBsZSIgaW4gJCRuZXdfcHJvcHMpICQkaW52YWxpZGF0ZSg1LCBtdWx0aXBsZSA9ICQkbmV3X3Byb3BzLm11bHRpcGxlKTsKICAgIAkJaWYgKCJuYW1lIiBpbiAkJG5ld19wcm9wcykgJCRpbnZhbGlkYXRlKDYsIG5hbWUgPSAkJG5ld19wcm9wcy5uYW1lKTsKICAgIAkJaWYgKCJwbGFjZWhvbGRlciIgaW4gJCRuZXdfcHJvcHMpICQkaW52YWxpZGF0ZSg3LCBwbGFjZWhvbGRlciA9ICQkbmV3X3Byb3BzLnBsYWNlaG9sZGVyKTsKICAgIAkJaWYgKCJkaXNhYmxlZCIgaW4gJCRuZXdfcHJvcHMpICQkaW52YWxpZGF0ZSg4LCBkaXNhYmxlZCA9ICQkbmV3X3Byb3BzLmRpc2FibGVkKTsKICAgIAkJaWYgKCIkJHNjb3BlIiBpbiAkJG5ld19wcm9wcykgJCRpbnZhbGlkYXRlKDIxLCAkJHNjb3BlID0gJCRuZXdfcHJvcHMuJCRzY29wZSk7CiAgICAJfTsKCiAgICAJJCRzZWxmLiRjYXB0dXJlX3N0YXRlID0gKCkgPT4gKHsKICAgIAkJY2xhc3NuYW1lcywKICAgIAkJY2xhc3NOYW1lLAogICAgCQl0eXBlLAogICAgCQlzaXplLAogICAgCQlic1NpemUsCiAgICAJCWNvbG9yLAogICAgCQljaGVja2VkLAogICAgCQl2YWxpZCwKICAgIAkJaW52YWxpZCwKICAgIAkJcGxhaW50ZXh0LAogICAgCQlhZGRvbiwKICAgIAkJdmFsdWUsCiAgICAJCWZpbGVzLAogICAgCQlyZWFkb25seSwKICAgIAkJbXVsdGlwbGUsCiAgICAJCW5hbWUsCiAgICAJCXBsYWNlaG9sZGVyLAogICAgCQlkaXNhYmxlZCwKICAgIAkJY2xhc3NlcywKICAgIAkJdGFnLAogICAgCQloYW5kbGVJbnB1dAogICAgCX0pOwoKICAgIAkkJHNlbGYuJGluamVjdF9zdGF0ZSA9ICQkbmV3X3Byb3BzID0+IHsKICAgIAkJaWYgKCJjbGFzc05hbWUiIGluICQkcHJvcHMpICQkaW52YWxpZGF0ZSgxNSwgY2xhc3NOYW1lID0gJCRuZXdfcHJvcHMuY2xhc3NOYW1lKTsKICAgIAkJaWYgKCJ0eXBlIiBpbiAkJHByb3BzKSAkJGludmFsaWRhdGUoMywgdHlwZSA9ICQkbmV3X3Byb3BzLnR5cGUpOwogICAgCQlpZiAoInNpemUiIGluICQkcHJvcHMpICQkaW52YWxpZGF0ZSgxMywgc2l6ZSA9ICQkbmV3X3Byb3BzLnNpemUpOwogICAgCQlpZiAoImJzU2l6ZSIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDE0LCBic1NpemUgPSAkJG5ld19wcm9wcy5ic1NpemUpOwogICAgCQlpZiAoImNvbG9yIiBpbiAkJHByb3BzKSAkJGludmFsaWRhdGUoMTYsIGNvbG9yID0gJCRuZXdfcHJvcHMuY29sb3IpOwogICAgCQlpZiAoImNoZWNrZWQiIGluICQkcHJvcHMpICQkaW52YWxpZGF0ZSgwLCBjaGVja2VkID0gJCRuZXdfcHJvcHMuY2hlY2tlZCk7CiAgICAJCWlmICgidmFsaWQiIGluICQkcHJvcHMpICQkaW52YWxpZGF0ZSgxNywgdmFsaWQgPSAkJG5ld19wcm9wcy52YWxpZCk7CiAgICAJCWlmICgiaW52YWxpZCIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDE4LCBpbnZhbGlkID0gJCRuZXdfcHJvcHMuaW52YWxpZCk7CiAgICAJCWlmICgicGxhaW50ZXh0IiBpbiAkJHByb3BzKSAkJGludmFsaWRhdGUoMTksIHBsYWludGV4dCA9ICQkbmV3X3Byb3BzLnBsYWludGV4dCk7CiAgICAJCWlmICgiYWRkb24iIGluICQkcHJvcHMpICQkaW52YWxpZGF0ZSgyMCwgYWRkb24gPSAkJG5ld19wcm9wcy5hZGRvbik7CiAgICAJCWlmICgidmFsdWUiIGluICQkcHJvcHMpICQkaW52YWxpZGF0ZSgxLCB2YWx1ZSA9ICQkbmV3X3Byb3BzLnZhbHVlKTsKICAgIAkJaWYgKCJmaWxlcyIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDIsIGZpbGVzID0gJCRuZXdfcHJvcHMuZmlsZXMpOwogICAgCQlpZiAoInJlYWRvbmx5IiBpbiAkJHByb3BzKSAkJGludmFsaWRhdGUoNCwgcmVhZG9ubHkgPSAkJG5ld19wcm9wcy5yZWFkb25seSk7CiAgICAJCWlmICgibXVsdGlwbGUiIGluICQkcHJvcHMpICQkaW52YWxpZGF0ZSg1LCBtdWx0aXBsZSA9ICQkbmV3X3Byb3BzLm11bHRpcGxlKTsKICAgIAkJaWYgKCJuYW1lIiBpbiAkJHByb3BzKSAkJGludmFsaWRhdGUoNiwgbmFtZSA9ICQkbmV3X3Byb3BzLm5hbWUpOwogICAgCQlpZiAoInBsYWNlaG9sZGVyIiBpbiAkJHByb3BzKSAkJGludmFsaWRhdGUoNywgcGxhY2Vob2xkZXIgPSAkJG5ld19wcm9wcy5wbGFjZWhvbGRlcik7CiAgICAJCWlmICgiZGlzYWJsZWQiIGluICQkcHJvcHMpICQkaW52YWxpZGF0ZSg4LCBkaXNhYmxlZCA9ICQkbmV3X3Byb3BzLmRpc2FibGVkKTsKICAgIAkJaWYgKCJjbGFzc2VzIiBpbiAkJHByb3BzKSAkJGludmFsaWRhdGUoOSwgY2xhc3NlcyA9ICQkbmV3X3Byb3BzLmNsYXNzZXMpOwogICAgCQlpZiAoInRhZyIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDEwLCB0YWcgPSAkJG5ld19wcm9wcy50YWcpOwogICAgCX07CgogICAgCWlmICgkJHByb3BzICYmICIkJGluamVjdCIgaW4gJCRwcm9wcykgewogICAgCQkkJHNlbGYuJGluamVjdF9zdGF0ZSgkJHByb3BzLiQkaW5qZWN0KTsKICAgIAl9CgogICAgCSQkc2VsZi4kJC51cGRhdGUgPSAoKSA9PiB7CiAgICAJCWlmICgkJHNlbGYuJCQuZGlydHlbMF0gJiAvKnR5cGUsIHBsYWludGV4dCwgYWRkb24sIGNvbG9yLCBzaXplLCBjbGFzc05hbWUsIGludmFsaWQsIHZhbGlkLCBic1NpemUqLyAyMDg4OTY4KSB7CiAgICAJCQkgewogICAgCQkJCWNvbnN0IGNoZWNrSW5wdXQgPSBbInJhZGlvIiwgImNoZWNrYm94Il0uaW5kZXhPZih0eXBlKSA+IC0xOwogICAgCQkJCWNvbnN0IGlzTm90YU51bWJlciA9IG5ldyBSZWdFeHAoIlxcRCIsICJnIik7CiAgICAJCQkJY29uc3QgZmlsZUlucHV0ID0gdHlwZSA9PT0gImZpbGUiOwogICAgCQkJCWNvbnN0IHRleHRhcmVhSW5wdXQgPSB0eXBlID09PSAidGV4dGFyZWEiOwogICAgCQkJCWNvbnN0IHJhbmdlSW5wdXQgPSB0eXBlID09PSAicmFuZ2UiOwogICAgCQkJCWNvbnN0IHNlbGVjdElucHV0ID0gdHlwZSA9PT0gInNlbGVjdCI7CiAgICAJCQkJY29uc3QgYnV0dG9uSW5wdXQgPSB0eXBlID09PSAiYnV0dG9uIiB8fCB0eXBlID09PSAicmVzZXQiIHx8IHR5cGUgPT09ICJzdWJtaXQiOwogICAgCQkJCWNvbnN0IHVuc3VwcG9ydGVkSW5wdXQgPSB0eXBlID09PSAiaGlkZGVuIiB8fCB0eXBlID09PSAiaW1hZ2UiOwogICAgCQkJCSQkaW52YWxpZGF0ZSgxMCwgdGFnID0gc2VsZWN0SW5wdXQgfHwgdGV4dGFyZWFJbnB1dCA/IHR5cGUgOiAiaW5wdXQiKTsKICAgIAkJCQlsZXQgZm9ybUNvbnRyb2xDbGFzcyA9ICJmb3JtLWNvbnRyb2wiOwoKICAgIAkJCQlpZiAocGxhaW50ZXh0KSB7CiAgICAJCQkJCWZvcm1Db250cm9sQ2xhc3MgPSBgJHtmb3JtQ29udHJvbENsYXNzfS1wbGFpbnRleHRgOwogICAgCQkJCQkkJGludmFsaWRhdGUoMTAsIHRhZyA9ICJpbnB1dCIpOwogICAgCQkJCX0gZWxzZSBpZiAoZmlsZUlucHV0KSB7CiAgICAJCQkJCWZvcm1Db250cm9sQ2xhc3MgPSBgJHtmb3JtQ29udHJvbENsYXNzfS1maWxlYDsKICAgIAkJCQl9IGVsc2UgaWYgKGNoZWNrSW5wdXQpIHsKICAgIAkJCQkJaWYgKGFkZG9uKSB7CiAgICAJCQkJCQlmb3JtQ29udHJvbENsYXNzID0gbnVsbDsKICAgIAkJCQkJfSBlbHNlIHsKICAgIAkJCQkJCWZvcm1Db250cm9sQ2xhc3MgPSAiZm9ybS1jaGVjay1pbnB1dCI7CiAgICAJCQkJCX0KICAgIAkJCQl9IGVsc2UgaWYgKGJ1dHRvbklucHV0KSB7CiAgICAJCQkJCWZvcm1Db250cm9sQ2xhc3MgPSBgYnRuIGJ0bi0ke2NvbG9yIHx8ICJzZWNvbmRhcnkifWA7CiAgICAJCQkJfSBlbHNlIGlmIChyYW5nZUlucHV0KSB7CiAgICAJCQkJCWZvcm1Db250cm9sQ2xhc3MgPSAiZm9ybS1jb250cm9sLXJhbmdlIjsKICAgIAkJCQl9IGVsc2UgaWYgKHVuc3VwcG9ydGVkSW5wdXQpIHsKICAgIAkJCQkJZm9ybUNvbnRyb2xDbGFzcyA9ICIiOwogICAgCQkJCX0KCiAgICAJCQkJaWYgKHNpemUgJiYgaXNOb3RhTnVtYmVyLnRlc3Qoc2l6ZSkpIHsKICAgIAkJCQkJY29uc29sZS53YXJuKCJQbGVhc2UgdXNlIHRoZSBwcm9wIFwiYnNTaXplXCIgaW5zdGVhZCBvZiB0aGUgXCJzaXplXCIgdG8gYm9vdHN0cmFwJ3MgaW5wdXQgc2l6aW5nLiIpOwogICAgCQkJCQkkJGludmFsaWRhdGUoMTQsIGJzU2l6ZSA9IHNpemUpOwogICAgCQkJCQkkJGludmFsaWRhdGUoMTMsIHNpemUgPSB1bmRlZmluZWQpOwogICAgCQkJCX0KCiAgICAJCQkJJCRpbnZhbGlkYXRlKDksIGNsYXNzZXMgPSBjbGFzc25hbWVzKGNsYXNzTmFtZSwgaW52YWxpZCAmJiAiaXMtaW52YWxpZCIsIHZhbGlkICYmICJpcy12YWxpZCIsIGJzU2l6ZSA/IGBmb3JtLWNvbnRyb2wtJHtic1NpemV9YCA6IGZhbHNlLCBmb3JtQ29udHJvbENsYXNzKSk7CiAgICAJCQl9CiAgICAJCX0KICAgIAl9OwoKICAgIAlyZXR1cm4gWwogICAgCQljaGVja2VkLAogICAgCQl2YWx1ZSwKICAgIAkJZmlsZXMsCiAgICAJCXR5cGUsCiAgICAJCXJlYWRvbmx5LAogICAgCQltdWx0aXBsZSwKICAgIAkJbmFtZSwKICAgIAkJcGxhY2Vob2xkZXIsCiAgICAJCWRpc2FibGVkLAogICAgCQljbGFzc2VzLAogICAgCQl0YWcsCiAgICAJCWhhbmRsZUlucHV0LAogICAgCQkkJHJlc3RQcm9wcywKICAgIAkJc2l6ZSwKICAgIAkJYnNTaXplLAogICAgCQljbGFzc05hbWUsCiAgICAJCWNvbG9yLAogICAgCQl2YWxpZCwKICAgIAkJaW52YWxpZCwKICAgIAkJcGxhaW50ZXh0LAogICAgCQlhZGRvbiwKICAgIAkJJCRzY29wZSwKICAgIAkJc2xvdHMsCiAgICAJCWNoYW5nZV9oYW5kbGVyLAogICAgCQlibHVyX2hhbmRsZXIsCiAgICAJCWZvY3VzX2hhbmRsZXIsCiAgICAJCWtleWRvd25faGFuZGxlciwKICAgIAkJa2V5cHJlc3NfaGFuZGxlciwKICAgIAkJa2V5dXBfaGFuZGxlciwKICAgIAkJaW5wdXRfaGFuZGxlciwKICAgIAkJY2hhbmdlX2hhbmRsZXJfMSwKICAgIAkJYmx1cl9oYW5kbGVyXzEsCiAgICAJCWZvY3VzX2hhbmRsZXJfMSwKICAgIAkJa2V5ZG93bl9oYW5kbGVyXzEsCiAgICAJCWtleXByZXNzX2hhbmRsZXJfMSwKICAgIAkJa2V5dXBfaGFuZGxlcl8xLAogICAgCQlpbnB1dF9oYW5kbGVyXzEsCiAgICAJCWNoYW5nZV9oYW5kbGVyXzIsCiAgICAJCWJsdXJfaGFuZGxlcl8yLAogICAgCQlmb2N1c19oYW5kbGVyXzIsCiAgICAJCWtleWRvd25faGFuZGxlcl8yLAogICAgCQlrZXlwcmVzc19oYW5kbGVyXzIsCiAgICAJCWtleXVwX2hhbmRsZXJfMiwKICAgIAkJaW5wdXRfaGFuZGxlcl8yLAogICAgCQljaGFuZ2VfaGFuZGxlcl8zLAogICAgCQlibHVyX2hhbmRsZXJfMywKICAgIAkJZm9jdXNfaGFuZGxlcl8zLAogICAgCQlrZXlkb3duX2hhbmRsZXJfMywKICAgIAkJa2V5cHJlc3NfaGFuZGxlcl8zLAogICAgCQlrZXl1cF9oYW5kbGVyXzMsCiAgICAJCWlucHV0X2hhbmRsZXJfMywKICAgIAkJaW5wdXRfaGFuZGxlcl80LAogICAgCQlibHVyX2hhbmRsZXJfNCwKICAgIAkJZm9jdXNfaGFuZGxlcl80LAogICAgCQlrZXlkb3duX2hhbmRsZXJfNCwKICAgIAkJa2V5cHJlc3NfaGFuZGxlcl80LAogICAgCQlrZXl1cF9oYW5kbGVyXzQsCiAgICAJCWNoYW5nZV9oYW5kbGVyXzQsCiAgICAJCWNoYW5nZV9oYW5kbGVyXzUsCiAgICAJCWJsdXJfaGFuZGxlcl81LAogICAgCQlmb2N1c19oYW5kbGVyXzUsCiAgICAJCWtleWRvd25faGFuZGxlcl81LAogICAgCQlrZXlwcmVzc19oYW5kbGVyXzUsCiAgICAJCWtleXVwX2hhbmRsZXJfNSwKICAgIAkJaW5wdXRfaGFuZGxlcl81LAogICAgCQljaGFuZ2VfaGFuZGxlcl82LAogICAgCQlibHVyX2hhbmRsZXJfNiwKICAgIAkJZm9jdXNfaGFuZGxlcl82LAogICAgCQlrZXlkb3duX2hhbmRsZXJfNiwKICAgIAkJa2V5cHJlc3NfaGFuZGxlcl82LAogICAgCQlrZXl1cF9oYW5kbGVyXzYsCiAgICAJCWlucHV0X2hhbmRsZXJfNiwKICAgIAkJY2hhbmdlX2hhbmRsZXJfNywKICAgIAkJYmx1cl9oYW5kbGVyXzcsCiAgICAJCWZvY3VzX2hhbmRsZXJfNywKICAgIAkJa2V5ZG93bl9oYW5kbGVyXzcsCiAgICAJCWtleXByZXNzX2hhbmRsZXJfNywKICAgIAkJa2V5dXBfaGFuZGxlcl83LAogICAgCQlpbnB1dF9oYW5kbGVyXzcsCiAgICAJCWNoYW5nZV9oYW5kbGVyXzgsCiAgICAJCWJsdXJfaGFuZGxlcl84LAogICAgCQlmb2N1c19oYW5kbGVyXzgsCiAgICAJCWtleWRvd25faGFuZGxlcl84LAogICAgCQlrZXlwcmVzc19oYW5kbGVyXzgsCiAgICAJCWtleXVwX2hhbmRsZXJfOCwKICAgIAkJaW5wdXRfaGFuZGxlcl84LAogICAgCQljaGFuZ2VfaGFuZGxlcl85LAogICAgCQlibHVyX2hhbmRsZXJfOSwKICAgIAkJZm9jdXNfaGFuZGxlcl85LAogICAgCQlrZXlkb3duX2hhbmRsZXJfOSwKICAgIAkJa2V5cHJlc3NfaGFuZGxlcl85LAogICAgCQlrZXl1cF9oYW5kbGVyXzksCiAgICAJCWlucHV0X2hhbmRsZXJfOSwKICAgIAkJY2hhbmdlX2hhbmRsZXJfMTAsCiAgICAJCWJsdXJfaGFuZGxlcl8xMCwKICAgIAkJZm9jdXNfaGFuZGxlcl8xMCwKICAgIAkJa2V5ZG93bl9oYW5kbGVyXzEwLAogICAgCQlrZXlwcmVzc19oYW5kbGVyXzEwLAogICAgCQlrZXl1cF9oYW5kbGVyXzEwLAogICAgCQlpbnB1dF9oYW5kbGVyXzEwLAogICAgCQljaGFuZ2VfaGFuZGxlcl8xMSwKICAgIAkJYmx1cl9oYW5kbGVyXzExLAogICAgCQlmb2N1c19oYW5kbGVyXzExLAogICAgCQlrZXlkb3duX2hhbmRsZXJfMTEsCiAgICAJCWtleXByZXNzX2hhbmRsZXJfMTEsCiAgICAJCWtleXVwX2hhbmRsZXJfMTEsCiAgICAJCWlucHV0X2hhbmRsZXJfMTEsCiAgICAJCWNoYW5nZV9oYW5kbGVyXzEyLAogICAgCQlibHVyX2hhbmRsZXJfMTIsCiAgICAJCWZvY3VzX2hhbmRsZXJfMTIsCiAgICAJCWtleWRvd25faGFuZGxlcl8xMiwKICAgIAkJa2V5cHJlc3NfaGFuZGxlcl8xMiwKICAgIAkJa2V5dXBfaGFuZGxlcl8xMiwKICAgIAkJaW5wdXRfaGFuZGxlcl8xMiwKICAgIAkJY2hhbmdlX2hhbmRsZXJfMTMsCiAgICAJCWJsdXJfaGFuZGxlcl8xMywKICAgIAkJZm9jdXNfaGFuZGxlcl8xMywKICAgIAkJa2V5ZG93bl9oYW5kbGVyXzEzLAogICAgCQlrZXlwcmVzc19oYW5kbGVyXzEzLAogICAgCQlrZXl1cF9oYW5kbGVyXzEzLAogICAgCQlpbnB1dF9oYW5kbGVyXzEzLAogICAgCQlibHVyX2hhbmRsZXJfMTQsCiAgICAJCWZvY3VzX2hhbmRsZXJfMTQsCiAgICAJCWtleWRvd25faGFuZGxlcl8xNCwKICAgIAkJa2V5cHJlc3NfaGFuZGxlcl8xNCwKICAgIAkJa2V5dXBfaGFuZGxlcl8xNCwKICAgIAkJY2hhbmdlX2hhbmRsZXJfMTQsCiAgICAJCWJsdXJfaGFuZGxlcl8xNSwKICAgIAkJZm9jdXNfaGFuZGxlcl8xNSwKICAgIAkJa2V5ZG93bl9oYW5kbGVyXzE1LAogICAgCQlrZXlwcmVzc19oYW5kbGVyXzE1LAogICAgCQlrZXl1cF9oYW5kbGVyXzE1LAogICAgCQlpbnB1dF9oYW5kbGVyXzE0LAogICAgCQlibHVyX2hhbmRsZXJfMTYsCiAgICAJCWZvY3VzX2hhbmRsZXJfMTYsCiAgICAJCWNoYW5nZV9oYW5kbGVyXzE1LAogICAgCQlpbnB1dF9oYW5kbGVyXzE1LAogICAgCQlpbnB1dF9pbnB1dF9oYW5kbGVyLAogICAgCQlpbnB1dF9pbnB1dF9oYW5kbGVyXzEsCiAgICAJCWlucHV0X2lucHV0X2hhbmRsZXJfMiwKICAgIAkJaW5wdXRfY2hhbmdlX2hhbmRsZXIsCiAgICAJCWlucHV0X2NoYW5nZV9oYW5kbGVyXzEsCiAgICAJCWlucHV0X2NoYW5nZV9oYW5kbGVyXzIsCiAgICAJCWlucHV0X2lucHV0X2hhbmRsZXJfMywKICAgIAkJaW5wdXRfaW5wdXRfaGFuZGxlcl80LAogICAgCQlpbnB1dF9pbnB1dF9oYW5kbGVyXzUsCiAgICAJCWlucHV0X2lucHV0X2hhbmRsZXJfNiwKICAgIAkJaW5wdXRfaW5wdXRfaGFuZGxlcl83LAogICAgCQlpbnB1dF9pbnB1dF9oYW5kbGVyXzgsCiAgICAJCWlucHV0X2NoYW5nZV9pbnB1dF9oYW5kbGVyLAogICAgCQlpbnB1dF9pbnB1dF9oYW5kbGVyXzksCiAgICAJCXRleHRhcmVhX2lucHV0X2hhbmRsZXIsCiAgICAJCXNlbGVjdF9jaGFuZ2VfaGFuZGxlcgogICAgCV07CiAgICB9CgogICAgY2xhc3MgSW5wdXQgZXh0ZW5kcyBTdmVsdGVDb21wb25lbnREZXYgewogICAgCWNvbnN0cnVjdG9yKG9wdGlvbnMpIHsKICAgIAkJc3VwZXIob3B0aW9ucyk7CgogICAgCQlpbml0KAogICAgCQkJdGhpcywKICAgIAkJCW9wdGlvbnMsCiAgICAJCQlpbnN0YW5jZSQ2LAogICAgCQkJY3JlYXRlX2ZyYWdtZW50JDYsCiAgICAJCQlzYWZlX25vdF9lcXVhbCwKICAgIAkJCXsKICAgIAkJCQljbGFzczogMTUsCiAgICAJCQkJdHlwZTogMywKICAgIAkJCQlzaXplOiAxMywKICAgIAkJCQlic1NpemU6IDE0LAogICAgCQkJCWNvbG9yOiAxNiwKICAgIAkJCQljaGVja2VkOiAwLAogICAgCQkJCXZhbGlkOiAxNywKICAgIAkJCQlpbnZhbGlkOiAxOCwKICAgIAkJCQlwbGFpbnRleHQ6IDE5LAogICAgCQkJCWFkZG9uOiAyMCwKICAgIAkJCQl2YWx1ZTogMSwKICAgIAkJCQlmaWxlczogMiwKICAgIAkJCQlyZWFkb25seTogNCwKICAgIAkJCQltdWx0aXBsZTogNSwKICAgIAkJCQluYW1lOiA2LAogICAgCQkJCXBsYWNlaG9sZGVyOiA3LAogICAgCQkJCWRpc2FibGVkOiA4CiAgICAJCQl9LAogICAgCQkJWy0xLCAtMSwgLTEsIC0xLCAtMV0KICAgIAkJKTsKCiAgICAJCWRpc3BhdGNoX2RldigiU3ZlbHRlUmVnaXN0ZXJDb21wb25lbnQiLCB7CiAgICAJCQljb21wb25lbnQ6IHRoaXMsCiAgICAJCQl0YWdOYW1lOiAiSW5wdXQiLAogICAgCQkJb3B0aW9ucywKICAgIAkJCWlkOiBjcmVhdGVfZnJhZ21lbnQkNi5uYW1lCiAgICAJCX0pOwogICAgCX0KCiAgICAJZ2V0IGNsYXNzKCkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxJbnB1dD46IFByb3BzIGNhbm5vdCBiZSByZWFkIGRpcmVjdGx5IGZyb20gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCXNldCBjbGFzcyh2YWx1ZSkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxJbnB1dD46IFByb3BzIGNhbm5vdCBiZSBzZXQgZGlyZWN0bHkgb24gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCWdldCB0eXBlKCkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxJbnB1dD46IFByb3BzIGNhbm5vdCBiZSByZWFkIGRpcmVjdGx5IGZyb20gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCXNldCB0eXBlKHZhbHVlKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPElucHV0PjogUHJvcHMgY2Fubm90IGJlIHNldCBkaXJlY3RseSBvbiB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJZ2V0IHNpemUoKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPElucHV0PjogUHJvcHMgY2Fubm90IGJlIHJlYWQgZGlyZWN0bHkgZnJvbSB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJc2V0IHNpemUodmFsdWUpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8SW5wdXQ+OiBQcm9wcyBjYW5ub3QgYmUgc2V0IGRpcmVjdGx5IG9uIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlnZXQgYnNTaXplKCkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxJbnB1dD46IFByb3BzIGNhbm5vdCBiZSByZWFkIGRpcmVjdGx5IGZyb20gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCXNldCBic1NpemUodmFsdWUpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8SW5wdXQ+OiBQcm9wcyBjYW5ub3QgYmUgc2V0IGRpcmVjdGx5IG9uIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlnZXQgY29sb3IoKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPElucHV0PjogUHJvcHMgY2Fubm90IGJlIHJlYWQgZGlyZWN0bHkgZnJvbSB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJc2V0IGNvbG9yKHZhbHVlKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPElucHV0PjogUHJvcHMgY2Fubm90IGJlIHNldCBkaXJlY3RseSBvbiB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJZ2V0IGNoZWNrZWQoKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPElucHV0PjogUHJvcHMgY2Fubm90IGJlIHJlYWQgZGlyZWN0bHkgZnJvbSB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJc2V0IGNoZWNrZWQodmFsdWUpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8SW5wdXQ+OiBQcm9wcyBjYW5ub3QgYmUgc2V0IGRpcmVjdGx5IG9uIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlnZXQgdmFsaWQoKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPElucHV0PjogUHJvcHMgY2Fubm90IGJlIHJlYWQgZGlyZWN0bHkgZnJvbSB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJc2V0IHZhbGlkKHZhbHVlKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPElucHV0PjogUHJvcHMgY2Fubm90IGJlIHNldCBkaXJlY3RseSBvbiB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJZ2V0IGludmFsaWQoKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPElucHV0PjogUHJvcHMgY2Fubm90IGJlIHJlYWQgZGlyZWN0bHkgZnJvbSB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJc2V0IGludmFsaWQodmFsdWUpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8SW5wdXQ+OiBQcm9wcyBjYW5ub3QgYmUgc2V0IGRpcmVjdGx5IG9uIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlnZXQgcGxhaW50ZXh0KCkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxJbnB1dD46IFByb3BzIGNhbm5vdCBiZSByZWFkIGRpcmVjdGx5IGZyb20gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCXNldCBwbGFpbnRleHQodmFsdWUpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8SW5wdXQ+OiBQcm9wcyBjYW5ub3QgYmUgc2V0IGRpcmVjdGx5IG9uIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlnZXQgYWRkb24oKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPElucHV0PjogUHJvcHMgY2Fubm90IGJlIHJlYWQgZGlyZWN0bHkgZnJvbSB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJc2V0IGFkZG9uKHZhbHVlKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPElucHV0PjogUHJvcHMgY2Fubm90IGJlIHNldCBkaXJlY3RseSBvbiB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJZ2V0IHZhbHVlKCkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxJbnB1dD46IFByb3BzIGNhbm5vdCBiZSByZWFkIGRpcmVjdGx5IGZyb20gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCXNldCB2YWx1ZSh2YWx1ZSkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxJbnB1dD46IFByb3BzIGNhbm5vdCBiZSBzZXQgZGlyZWN0bHkgb24gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCWdldCBmaWxlcygpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8SW5wdXQ+OiBQcm9wcyBjYW5ub3QgYmUgcmVhZCBkaXJlY3RseSBmcm9tIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlzZXQgZmlsZXModmFsdWUpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8SW5wdXQ+OiBQcm9wcyBjYW5ub3QgYmUgc2V0IGRpcmVjdGx5IG9uIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlnZXQgcmVhZG9ubHkoKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPElucHV0PjogUHJvcHMgY2Fubm90IGJlIHJlYWQgZGlyZWN0bHkgZnJvbSB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJc2V0IHJlYWRvbmx5KHZhbHVlKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPElucHV0PjogUHJvcHMgY2Fubm90IGJlIHNldCBkaXJlY3RseSBvbiB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJZ2V0IG11bHRpcGxlKCkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxJbnB1dD46IFByb3BzIGNhbm5vdCBiZSByZWFkIGRpcmVjdGx5IGZyb20gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCXNldCBtdWx0aXBsZSh2YWx1ZSkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxJbnB1dD46IFByb3BzIGNhbm5vdCBiZSBzZXQgZGlyZWN0bHkgb24gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCWdldCBuYW1lKCkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxJbnB1dD46IFByb3BzIGNhbm5vdCBiZSByZWFkIGRpcmVjdGx5IGZyb20gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCXNldCBuYW1lKHZhbHVlKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPElucHV0PjogUHJvcHMgY2Fubm90IGJlIHNldCBkaXJlY3RseSBvbiB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJZ2V0IHBsYWNlaG9sZGVyKCkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxJbnB1dD46IFByb3BzIGNhbm5vdCBiZSByZWFkIGRpcmVjdGx5IGZyb20gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCXNldCBwbGFjZWhvbGRlcih2YWx1ZSkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxJbnB1dD46IFByb3BzIGNhbm5vdCBiZSBzZXQgZGlyZWN0bHkgb24gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCWdldCBkaXNhYmxlZCgpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8SW5wdXQ+OiBQcm9wcyBjYW5ub3QgYmUgcmVhZCBkaXJlY3RseSBmcm9tIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlzZXQgZGlzYWJsZWQodmFsdWUpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8SW5wdXQ+OiBQcm9wcyBjYW5ub3QgYmUgc2V0IGRpcmVjdGx5IG9uIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQogICAgfQoKICAgIC8qIG5vZGVfbW9kdWxlcy9zdmVsdGVzdHJhcC9zcmMvTGFiZWwuc3ZlbHRlIGdlbmVyYXRlZCBieSBTdmVsdGUgdjMuMzEuMiAqLwogICAgY29uc3QgZmlsZSQ3ID0gIm5vZGVfbW9kdWxlcy9zdmVsdGVzdHJhcC9zcmMvTGFiZWwuc3ZlbHRlIjsKCiAgICBmdW5jdGlvbiBjcmVhdGVfZnJhZ21lbnQkNyhjdHgpIHsKICAgIAlsZXQgbGFiZWw7CiAgICAJbGV0IGN1cnJlbnQ7CiAgICAJY29uc3QgZGVmYXVsdF9zbG90X3RlbXBsYXRlID0gLyojc2xvdHMqLyBjdHhbMTRdLmRlZmF1bHQ7CiAgICAJY29uc3QgZGVmYXVsdF9zbG90ID0gY3JlYXRlX3Nsb3QoZGVmYXVsdF9zbG90X3RlbXBsYXRlLCBjdHgsIC8qJCRzY29wZSovIGN0eFsxM10sIG51bGwpOwoKICAgIAlsZXQgbGFiZWxfbGV2ZWxzID0gWwogICAgCQkvKiQkcmVzdFByb3BzKi8gY3R4WzJdLAogICAgCQl7IGNsYXNzOiAvKmNsYXNzZXMqLyBjdHhbMV0gfSwKICAgIAkJeyBmb3I6IC8qZm9yZSovIGN0eFswXSB9CiAgICAJXTsKCiAgICAJbGV0IGxhYmVsX2RhdGEgPSB7fTsKCiAgICAJZm9yIChsZXQgaSA9IDA7IGkgPCBsYWJlbF9sZXZlbHMubGVuZ3RoOyBpICs9IDEpIHsKICAgIAkJbGFiZWxfZGF0YSA9IGFzc2lnbihsYWJlbF9kYXRhLCBsYWJlbF9sZXZlbHNbaV0pOwogICAgCX0KCiAgICAJY29uc3QgYmxvY2sgPSB7CiAgICAJCWM6IGZ1bmN0aW9uIGNyZWF0ZSgpIHsKICAgIAkJCWxhYmVsID0gZWxlbWVudCgibGFiZWwiKTsKICAgIAkJCWlmIChkZWZhdWx0X3Nsb3QpIGRlZmF1bHRfc2xvdC5jKCk7CiAgICAJCQlzZXRfYXR0cmlidXRlcyhsYWJlbCwgbGFiZWxfZGF0YSk7CiAgICAJCQlhZGRfbG9jYXRpb24obGFiZWwsIGZpbGUkNywgNjksIDAsIDE2MjUpOwogICAgCQl9LAogICAgCQlsOiBmdW5jdGlvbiBjbGFpbShub2RlcykgewogICAgCQkJdGhyb3cgbmV3IEVycm9yKCJvcHRpb25zLmh5ZHJhdGUgb25seSB3b3JrcyBpZiB0aGUgY29tcG9uZW50IHdhcyBjb21waWxlZCB3aXRoIHRoZSBgaHlkcmF0YWJsZTogdHJ1ZWAgb3B0aW9uIik7CiAgICAJCX0sCiAgICAJCW06IGZ1bmN0aW9uIG1vdW50KHRhcmdldCwgYW5jaG9yKSB7CiAgICAJCQlpbnNlcnRfZGV2KHRhcmdldCwgbGFiZWwsIGFuY2hvcik7CgogICAgCQkJaWYgKGRlZmF1bHRfc2xvdCkgewogICAgCQkJCWRlZmF1bHRfc2xvdC5tKGxhYmVsLCBudWxsKTsKICAgIAkJCX0KCiAgICAJCQljdXJyZW50ID0gdHJ1ZTsKICAgIAkJfSwKICAgIAkJcDogZnVuY3Rpb24gdXBkYXRlKGN0eCwgW2RpcnR5XSkgewogICAgCQkJaWYgKGRlZmF1bHRfc2xvdCkgewogICAgCQkJCWlmIChkZWZhdWx0X3Nsb3QucCAmJiBkaXJ0eSAmIC8qJCRzY29wZSovIDgxOTIpIHsKICAgIAkJCQkJdXBkYXRlX3Nsb3QoZGVmYXVsdF9zbG90LCBkZWZhdWx0X3Nsb3RfdGVtcGxhdGUsIGN0eCwgLyokJHNjb3BlKi8gY3R4WzEzXSwgZGlydHksIG51bGwsIG51bGwpOwogICAgCQkJCX0KICAgIAkJCX0KCiAgICAJCQlzZXRfYXR0cmlidXRlcyhsYWJlbCwgbGFiZWxfZGF0YSA9IGdldF9zcHJlYWRfdXBkYXRlKGxhYmVsX2xldmVscywgWwogICAgCQkJCWRpcnR5ICYgLyokJHJlc3RQcm9wcyovIDQgJiYgLyokJHJlc3RQcm9wcyovIGN0eFsyXSwKICAgIAkJCQkoIWN1cnJlbnQgfHwgZGlydHkgJiAvKmNsYXNzZXMqLyAyKSAmJiB7IGNsYXNzOiAvKmNsYXNzZXMqLyBjdHhbMV0gfSwKICAgIAkJCQkoIWN1cnJlbnQgfHwgZGlydHkgJiAvKmZvcmUqLyAxKSAmJiB7IGZvcjogLypmb3JlKi8gY3R4WzBdIH0KICAgIAkJCV0pKTsKICAgIAkJfSwKICAgIAkJaTogZnVuY3Rpb24gaW50cm8obG9jYWwpIHsKICAgIAkJCWlmIChjdXJyZW50KSByZXR1cm47CiAgICAJCQl0cmFuc2l0aW9uX2luKGRlZmF1bHRfc2xvdCwgbG9jYWwpOwogICAgCQkJY3VycmVudCA9IHRydWU7CiAgICAJCX0sCiAgICAJCW86IGZ1bmN0aW9uIG91dHJvKGxvY2FsKSB7CiAgICAJCQl0cmFuc2l0aW9uX291dChkZWZhdWx0X3Nsb3QsIGxvY2FsKTsKICAgIAkJCWN1cnJlbnQgPSBmYWxzZTsKICAgIAkJfSwKICAgIAkJZDogZnVuY3Rpb24gZGVzdHJveShkZXRhY2hpbmcpIHsKICAgIAkJCWlmIChkZXRhY2hpbmcpIGRldGFjaF9kZXYobGFiZWwpOwogICAgCQkJaWYgKGRlZmF1bHRfc2xvdCkgZGVmYXVsdF9zbG90LmQoZGV0YWNoaW5nKTsKICAgIAkJfQogICAgCX07CgogICAgCWRpc3BhdGNoX2RldigiU3ZlbHRlUmVnaXN0ZXJCbG9jayIsIHsKICAgIAkJYmxvY2ssCiAgICAJCWlkOiBjcmVhdGVfZnJhZ21lbnQkNy5uYW1lLAogICAgCQl0eXBlOiAiY29tcG9uZW50IiwKICAgIAkJc291cmNlOiAiIiwKICAgIAkJY3R4CiAgICAJfSk7CgogICAgCXJldHVybiBibG9jazsKICAgIH0KCiAgICBmdW5jdGlvbiBpbnN0YW5jZSQ3KCQkc2VsZiwgJCRwcm9wcywgJCRpbnZhbGlkYXRlKSB7CiAgICAJbGV0IGNsYXNzZXM7CiAgICAJY29uc3Qgb21pdF9wcm9wc19uYW1lcyA9IFsiY2xhc3MiLCJoaWRkZW4iLCJjaGVjayIsInNpemUiLCJmb3IiLCJ4cyIsInNtIiwibWQiLCJsZyIsInhsIiwid2lkdGhzIl07CiAgICAJbGV0ICQkcmVzdFByb3BzID0gY29tcHV0ZV9yZXN0X3Byb3BzKCQkcHJvcHMsIG9taXRfcHJvcHNfbmFtZXMpOwogICAgCWxldCB7ICQkc2xvdHM6IHNsb3RzID0ge30sICQkc2NvcGUgfSA9ICQkcHJvcHM7CiAgICAJdmFsaWRhdGVfc2xvdHMoIkxhYmVsIiwgc2xvdHMsIFsnZGVmYXVsdCddKTsKICAgIAlsZXQgeyBjbGFzczogY2xhc3NOYW1lID0gIiIgfSA9ICQkcHJvcHM7CiAgICAJbGV0IHsgaGlkZGVuID0gZmFsc2UgfSA9ICQkcHJvcHM7CiAgICAJbGV0IHsgY2hlY2sgPSBmYWxzZSB9ID0gJCRwcm9wczsKICAgIAlsZXQgeyBzaXplID0gIiIgfSA9ICQkcHJvcHM7CiAgICAJbGV0IHsgZm9yOiBmb3JlID0gbnVsbCB9ID0gJCRwcm9wczsKICAgIAlsZXQgeyB4cyA9ICIiIH0gPSAkJHByb3BzOwogICAgCWxldCB7IHNtID0gIiIgfSA9ICQkcHJvcHM7CiAgICAJbGV0IHsgbWQgPSAiIiB9ID0gJCRwcm9wczsKICAgIAlsZXQgeyBsZyA9ICIiIH0gPSAkJHByb3BzOwogICAgCWxldCB7IHhsID0gIiIgfSA9ICQkcHJvcHM7CiAgICAJY29uc3QgY29sV2lkdGhzID0geyB4cywgc20sIG1kLCBsZywgeGwgfTsKICAgIAlsZXQgeyB3aWR0aHMgPSBPYmplY3Qua2V5cyhjb2xXaWR0aHMpIH0gPSAkJHByb3BzOwogICAgCWNvbnN0IGNvbENsYXNzZXMgPSBbXTsKCiAgICAJd2lkdGhzLmZvckVhY2goY29sV2lkdGggPT4gewogICAgCQlsZXQgY29sdW1uUHJvcCA9ICQkcHJvcHNbY29sV2lkdGhdOwoKICAgIAkJaWYgKCFjb2x1bW5Qcm9wICYmIGNvbHVtblByb3AgIT09ICIiKSB7CiAgICAJCQlyZXR1cm47CiAgICAJCX0KCiAgICAJCWNvbnN0IGlzWHMgPSBjb2xXaWR0aCA9PT0gInhzIjsKICAgIAkJbGV0IGNvbENsYXNzOwoKICAgIAkJaWYgKGlzT2JqZWN0KGNvbHVtblByb3ApKSB7CiAgICAJCQljb25zdCBjb2xTaXplSW50ZXJmaXggPSBpc1hzID8gIi0iIDogYC0ke2NvbFdpZHRofS1gOwogICAgCQkJY29sQ2xhc3MgPSBnZXRDb2x1bW5TaXplQ2xhc3MoaXNYcywgY29sV2lkdGgsIGNvbHVtblByb3Auc2l6ZSk7CgogICAgCQkJY29sQ2xhc3Nlcy5wdXNoKGNsYXNzbmFtZXMoewogICAgCQkJCVtjb2xDbGFzc106IGNvbHVtblByb3Auc2l6ZSB8fCBjb2x1bW5Qcm9wLnNpemUgPT09ICIiLAogICAgCQkJCVtgb3JkZXIke2NvbFNpemVJbnRlcmZpeH0ke2NvbHVtblByb3Aub3JkZXJ9YF06IGNvbHVtblByb3Aub3JkZXIgfHwgY29sdW1uUHJvcC5vcmRlciA9PT0gMCwKICAgIAkJCQlbYG9mZnNldCR7Y29sU2l6ZUludGVyZml4fSR7Y29sdW1uUHJvcC5vZmZzZXR9YF06IGNvbHVtblByb3Aub2Zmc2V0IHx8IGNvbHVtblByb3Aub2Zmc2V0ID09PSAwCiAgICAJCQl9KSk7CiAgICAJCX0gZWxzZSB7CiAgICAJCQljb2xDbGFzcyA9IGdldENvbHVtblNpemVDbGFzcyhpc1hzLCBjb2xXaWR0aCwgY29sdW1uUHJvcCk7CiAgICAJCQljb2xDbGFzc2VzLnB1c2goY29sQ2xhc3MpOwogICAgCQl9CiAgICAJfSk7CgogICAgCSQkc2VsZi4kJHNldCA9ICQkbmV3X3Byb3BzID0+IHsKICAgIAkJJCRpbnZhbGlkYXRlKDE3LCAkJHByb3BzID0gYXNzaWduKGFzc2lnbih7fSwgJCRwcm9wcyksIGV4Y2x1ZGVfaW50ZXJuYWxfcHJvcHMoJCRuZXdfcHJvcHMpKSk7CiAgICAJCSQkaW52YWxpZGF0ZSgyLCAkJHJlc3RQcm9wcyA9IGNvbXB1dGVfcmVzdF9wcm9wcygkJHByb3BzLCBvbWl0X3Byb3BzX25hbWVzKSk7CiAgICAJCWlmICgiY2xhc3MiIGluICQkbmV3X3Byb3BzKSAkJGludmFsaWRhdGUoMywgY2xhc3NOYW1lID0gJCRuZXdfcHJvcHMuY2xhc3MpOwogICAgCQlpZiAoImhpZGRlbiIgaW4gJCRuZXdfcHJvcHMpICQkaW52YWxpZGF0ZSg0LCBoaWRkZW4gPSAkJG5ld19wcm9wcy5oaWRkZW4pOwogICAgCQlpZiAoImNoZWNrIiBpbiAkJG5ld19wcm9wcykgJCRpbnZhbGlkYXRlKDUsIGNoZWNrID0gJCRuZXdfcHJvcHMuY2hlY2spOwogICAgCQlpZiAoInNpemUiIGluICQkbmV3X3Byb3BzKSAkJGludmFsaWRhdGUoNiwgc2l6ZSA9ICQkbmV3X3Byb3BzLnNpemUpOwogICAgCQlpZiAoImZvciIgaW4gJCRuZXdfcHJvcHMpICQkaW52YWxpZGF0ZSgwLCBmb3JlID0gJCRuZXdfcHJvcHMuZm9yKTsKICAgIAkJaWYgKCJ4cyIgaW4gJCRuZXdfcHJvcHMpICQkaW52YWxpZGF0ZSg3LCB4cyA9ICQkbmV3X3Byb3BzLnhzKTsKICAgIAkJaWYgKCJzbSIgaW4gJCRuZXdfcHJvcHMpICQkaW52YWxpZGF0ZSg4LCBzbSA9ICQkbmV3X3Byb3BzLnNtKTsKICAgIAkJaWYgKCJtZCIgaW4gJCRuZXdfcHJvcHMpICQkaW52YWxpZGF0ZSg5LCBtZCA9ICQkbmV3X3Byb3BzLm1kKTsKICAgIAkJaWYgKCJsZyIgaW4gJCRuZXdfcHJvcHMpICQkaW52YWxpZGF0ZSgxMCwgbGcgPSAkJG5ld19wcm9wcy5sZyk7CiAgICAJCWlmICgieGwiIGluICQkbmV3X3Byb3BzKSAkJGludmFsaWRhdGUoMTEsIHhsID0gJCRuZXdfcHJvcHMueGwpOwogICAgCQlpZiAoIndpZHRocyIgaW4gJCRuZXdfcHJvcHMpICQkaW52YWxpZGF0ZSgxMiwgd2lkdGhzID0gJCRuZXdfcHJvcHMud2lkdGhzKTsKICAgIAkJaWYgKCIkJHNjb3BlIiBpbiAkJG5ld19wcm9wcykgJCRpbnZhbGlkYXRlKDEzLCAkJHNjb3BlID0gJCRuZXdfcHJvcHMuJCRzY29wZSk7CiAgICAJfTsKCiAgICAJJCRzZWxmLiRjYXB0dXJlX3N0YXRlID0gKCkgPT4gKHsKICAgIAkJY2xhc3NuYW1lcywKICAgIAkJZ2V0Q29sdW1uU2l6ZUNsYXNzLAogICAgCQlpc09iamVjdCwKICAgIAkJY2xhc3NOYW1lLAogICAgCQloaWRkZW4sCiAgICAJCWNoZWNrLAogICAgCQlzaXplLAogICAgCQlmb3JlLAogICAgCQl4cywKICAgIAkJc20sCiAgICAJCW1kLAogICAgCQlsZywKICAgIAkJeGwsCiAgICAJCWNvbFdpZHRocywKICAgIAkJd2lkdGhzLAogICAgCQljb2xDbGFzc2VzLAogICAgCQljbGFzc2VzCiAgICAJfSk7CgogICAgCSQkc2VsZi4kaW5qZWN0X3N0YXRlID0gJCRuZXdfcHJvcHMgPT4gewogICAgCQkkJGludmFsaWRhdGUoMTcsICQkcHJvcHMgPSBhc3NpZ24oYXNzaWduKHt9LCAkJHByb3BzKSwgJCRuZXdfcHJvcHMpKTsKICAgIAkJaWYgKCJjbGFzc05hbWUiIGluICQkcHJvcHMpICQkaW52YWxpZGF0ZSgzLCBjbGFzc05hbWUgPSAkJG5ld19wcm9wcy5jbGFzc05hbWUpOwogICAgCQlpZiAoImhpZGRlbiIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDQsIGhpZGRlbiA9ICQkbmV3X3Byb3BzLmhpZGRlbik7CiAgICAJCWlmICgiY2hlY2siIGluICQkcHJvcHMpICQkaW52YWxpZGF0ZSg1LCBjaGVjayA9ICQkbmV3X3Byb3BzLmNoZWNrKTsKICAgIAkJaWYgKCJzaXplIiBpbiAkJHByb3BzKSAkJGludmFsaWRhdGUoNiwgc2l6ZSA9ICQkbmV3X3Byb3BzLnNpemUpOwogICAgCQlpZiAoImZvcmUiIGluICQkcHJvcHMpICQkaW52YWxpZGF0ZSgwLCBmb3JlID0gJCRuZXdfcHJvcHMuZm9yZSk7CiAgICAJCWlmICgieHMiIGluICQkcHJvcHMpICQkaW52YWxpZGF0ZSg3LCB4cyA9ICQkbmV3X3Byb3BzLnhzKTsKICAgIAkJaWYgKCJzbSIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDgsIHNtID0gJCRuZXdfcHJvcHMuc20pOwogICAgCQlpZiAoIm1kIiBpbiAkJHByb3BzKSAkJGludmFsaWRhdGUoOSwgbWQgPSAkJG5ld19wcm9wcy5tZCk7CiAgICAJCWlmICgibGciIGluICQkcHJvcHMpICQkaW52YWxpZGF0ZSgxMCwgbGcgPSAkJG5ld19wcm9wcy5sZyk7CiAgICAJCWlmICgieGwiIGluICQkcHJvcHMpICQkaW52YWxpZGF0ZSgxMSwgeGwgPSAkJG5ld19wcm9wcy54bCk7CiAgICAJCWlmICgid2lkdGhzIiBpbiAkJHByb3BzKSAkJGludmFsaWRhdGUoMTIsIHdpZHRocyA9ICQkbmV3X3Byb3BzLndpZHRocyk7CiAgICAJCWlmICgiY2xhc3NlcyIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDEsIGNsYXNzZXMgPSAkJG5ld19wcm9wcy5jbGFzc2VzKTsKICAgIAl9OwoKICAgIAlpZiAoJCRwcm9wcyAmJiAiJCRpbmplY3QiIGluICQkcHJvcHMpIHsKICAgIAkJJCRzZWxmLiRpbmplY3Rfc3RhdGUoJCRwcm9wcy4kJGluamVjdCk7CiAgICAJfQoKICAgIAkkJHNlbGYuJCQudXBkYXRlID0gKCkgPT4gewogICAgCQlpZiAoJCRzZWxmLiQkLmRpcnR5ICYgLypjbGFzc05hbWUsIGhpZGRlbiwgY2hlY2ssIHNpemUqLyAxMjApIHsKICAgIAkJCSAkJGludmFsaWRhdGUoMSwgY2xhc3NlcyA9IGNsYXNzbmFtZXMoY2xhc3NOYW1lLCBoaWRkZW4gPyAic3Itb25seSIgOiBmYWxzZSwgY2hlY2sgPyAiZm9ybS1jaGVjay1sYWJlbCIgOiBmYWxzZSwgc2l6ZSA/IGBjb2wtZm9ybS1sYWJlbC0ke3NpemV9YCA6IGZhbHNlLCBjb2xDbGFzc2VzLCBjb2xDbGFzc2VzLmxlbmd0aCA/ICJjb2wtZm9ybS1sYWJlbCIgOiBmYWxzZSkpOwogICAgCQl9CiAgICAJfTsKCiAgICAJJCRwcm9wcyA9IGV4Y2x1ZGVfaW50ZXJuYWxfcHJvcHMoJCRwcm9wcyk7CgogICAgCXJldHVybiBbCiAgICAJCWZvcmUsCiAgICAJCWNsYXNzZXMsCiAgICAJCSQkcmVzdFByb3BzLAogICAgCQljbGFzc05hbWUsCiAgICAJCWhpZGRlbiwKICAgIAkJY2hlY2ssCiAgICAJCXNpemUsCiAgICAJCXhzLAogICAgCQlzbSwKICAgIAkJbWQsCiAgICAJCWxnLAogICAgCQl4bCwKICAgIAkJd2lkdGhzLAogICAgCQkkJHNjb3BlLAogICAgCQlzbG90cwogICAgCV07CiAgICB9CgogICAgY2xhc3MgTGFiZWwgZXh0ZW5kcyBTdmVsdGVDb21wb25lbnREZXYgewogICAgCWNvbnN0cnVjdG9yKG9wdGlvbnMpIHsKICAgIAkJc3VwZXIob3B0aW9ucyk7CgogICAgCQlpbml0KHRoaXMsIG9wdGlvbnMsIGluc3RhbmNlJDcsIGNyZWF0ZV9mcmFnbWVudCQ3LCBzYWZlX25vdF9lcXVhbCwgewogICAgCQkJY2xhc3M6IDMsCiAgICAJCQloaWRkZW46IDQsCiAgICAJCQljaGVjazogNSwKICAgIAkJCXNpemU6IDYsCiAgICAJCQlmb3I6IDAsCiAgICAJCQl4czogNywKICAgIAkJCXNtOiA4LAogICAgCQkJbWQ6IDksCiAgICAJCQlsZzogMTAsCiAgICAJCQl4bDogMTEsCiAgICAJCQl3aWR0aHM6IDEyCiAgICAJCX0pOwoKICAgIAkJZGlzcGF0Y2hfZGV2KCJTdmVsdGVSZWdpc3RlckNvbXBvbmVudCIsIHsKICAgIAkJCWNvbXBvbmVudDogdGhpcywKICAgIAkJCXRhZ05hbWU6ICJMYWJlbCIsCiAgICAJCQlvcHRpb25zLAogICAgCQkJaWQ6IGNyZWF0ZV9mcmFnbWVudCQ3Lm5hbWUKICAgIAkJfSk7CiAgICAJfQoKICAgIAlnZXQgY2xhc3MoKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPExhYmVsPjogUHJvcHMgY2Fubm90IGJlIHJlYWQgZGlyZWN0bHkgZnJvbSB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJc2V0IGNsYXNzKHZhbHVlKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPExhYmVsPjogUHJvcHMgY2Fubm90IGJlIHNldCBkaXJlY3RseSBvbiB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJZ2V0IGhpZGRlbigpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8TGFiZWw+OiBQcm9wcyBjYW5ub3QgYmUgcmVhZCBkaXJlY3RseSBmcm9tIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlzZXQgaGlkZGVuKHZhbHVlKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPExhYmVsPjogUHJvcHMgY2Fubm90IGJlIHNldCBkaXJlY3RseSBvbiB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJZ2V0IGNoZWNrKCkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxMYWJlbD46IFByb3BzIGNhbm5vdCBiZSByZWFkIGRpcmVjdGx5IGZyb20gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCXNldCBjaGVjayh2YWx1ZSkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxMYWJlbD46IFByb3BzIGNhbm5vdCBiZSBzZXQgZGlyZWN0bHkgb24gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCWdldCBzaXplKCkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxMYWJlbD46IFByb3BzIGNhbm5vdCBiZSByZWFkIGRpcmVjdGx5IGZyb20gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCXNldCBzaXplKHZhbHVlKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPExhYmVsPjogUHJvcHMgY2Fubm90IGJlIHNldCBkaXJlY3RseSBvbiB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJZ2V0IGZvcigpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8TGFiZWw+OiBQcm9wcyBjYW5ub3QgYmUgcmVhZCBkaXJlY3RseSBmcm9tIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlzZXQgZm9yKHZhbHVlKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPExhYmVsPjogUHJvcHMgY2Fubm90IGJlIHNldCBkaXJlY3RseSBvbiB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJZ2V0IHhzKCkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxMYWJlbD46IFByb3BzIGNhbm5vdCBiZSByZWFkIGRpcmVjdGx5IGZyb20gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCXNldCB4cyh2YWx1ZSkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxMYWJlbD46IFByb3BzIGNhbm5vdCBiZSBzZXQgZGlyZWN0bHkgb24gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCWdldCBzbSgpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8TGFiZWw+OiBQcm9wcyBjYW5ub3QgYmUgcmVhZCBkaXJlY3RseSBmcm9tIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlzZXQgc20odmFsdWUpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8TGFiZWw+OiBQcm9wcyBjYW5ub3QgYmUgc2V0IGRpcmVjdGx5IG9uIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlnZXQgbWQoKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPExhYmVsPjogUHJvcHMgY2Fubm90IGJlIHJlYWQgZGlyZWN0bHkgZnJvbSB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJc2V0IG1kKHZhbHVlKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPExhYmVsPjogUHJvcHMgY2Fubm90IGJlIHNldCBkaXJlY3RseSBvbiB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJZ2V0IGxnKCkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxMYWJlbD46IFByb3BzIGNhbm5vdCBiZSByZWFkIGRpcmVjdGx5IGZyb20gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCXNldCBsZyh2YWx1ZSkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxMYWJlbD46IFByb3BzIGNhbm5vdCBiZSBzZXQgZGlyZWN0bHkgb24gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCWdldCB4bCgpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8TGFiZWw+OiBQcm9wcyBjYW5ub3QgYmUgcmVhZCBkaXJlY3RseSBmcm9tIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlzZXQgeGwodmFsdWUpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8TGFiZWw+OiBQcm9wcyBjYW5ub3QgYmUgc2V0IGRpcmVjdGx5IG9uIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlnZXQgd2lkdGhzKCkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxMYWJlbD46IFByb3BzIGNhbm5vdCBiZSByZWFkIGRpcmVjdGx5IGZyb20gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCXNldCB3aWR0aHModmFsdWUpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8TGFiZWw+OiBQcm9wcyBjYW5ub3QgYmUgc2V0IGRpcmVjdGx5IG9uIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQogICAgfQoKICAgIC8qIG5vZGVfbW9kdWxlcy9zdmVsdGVzdHJhcC9zcmMvTGlzdEdyb3VwLnN2ZWx0ZSBnZW5lcmF0ZWQgYnkgU3ZlbHRlIHYzLjMxLjIgKi8KICAgIGNvbnN0IGZpbGUkOCA9ICJub2RlX21vZHVsZXMvc3ZlbHRlc3RyYXAvc3JjL0xpc3RHcm91cC5zdmVsdGUiOwoKICAgIGZ1bmN0aW9uIGNyZWF0ZV9mcmFnbWVudCQ4KGN0eCkgewogICAgCWxldCB1bDsKICAgIAlsZXQgY3VycmVudDsKICAgIAljb25zdCBkZWZhdWx0X3Nsb3RfdGVtcGxhdGUgPSAvKiNzbG90cyovIGN0eFs1XS5kZWZhdWx0OwogICAgCWNvbnN0IGRlZmF1bHRfc2xvdCA9IGNyZWF0ZV9zbG90KGRlZmF1bHRfc2xvdF90ZW1wbGF0ZSwgY3R4LCAvKiQkc2NvcGUqLyBjdHhbNF0sIG51bGwpOwogICAgCWxldCB1bF9sZXZlbHMgPSBbLyokJHJlc3RQcm9wcyovIGN0eFsxXSwgeyBjbGFzczogLypjbGFzc2VzKi8gY3R4WzBdIH1dOwogICAgCWxldCB1bF9kYXRhID0ge307CgogICAgCWZvciAobGV0IGkgPSAwOyBpIDwgdWxfbGV2ZWxzLmxlbmd0aDsgaSArPSAxKSB7CiAgICAJCXVsX2RhdGEgPSBhc3NpZ24odWxfZGF0YSwgdWxfbGV2ZWxzW2ldKTsKICAgIAl9CgogICAgCWNvbnN0IGJsb2NrID0gewogICAgCQljOiBmdW5jdGlvbiBjcmVhdGUoKSB7CiAgICAJCQl1bCA9IGVsZW1lbnQoInVsIik7CiAgICAJCQlpZiAoZGVmYXVsdF9zbG90KSBkZWZhdWx0X3Nsb3QuYygpOwogICAgCQkJc2V0X2F0dHJpYnV0ZXModWwsIHVsX2RhdGEpOwogICAgCQkJYWRkX2xvY2F0aW9uKHVsLCBmaWxlJDgsIDE0LCAwLCAyNDUpOwogICAgCQl9LAogICAgCQlsOiBmdW5jdGlvbiBjbGFpbShub2RlcykgewogICAgCQkJdGhyb3cgbmV3IEVycm9yKCJvcHRpb25zLmh5ZHJhdGUgb25seSB3b3JrcyBpZiB0aGUgY29tcG9uZW50IHdhcyBjb21waWxlZCB3aXRoIHRoZSBgaHlkcmF0YWJsZTogdHJ1ZWAgb3B0aW9uIik7CiAgICAJCX0sCiAgICAJCW06IGZ1bmN0aW9uIG1vdW50KHRhcmdldCwgYW5jaG9yKSB7CiAgICAJCQlpbnNlcnRfZGV2KHRhcmdldCwgdWwsIGFuY2hvcik7CgogICAgCQkJaWYgKGRlZmF1bHRfc2xvdCkgewogICAgCQkJCWRlZmF1bHRfc2xvdC5tKHVsLCBudWxsKTsKICAgIAkJCX0KCiAgICAJCQljdXJyZW50ID0gdHJ1ZTsKICAgIAkJfSwKICAgIAkJcDogZnVuY3Rpb24gdXBkYXRlKGN0eCwgW2RpcnR5XSkgewogICAgCQkJaWYgKGRlZmF1bHRfc2xvdCkgewogICAgCQkJCWlmIChkZWZhdWx0X3Nsb3QucCAmJiBkaXJ0eSAmIC8qJCRzY29wZSovIDE2KSB7CiAgICAJCQkJCXVwZGF0ZV9zbG90KGRlZmF1bHRfc2xvdCwgZGVmYXVsdF9zbG90X3RlbXBsYXRlLCBjdHgsIC8qJCRzY29wZSovIGN0eFs0XSwgZGlydHksIG51bGwsIG51bGwpOwogICAgCQkJCX0KICAgIAkJCX0KCiAgICAJCQlzZXRfYXR0cmlidXRlcyh1bCwgdWxfZGF0YSA9IGdldF9zcHJlYWRfdXBkYXRlKHVsX2xldmVscywgWwogICAgCQkJCWRpcnR5ICYgLyokJHJlc3RQcm9wcyovIDIgJiYgLyokJHJlc3RQcm9wcyovIGN0eFsxXSwKICAgIAkJCQkoIWN1cnJlbnQgfHwgZGlydHkgJiAvKmNsYXNzZXMqLyAxKSAmJiB7IGNsYXNzOiAvKmNsYXNzZXMqLyBjdHhbMF0gfQogICAgCQkJXSkpOwogICAgCQl9LAogICAgCQlpOiBmdW5jdGlvbiBpbnRybyhsb2NhbCkgewogICAgCQkJaWYgKGN1cnJlbnQpIHJldHVybjsKICAgIAkJCXRyYW5zaXRpb25faW4oZGVmYXVsdF9zbG90LCBsb2NhbCk7CiAgICAJCQljdXJyZW50ID0gdHJ1ZTsKICAgIAkJfSwKICAgIAkJbzogZnVuY3Rpb24gb3V0cm8obG9jYWwpIHsKICAgIAkJCXRyYW5zaXRpb25fb3V0KGRlZmF1bHRfc2xvdCwgbG9jYWwpOwogICAgCQkJY3VycmVudCA9IGZhbHNlOwogICAgCQl9LAogICAgCQlkOiBmdW5jdGlvbiBkZXN0cm95KGRldGFjaGluZykgewogICAgCQkJaWYgKGRldGFjaGluZykgZGV0YWNoX2Rldih1bCk7CiAgICAJCQlpZiAoZGVmYXVsdF9zbG90KSBkZWZhdWx0X3Nsb3QuZChkZXRhY2hpbmcpOwogICAgCQl9CiAgICAJfTsKCiAgICAJZGlzcGF0Y2hfZGV2KCJTdmVsdGVSZWdpc3RlckJsb2NrIiwgewogICAgCQlibG9jaywKICAgIAkJaWQ6IGNyZWF0ZV9mcmFnbWVudCQ4Lm5hbWUsCiAgICAJCXR5cGU6ICJjb21wb25lbnQiLAogICAgCQlzb3VyY2U6ICIiLAogICAgCQljdHgKICAgIAl9KTsKCiAgICAJcmV0dXJuIGJsb2NrOwogICAgfQoKICAgIGZ1bmN0aW9uIGluc3RhbmNlJDgoJCRzZWxmLCAkJHByb3BzLCAkJGludmFsaWRhdGUpIHsKICAgIAlsZXQgY2xhc3NlczsKICAgIAljb25zdCBvbWl0X3Byb3BzX25hbWVzID0gWyJjbGFzcyIsImZsdXNoIl07CiAgICAJbGV0ICQkcmVzdFByb3BzID0gY29tcHV0ZV9yZXN0X3Byb3BzKCQkcHJvcHMsIG9taXRfcHJvcHNfbmFtZXMpOwogICAgCWxldCB7ICQkc2xvdHM6IHNsb3RzID0ge30sICQkc2NvcGUgfSA9ICQkcHJvcHM7CiAgICAJdmFsaWRhdGVfc2xvdHMoIkxpc3RHcm91cCIsIHNsb3RzLCBbJ2RlZmF1bHQnXSk7CiAgICAJbGV0IHsgY2xhc3M6IGNsYXNzTmFtZSA9ICIiIH0gPSAkJHByb3BzOwogICAgCWxldCB7IGZsdXNoID0gZmFsc2UgfSA9ICQkcHJvcHM7CgogICAgCSQkc2VsZi4kJHNldCA9ICQkbmV3X3Byb3BzID0+IHsKICAgIAkJJCRwcm9wcyA9IGFzc2lnbihhc3NpZ24oe30sICQkcHJvcHMpLCBleGNsdWRlX2ludGVybmFsX3Byb3BzKCQkbmV3X3Byb3BzKSk7CiAgICAJCSQkaW52YWxpZGF0ZSgxLCAkJHJlc3RQcm9wcyA9IGNvbXB1dGVfcmVzdF9wcm9wcygkJHByb3BzLCBvbWl0X3Byb3BzX25hbWVzKSk7CiAgICAJCWlmICgiY2xhc3MiIGluICQkbmV3X3Byb3BzKSAkJGludmFsaWRhdGUoMiwgY2xhc3NOYW1lID0gJCRuZXdfcHJvcHMuY2xhc3MpOwogICAgCQlpZiAoImZsdXNoIiBpbiAkJG5ld19wcm9wcykgJCRpbnZhbGlkYXRlKDMsIGZsdXNoID0gJCRuZXdfcHJvcHMuZmx1c2gpOwogICAgCQlpZiAoIiQkc2NvcGUiIGluICQkbmV3X3Byb3BzKSAkJGludmFsaWRhdGUoNCwgJCRzY29wZSA9ICQkbmV3X3Byb3BzLiQkc2NvcGUpOwogICAgCX07CgogICAgCSQkc2VsZi4kY2FwdHVyZV9zdGF0ZSA9ICgpID0+ICh7IGNsYXNzbmFtZXMsIGNsYXNzTmFtZSwgZmx1c2gsIGNsYXNzZXMgfSk7CgogICAgCSQkc2VsZi4kaW5qZWN0X3N0YXRlID0gJCRuZXdfcHJvcHMgPT4gewogICAgCQlpZiAoImNsYXNzTmFtZSIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDIsIGNsYXNzTmFtZSA9ICQkbmV3X3Byb3BzLmNsYXNzTmFtZSk7CiAgICAJCWlmICgiZmx1c2giIGluICQkcHJvcHMpICQkaW52YWxpZGF0ZSgzLCBmbHVzaCA9ICQkbmV3X3Byb3BzLmZsdXNoKTsKICAgIAkJaWYgKCJjbGFzc2VzIiBpbiAkJHByb3BzKSAkJGludmFsaWRhdGUoMCwgY2xhc3NlcyA9ICQkbmV3X3Byb3BzLmNsYXNzZXMpOwogICAgCX07CgogICAgCWlmICgkJHByb3BzICYmICIkJGluamVjdCIgaW4gJCRwcm9wcykgewogICAgCQkkJHNlbGYuJGluamVjdF9zdGF0ZSgkJHByb3BzLiQkaW5qZWN0KTsKICAgIAl9CgogICAgCSQkc2VsZi4kJC51cGRhdGUgPSAoKSA9PiB7CiAgICAJCWlmICgkJHNlbGYuJCQuZGlydHkgJiAvKmNsYXNzTmFtZSwgZmx1c2gqLyAxMikgewogICAgCQkJICQkaW52YWxpZGF0ZSgwLCBjbGFzc2VzID0gY2xhc3NuYW1lcyhjbGFzc05hbWUsICJsaXN0LWdyb3VwIiwgZmx1c2ggPyAibGlzdC1ncm91cC1mbHVzaCIgOiBmYWxzZSkpOwogICAgCQl9CiAgICAJfTsKCiAgICAJcmV0dXJuIFtjbGFzc2VzLCAkJHJlc3RQcm9wcywgY2xhc3NOYW1lLCBmbHVzaCwgJCRzY29wZSwgc2xvdHNdOwogICAgfQoKICAgIGNsYXNzIExpc3RHcm91cCBleHRlbmRzIFN2ZWx0ZUNvbXBvbmVudERldiB7CiAgICAJY29uc3RydWN0b3Iob3B0aW9ucykgewogICAgCQlzdXBlcihvcHRpb25zKTsKICAgIAkJaW5pdCh0aGlzLCBvcHRpb25zLCBpbnN0YW5jZSQ4LCBjcmVhdGVfZnJhZ21lbnQkOCwgc2FmZV9ub3RfZXF1YWwsIHsgY2xhc3M6IDIsIGZsdXNoOiAzIH0pOwoKICAgIAkJZGlzcGF0Y2hfZGV2KCJTdmVsdGVSZWdpc3RlckNvbXBvbmVudCIsIHsKICAgIAkJCWNvbXBvbmVudDogdGhpcywKICAgIAkJCXRhZ05hbWU6ICJMaXN0R3JvdXAiLAogICAgCQkJb3B0aW9ucywKICAgIAkJCWlkOiBjcmVhdGVfZnJhZ21lbnQkOC5uYW1lCiAgICAJCX0pOwogICAgCX0KCiAgICAJZ2V0IGNsYXNzKCkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxMaXN0R3JvdXA+OiBQcm9wcyBjYW5ub3QgYmUgcmVhZCBkaXJlY3RseSBmcm9tIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlzZXQgY2xhc3ModmFsdWUpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8TGlzdEdyb3VwPjogUHJvcHMgY2Fubm90IGJlIHNldCBkaXJlY3RseSBvbiB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJZ2V0IGZsdXNoKCkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxMaXN0R3JvdXA+OiBQcm9wcyBjYW5ub3QgYmUgcmVhZCBkaXJlY3RseSBmcm9tIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlzZXQgZmx1c2godmFsdWUpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8TGlzdEdyb3VwPjogUHJvcHMgY2Fubm90IGJlIHNldCBkaXJlY3RseSBvbiB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KICAgIH0KCiAgICAvKiBub2RlX21vZHVsZXMvc3ZlbHRlc3RyYXAvc3JjL0xpc3RHcm91cEl0ZW0uc3ZlbHRlIGdlbmVyYXRlZCBieSBTdmVsdGUgdjMuMzEuMiAqLwogICAgY29uc3QgZmlsZSQ5ID0gIm5vZGVfbW9kdWxlcy9zdmVsdGVzdHJhcC9zcmMvTGlzdEdyb3VwSXRlbS5zdmVsdGUiOwoKICAgIC8vICgzNzowKSB7OmVsc2V9CiAgICBmdW5jdGlvbiBjcmVhdGVfZWxzZV9ibG9jayQzKGN0eCkgewogICAgCWxldCBsaTsKICAgIAlsZXQgY3VycmVudDsKICAgIAljb25zdCBkZWZhdWx0X3Nsb3RfdGVtcGxhdGUgPSAvKiNzbG90cyovIGN0eFsxMF0uZGVmYXVsdDsKICAgIAljb25zdCBkZWZhdWx0X3Nsb3QgPSBjcmVhdGVfc2xvdChkZWZhdWx0X3Nsb3RfdGVtcGxhdGUsIGN0eCwgLyokJHNjb3BlKi8gY3R4WzldLCBudWxsKTsKCiAgICAJbGV0IGxpX2xldmVscyA9IFsKICAgIAkJLyokJHJlc3RQcm9wcyovIGN0eFs1XSwKICAgIAkJeyBjbGFzczogLypjbGFzc2VzKi8gY3R4WzRdIH0sCiAgICAJCXsgZGlzYWJsZWQ6IC8qZGlzYWJsZWQqLyBjdHhbMV0gfSwKICAgIAkJeyBhY3RpdmU6IC8qYWN0aXZlKi8gY3R4WzBdIH0KICAgIAldOwoKICAgIAlsZXQgbGlfZGF0YSA9IHt9OwoKICAgIAlmb3IgKGxldCBpID0gMDsgaSA8IGxpX2xldmVscy5sZW5ndGg7IGkgKz0gMSkgewogICAgCQlsaV9kYXRhID0gYXNzaWduKGxpX2RhdGEsIGxpX2xldmVsc1tpXSk7CiAgICAJfQoKICAgIAljb25zdCBibG9jayA9IHsKICAgIAkJYzogZnVuY3Rpb24gY3JlYXRlKCkgewogICAgCQkJbGkgPSBlbGVtZW50KCJsaSIpOwogICAgCQkJaWYgKGRlZmF1bHRfc2xvdCkgZGVmYXVsdF9zbG90LmMoKTsKICAgIAkJCXNldF9hdHRyaWJ1dGVzKGxpLCBsaV9kYXRhKTsKICAgIAkJCWFkZF9sb2NhdGlvbihsaSwgZmlsZSQ5LCAzNywgMiwgNzc5KTsKICAgIAkJfSwKICAgIAkJbTogZnVuY3Rpb24gbW91bnQodGFyZ2V0LCBhbmNob3IpIHsKICAgIAkJCWluc2VydF9kZXYodGFyZ2V0LCBsaSwgYW5jaG9yKTsKCiAgICAJCQlpZiAoZGVmYXVsdF9zbG90KSB7CiAgICAJCQkJZGVmYXVsdF9zbG90Lm0obGksIG51bGwpOwogICAgCQkJfQoKICAgIAkJCWN1cnJlbnQgPSB0cnVlOwogICAgCQl9LAogICAgCQlwOiBmdW5jdGlvbiB1cGRhdGUoY3R4LCBkaXJ0eSkgewogICAgCQkJaWYgKGRlZmF1bHRfc2xvdCkgewogICAgCQkJCWlmIChkZWZhdWx0X3Nsb3QucCAmJiBkaXJ0eSAmIC8qJCRzY29wZSovIDUxMikgewogICAgCQkJCQl1cGRhdGVfc2xvdChkZWZhdWx0X3Nsb3QsIGRlZmF1bHRfc2xvdF90ZW1wbGF0ZSwgY3R4LCAvKiQkc2NvcGUqLyBjdHhbOV0sIGRpcnR5LCBudWxsLCBudWxsKTsKICAgIAkJCQl9CiAgICAJCQl9CgogICAgCQkJc2V0X2F0dHJpYnV0ZXMobGksIGxpX2RhdGEgPSBnZXRfc3ByZWFkX3VwZGF0ZShsaV9sZXZlbHMsIFsKICAgIAkJCQlkaXJ0eSAmIC8qJCRyZXN0UHJvcHMqLyAzMiAmJiAvKiQkcmVzdFByb3BzKi8gY3R4WzVdLAogICAgCQkJCSghY3VycmVudCB8fCBkaXJ0eSAmIC8qY2xhc3NlcyovIDE2KSAmJiB7IGNsYXNzOiAvKmNsYXNzZXMqLyBjdHhbNF0gfSwKICAgIAkJCQkoIWN1cnJlbnQgfHwgZGlydHkgJiAvKmRpc2FibGVkKi8gMikgJiYgeyBkaXNhYmxlZDogLypkaXNhYmxlZCovIGN0eFsxXSB9LAogICAgCQkJCSghY3VycmVudCB8fCBkaXJ0eSAmIC8qYWN0aXZlKi8gMSkgJiYgeyBhY3RpdmU6IC8qYWN0aXZlKi8gY3R4WzBdIH0KICAgIAkJCV0pKTsKICAgIAkJfSwKICAgIAkJaTogZnVuY3Rpb24gaW50cm8obG9jYWwpIHsKICAgIAkJCWlmIChjdXJyZW50KSByZXR1cm47CiAgICAJCQl0cmFuc2l0aW9uX2luKGRlZmF1bHRfc2xvdCwgbG9jYWwpOwogICAgCQkJY3VycmVudCA9IHRydWU7CiAgICAJCX0sCiAgICAJCW86IGZ1bmN0aW9uIG91dHJvKGxvY2FsKSB7CiAgICAJCQl0cmFuc2l0aW9uX291dChkZWZhdWx0X3Nsb3QsIGxvY2FsKTsKICAgIAkJCWN1cnJlbnQgPSBmYWxzZTsKICAgIAkJfSwKICAgIAkJZDogZnVuY3Rpb24gZGVzdHJveShkZXRhY2hpbmcpIHsKICAgIAkJCWlmIChkZXRhY2hpbmcpIGRldGFjaF9kZXYobGkpOwogICAgCQkJaWYgKGRlZmF1bHRfc2xvdCkgZGVmYXVsdF9zbG90LmQoZGV0YWNoaW5nKTsKICAgIAkJfQogICAgCX07CgogICAgCWRpc3BhdGNoX2RldigiU3ZlbHRlUmVnaXN0ZXJCbG9jayIsIHsKICAgIAkJYmxvY2ssCiAgICAJCWlkOiBjcmVhdGVfZWxzZV9ibG9jayQzLm5hbWUsCiAgICAJCXR5cGU6ICJlbHNlIiwKICAgIAkJc291cmNlOiAiKDM3OjApIHs6ZWxzZX0iLAogICAgCQljdHgKICAgIAl9KTsKCiAgICAJcmV0dXJuIGJsb2NrOwogICAgfQoKICAgIC8vICgyNzoyNykgCiAgICBmdW5jdGlvbiBjcmVhdGVfaWZfYmxvY2tfMSQyKGN0eCkgewogICAgCWxldCBidXR0b247CiAgICAJbGV0IGN1cnJlbnQ7CiAgICAJbGV0IG1vdW50ZWQ7CiAgICAJbGV0IGRpc3Bvc2U7CiAgICAJY29uc3QgZGVmYXVsdF9zbG90X3RlbXBsYXRlID0gLyojc2xvdHMqLyBjdHhbMTBdLmRlZmF1bHQ7CiAgICAJY29uc3QgZGVmYXVsdF9zbG90ID0gY3JlYXRlX3Nsb3QoZGVmYXVsdF9zbG90X3RlbXBsYXRlLCBjdHgsIC8qJCRzY29wZSovIGN0eFs5XSwgbnVsbCk7CgogICAgCWxldCBidXR0b25fbGV2ZWxzID0gWwogICAgCQkvKiQkcmVzdFByb3BzKi8gY3R4WzVdLAogICAgCQl7IGNsYXNzOiAvKmNsYXNzZXMqLyBjdHhbNF0gfSwKICAgIAkJeyB0eXBlOiAiYnV0dG9uIiB9LAogICAgCQl7IGRpc2FibGVkOiAvKmRpc2FibGVkKi8gY3R4WzFdIH0sCiAgICAJCXsgYWN0aXZlOiAvKmFjdGl2ZSovIGN0eFswXSB9CiAgICAJXTsKCiAgICAJbGV0IGJ1dHRvbl9kYXRhID0ge307CgogICAgCWZvciAobGV0IGkgPSAwOyBpIDwgYnV0dG9uX2xldmVscy5sZW5ndGg7IGkgKz0gMSkgewogICAgCQlidXR0b25fZGF0YSA9IGFzc2lnbihidXR0b25fZGF0YSwgYnV0dG9uX2xldmVsc1tpXSk7CiAgICAJfQoKICAgIAljb25zdCBibG9jayA9IHsKICAgIAkJYzogZnVuY3Rpb24gY3JlYXRlKCkgewogICAgCQkJYnV0dG9uID0gZWxlbWVudCgiYnV0dG9uIik7CiAgICAJCQlpZiAoZGVmYXVsdF9zbG90KSBkZWZhdWx0X3Nsb3QuYygpOwogICAgCQkJc2V0X2F0dHJpYnV0ZXMoYnV0dG9uLCBidXR0b25fZGF0YSk7CiAgICAJCQlhZGRfbG9jYXRpb24oYnV0dG9uLCBmaWxlJDksIDI3LCAyLCA2MzUpOwogICAgCQl9LAogICAgCQltOiBmdW5jdGlvbiBtb3VudCh0YXJnZXQsIGFuY2hvcikgewogICAgCQkJaW5zZXJ0X2Rldih0YXJnZXQsIGJ1dHRvbiwgYW5jaG9yKTsKCiAgICAJCQlpZiAoZGVmYXVsdF9zbG90KSB7CiAgICAJCQkJZGVmYXVsdF9zbG90Lm0oYnV0dG9uLCBudWxsKTsKICAgIAkJCX0KCiAgICAJCQljdXJyZW50ID0gdHJ1ZTsKCiAgICAJCQlpZiAoIW1vdW50ZWQpIHsKICAgIAkJCQlkaXNwb3NlID0gbGlzdGVuX2RldihidXR0b24sICJjbGljayIsIC8qY2xpY2tfaGFuZGxlciovIGN0eFsxMV0sIGZhbHNlLCBmYWxzZSwgZmFsc2UpOwogICAgCQkJCW1vdW50ZWQgPSB0cnVlOwogICAgCQkJfQogICAgCQl9LAogICAgCQlwOiBmdW5jdGlvbiB1cGRhdGUoY3R4LCBkaXJ0eSkgewogICAgCQkJaWYgKGRlZmF1bHRfc2xvdCkgewogICAgCQkJCWlmIChkZWZhdWx0X3Nsb3QucCAmJiBkaXJ0eSAmIC8qJCRzY29wZSovIDUxMikgewogICAgCQkJCQl1cGRhdGVfc2xvdChkZWZhdWx0X3Nsb3QsIGRlZmF1bHRfc2xvdF90ZW1wbGF0ZSwgY3R4LCAvKiQkc2NvcGUqLyBjdHhbOV0sIGRpcnR5LCBudWxsLCBudWxsKTsKICAgIAkJCQl9CiAgICAJCQl9CgogICAgCQkJc2V0X2F0dHJpYnV0ZXMoYnV0dG9uLCBidXR0b25fZGF0YSA9IGdldF9zcHJlYWRfdXBkYXRlKGJ1dHRvbl9sZXZlbHMsIFsKICAgIAkJCQlkaXJ0eSAmIC8qJCRyZXN0UHJvcHMqLyAzMiAmJiAvKiQkcmVzdFByb3BzKi8gY3R4WzVdLAogICAgCQkJCSghY3VycmVudCB8fCBkaXJ0eSAmIC8qY2xhc3NlcyovIDE2KSAmJiB7IGNsYXNzOiAvKmNsYXNzZXMqLyBjdHhbNF0gfSwKICAgIAkJCQl7IHR5cGU6ICJidXR0b24iIH0sCiAgICAJCQkJKCFjdXJyZW50IHx8IGRpcnR5ICYgLypkaXNhYmxlZCovIDIpICYmIHsgZGlzYWJsZWQ6IC8qZGlzYWJsZWQqLyBjdHhbMV0gfSwKICAgIAkJCQkoIWN1cnJlbnQgfHwgZGlydHkgJiAvKmFjdGl2ZSovIDEpICYmIHsgYWN0aXZlOiAvKmFjdGl2ZSovIGN0eFswXSB9CiAgICAJCQldKSk7CiAgICAJCX0sCiAgICAJCWk6IGZ1bmN0aW9uIGludHJvKGxvY2FsKSB7CiAgICAJCQlpZiAoY3VycmVudCkgcmV0dXJuOwogICAgCQkJdHJhbnNpdGlvbl9pbihkZWZhdWx0X3Nsb3QsIGxvY2FsKTsKICAgIAkJCWN1cnJlbnQgPSB0cnVlOwogICAgCQl9LAogICAgCQlvOiBmdW5jdGlvbiBvdXRybyhsb2NhbCkgewogICAgCQkJdHJhbnNpdGlvbl9vdXQoZGVmYXVsdF9zbG90LCBsb2NhbCk7CiAgICAJCQljdXJyZW50ID0gZmFsc2U7CiAgICAJCX0sCiAgICAJCWQ6IGZ1bmN0aW9uIGRlc3Ryb3koZGV0YWNoaW5nKSB7CiAgICAJCQlpZiAoZGV0YWNoaW5nKSBkZXRhY2hfZGV2KGJ1dHRvbik7CiAgICAJCQlpZiAoZGVmYXVsdF9zbG90KSBkZWZhdWx0X3Nsb3QuZChkZXRhY2hpbmcpOwogICAgCQkJbW91bnRlZCA9IGZhbHNlOwogICAgCQkJZGlzcG9zZSgpOwogICAgCQl9CiAgICAJfTsKCiAgICAJZGlzcGF0Y2hfZGV2KCJTdmVsdGVSZWdpc3RlckJsb2NrIiwgewogICAgCQlibG9jaywKICAgIAkJaWQ6IGNyZWF0ZV9pZl9ibG9ja18xJDIubmFtZSwKICAgIAkJdHlwZTogImlmIiwKICAgIAkJc291cmNlOiAiKDI3OjI3KSAiLAogICAgCQljdHgKICAgIAl9KTsKCiAgICAJcmV0dXJuIGJsb2NrOwogICAgfQoKICAgIC8vICgyMzowKSB7I2lmIGhyZWZ9CiAgICBmdW5jdGlvbiBjcmVhdGVfaWZfYmxvY2skMyhjdHgpIHsKICAgIAlsZXQgYTsKICAgIAlsZXQgY3VycmVudDsKICAgIAljb25zdCBkZWZhdWx0X3Nsb3RfdGVtcGxhdGUgPSAvKiNzbG90cyovIGN0eFsxMF0uZGVmYXVsdDsKICAgIAljb25zdCBkZWZhdWx0X3Nsb3QgPSBjcmVhdGVfc2xvdChkZWZhdWx0X3Nsb3RfdGVtcGxhdGUsIGN0eCwgLyokJHNjb3BlKi8gY3R4WzldLCBudWxsKTsKCiAgICAJbGV0IGFfbGV2ZWxzID0gWwogICAgCQkvKiQkcmVzdFByb3BzKi8gY3R4WzVdLAogICAgCQl7IGNsYXNzOiAvKmNsYXNzZXMqLyBjdHhbNF0gfSwKICAgIAkJeyBocmVmOiAvKmhyZWYqLyBjdHhbMl0gfSwKICAgIAkJeyBkaXNhYmxlZDogLypkaXNhYmxlZCovIGN0eFsxXSB9LAogICAgCQl7IGFjdGl2ZTogLyphY3RpdmUqLyBjdHhbMF0gfQogICAgCV07CgogICAgCWxldCBhX2RhdGEgPSB7fTsKCiAgICAJZm9yIChsZXQgaSA9IDA7IGkgPCBhX2xldmVscy5sZW5ndGg7IGkgKz0gMSkgewogICAgCQlhX2RhdGEgPSBhc3NpZ24oYV9kYXRhLCBhX2xldmVsc1tpXSk7CiAgICAJfQoKICAgIAljb25zdCBibG9jayA9IHsKICAgIAkJYzogZnVuY3Rpb24gY3JlYXRlKCkgewogICAgCQkJYSA9IGVsZW1lbnQoImEiKTsKICAgIAkJCWlmIChkZWZhdWx0X3Nsb3QpIGRlZmF1bHRfc2xvdC5jKCk7CiAgICAJCQlzZXRfYXR0cmlidXRlcyhhLCBhX2RhdGEpOwogICAgCQkJYWRkX2xvY2F0aW9uKGEsIGZpbGUkOSwgMjMsIDIsIDUyMSk7CiAgICAJCX0sCiAgICAJCW06IGZ1bmN0aW9uIG1vdW50KHRhcmdldCwgYW5jaG9yKSB7CiAgICAJCQlpbnNlcnRfZGV2KHRhcmdldCwgYSwgYW5jaG9yKTsKCiAgICAJCQlpZiAoZGVmYXVsdF9zbG90KSB7CiAgICAJCQkJZGVmYXVsdF9zbG90Lm0oYSwgbnVsbCk7CiAgICAJCQl9CgogICAgCQkJY3VycmVudCA9IHRydWU7CiAgICAJCX0sCiAgICAJCXA6IGZ1bmN0aW9uIHVwZGF0ZShjdHgsIGRpcnR5KSB7CiAgICAJCQlpZiAoZGVmYXVsdF9zbG90KSB7CiAgICAJCQkJaWYgKGRlZmF1bHRfc2xvdC5wICYmIGRpcnR5ICYgLyokJHNjb3BlKi8gNTEyKSB7CiAgICAJCQkJCXVwZGF0ZV9zbG90KGRlZmF1bHRfc2xvdCwgZGVmYXVsdF9zbG90X3RlbXBsYXRlLCBjdHgsIC8qJCRzY29wZSovIGN0eFs5XSwgZGlydHksIG51bGwsIG51bGwpOwogICAgCQkJCX0KICAgIAkJCX0KCiAgICAJCQlzZXRfYXR0cmlidXRlcyhhLCBhX2RhdGEgPSBnZXRfc3ByZWFkX3VwZGF0ZShhX2xldmVscywgWwogICAgCQkJCWRpcnR5ICYgLyokJHJlc3RQcm9wcyovIDMyICYmIC8qJCRyZXN0UHJvcHMqLyBjdHhbNV0sCiAgICAJCQkJKCFjdXJyZW50IHx8IGRpcnR5ICYgLypjbGFzc2VzKi8gMTYpICYmIHsgY2xhc3M6IC8qY2xhc3NlcyovIGN0eFs0XSB9LAogICAgCQkJCSghY3VycmVudCB8fCBkaXJ0eSAmIC8qaHJlZiovIDQpICYmIHsgaHJlZjogLypocmVmKi8gY3R4WzJdIH0sCiAgICAJCQkJKCFjdXJyZW50IHx8IGRpcnR5ICYgLypkaXNhYmxlZCovIDIpICYmIHsgZGlzYWJsZWQ6IC8qZGlzYWJsZWQqLyBjdHhbMV0gfSwKICAgIAkJCQkoIWN1cnJlbnQgfHwgZGlydHkgJiAvKmFjdGl2ZSovIDEpICYmIHsgYWN0aXZlOiAvKmFjdGl2ZSovIGN0eFswXSB9CiAgICAJCQldKSk7CiAgICAJCX0sCiAgICAJCWk6IGZ1bmN0aW9uIGludHJvKGxvY2FsKSB7CiAgICAJCQlpZiAoY3VycmVudCkgcmV0dXJuOwogICAgCQkJdHJhbnNpdGlvbl9pbihkZWZhdWx0X3Nsb3QsIGxvY2FsKTsKICAgIAkJCWN1cnJlbnQgPSB0cnVlOwogICAgCQl9LAogICAgCQlvOiBmdW5jdGlvbiBvdXRybyhsb2NhbCkgewogICAgCQkJdHJhbnNpdGlvbl9vdXQoZGVmYXVsdF9zbG90LCBsb2NhbCk7CiAgICAJCQljdXJyZW50ID0gZmFsc2U7CiAgICAJCX0sCiAgICAJCWQ6IGZ1bmN0aW9uIGRlc3Ryb3koZGV0YWNoaW5nKSB7CiAgICAJCQlpZiAoZGV0YWNoaW5nKSBkZXRhY2hfZGV2KGEpOwogICAgCQkJaWYgKGRlZmF1bHRfc2xvdCkgZGVmYXVsdF9zbG90LmQoZGV0YWNoaW5nKTsKICAgIAkJfQogICAgCX07CgogICAgCWRpc3BhdGNoX2RldigiU3ZlbHRlUmVnaXN0ZXJCbG9jayIsIHsKICAgIAkJYmxvY2ssCiAgICAJCWlkOiBjcmVhdGVfaWZfYmxvY2skMy5uYW1lLAogICAgCQl0eXBlOiAiaWYiLAogICAgCQlzb3VyY2U6ICIoMjM6MCkgeyNpZiBocmVmfSIsCiAgICAJCWN0eAogICAgCX0pOwoKICAgIAlyZXR1cm4gYmxvY2s7CiAgICB9CgogICAgZnVuY3Rpb24gY3JlYXRlX2ZyYWdtZW50JDkoY3R4KSB7CiAgICAJbGV0IGN1cnJlbnRfYmxvY2tfdHlwZV9pbmRleDsKICAgIAlsZXQgaWZfYmxvY2s7CiAgICAJbGV0IGlmX2Jsb2NrX2FuY2hvcjsKICAgIAlsZXQgY3VycmVudDsKICAgIAljb25zdCBpZl9ibG9ja19jcmVhdG9ycyA9IFtjcmVhdGVfaWZfYmxvY2skMywgY3JlYXRlX2lmX2Jsb2NrXzEkMiwgY3JlYXRlX2Vsc2VfYmxvY2skM107CiAgICAJY29uc3QgaWZfYmxvY2tzID0gW107CgogICAgCWZ1bmN0aW9uIHNlbGVjdF9ibG9ja190eXBlKGN0eCwgZGlydHkpIHsKICAgIAkJaWYgKC8qaHJlZiovIGN0eFsyXSkgcmV0dXJuIDA7CiAgICAJCWlmICgvKnRhZyovIGN0eFszXSA9PT0gImJ1dHRvbiIpIHJldHVybiAxOwogICAgCQlyZXR1cm4gMjsKICAgIAl9CgogICAgCWN1cnJlbnRfYmxvY2tfdHlwZV9pbmRleCA9IHNlbGVjdF9ibG9ja190eXBlKGN0eCk7CiAgICAJaWZfYmxvY2sgPSBpZl9ibG9ja3NbY3VycmVudF9ibG9ja190eXBlX2luZGV4XSA9IGlmX2Jsb2NrX2NyZWF0b3JzW2N1cnJlbnRfYmxvY2tfdHlwZV9pbmRleF0oY3R4KTsKCiAgICAJY29uc3QgYmxvY2sgPSB7CiAgICAJCWM6IGZ1bmN0aW9uIGNyZWF0ZSgpIHsKICAgIAkJCWlmX2Jsb2NrLmMoKTsKICAgIAkJCWlmX2Jsb2NrX2FuY2hvciA9IGVtcHR5KCk7CiAgICAJCX0sCiAgICAJCWw6IGZ1bmN0aW9uIGNsYWltKG5vZGVzKSB7CiAgICAJCQl0aHJvdyBuZXcgRXJyb3IoIm9wdGlvbnMuaHlkcmF0ZSBvbmx5IHdvcmtzIGlmIHRoZSBjb21wb25lbnQgd2FzIGNvbXBpbGVkIHdpdGggdGhlIGBoeWRyYXRhYmxlOiB0cnVlYCBvcHRpb24iKTsKICAgIAkJfSwKICAgIAkJbTogZnVuY3Rpb24gbW91bnQodGFyZ2V0LCBhbmNob3IpIHsKICAgIAkJCWlmX2Jsb2Nrc1tjdXJyZW50X2Jsb2NrX3R5cGVfaW5kZXhdLm0odGFyZ2V0LCBhbmNob3IpOwogICAgCQkJaW5zZXJ0X2Rldih0YXJnZXQsIGlmX2Jsb2NrX2FuY2hvciwgYW5jaG9yKTsKICAgIAkJCWN1cnJlbnQgPSB0cnVlOwogICAgCQl9LAogICAgCQlwOiBmdW5jdGlvbiB1cGRhdGUoY3R4LCBbZGlydHldKSB7CiAgICAJCQlsZXQgcHJldmlvdXNfYmxvY2tfaW5kZXggPSBjdXJyZW50X2Jsb2NrX3R5cGVfaW5kZXg7CiAgICAJCQljdXJyZW50X2Jsb2NrX3R5cGVfaW5kZXggPSBzZWxlY3RfYmxvY2tfdHlwZShjdHgpOwoKICAgIAkJCWlmIChjdXJyZW50X2Jsb2NrX3R5cGVfaW5kZXggPT09IHByZXZpb3VzX2Jsb2NrX2luZGV4KSB7CiAgICAJCQkJaWZfYmxvY2tzW2N1cnJlbnRfYmxvY2tfdHlwZV9pbmRleF0ucChjdHgsIGRpcnR5KTsKICAgIAkJCX0gZWxzZSB7CiAgICAJCQkJZ3JvdXBfb3V0cm9zKCk7CgogICAgCQkJCXRyYW5zaXRpb25fb3V0KGlmX2Jsb2Nrc1twcmV2aW91c19ibG9ja19pbmRleF0sIDEsIDEsICgpID0+IHsKICAgIAkJCQkJaWZfYmxvY2tzW3ByZXZpb3VzX2Jsb2NrX2luZGV4XSA9IG51bGw7CiAgICAJCQkJfSk7CgogICAgCQkJCWNoZWNrX291dHJvcygpOwogICAgCQkJCWlmX2Jsb2NrID0gaWZfYmxvY2tzW2N1cnJlbnRfYmxvY2tfdHlwZV9pbmRleF07CgogICAgCQkJCWlmICghaWZfYmxvY2spIHsKICAgIAkJCQkJaWZfYmxvY2sgPSBpZl9ibG9ja3NbY3VycmVudF9ibG9ja190eXBlX2luZGV4XSA9IGlmX2Jsb2NrX2NyZWF0b3JzW2N1cnJlbnRfYmxvY2tfdHlwZV9pbmRleF0oY3R4KTsKICAgIAkJCQkJaWZfYmxvY2suYygpOwogICAgCQkJCX0gZWxzZSB7CiAgICAJCQkJCWlmX2Jsb2NrLnAoY3R4LCBkaXJ0eSk7CiAgICAJCQkJfQoKICAgIAkJCQl0cmFuc2l0aW9uX2luKGlmX2Jsb2NrLCAxKTsKICAgIAkJCQlpZl9ibG9jay5tKGlmX2Jsb2NrX2FuY2hvci5wYXJlbnROb2RlLCBpZl9ibG9ja19hbmNob3IpOwogICAgCQkJfQogICAgCQl9LAogICAgCQlpOiBmdW5jdGlvbiBpbnRybyhsb2NhbCkgewogICAgCQkJaWYgKGN1cnJlbnQpIHJldHVybjsKICAgIAkJCXRyYW5zaXRpb25faW4oaWZfYmxvY2spOwogICAgCQkJY3VycmVudCA9IHRydWU7CiAgICAJCX0sCiAgICAJCW86IGZ1bmN0aW9uIG91dHJvKGxvY2FsKSB7CiAgICAJCQl0cmFuc2l0aW9uX291dChpZl9ibG9jayk7CiAgICAJCQljdXJyZW50ID0gZmFsc2U7CiAgICAJCX0sCiAgICAJCWQ6IGZ1bmN0aW9uIGRlc3Ryb3koZGV0YWNoaW5nKSB7CiAgICAJCQlpZl9ibG9ja3NbY3VycmVudF9ibG9ja190eXBlX2luZGV4XS5kKGRldGFjaGluZyk7CiAgICAJCQlpZiAoZGV0YWNoaW5nKSBkZXRhY2hfZGV2KGlmX2Jsb2NrX2FuY2hvcik7CiAgICAJCX0KICAgIAl9OwoKICAgIAlkaXNwYXRjaF9kZXYoIlN2ZWx0ZVJlZ2lzdGVyQmxvY2siLCB7CiAgICAJCWJsb2NrLAogICAgCQlpZDogY3JlYXRlX2ZyYWdtZW50JDkubmFtZSwKICAgIAkJdHlwZTogImNvbXBvbmVudCIsCiAgICAJCXNvdXJjZTogIiIsCiAgICAJCWN0eAogICAgCX0pOwoKICAgIAlyZXR1cm4gYmxvY2s7CiAgICB9CgogICAgZnVuY3Rpb24gaW5zdGFuY2UkOSgkJHNlbGYsICQkcHJvcHMsICQkaW52YWxpZGF0ZSkgewogICAgCWxldCBjbGFzc2VzOwogICAgCWNvbnN0IG9taXRfcHJvcHNfbmFtZXMgPSBbImNsYXNzIiwiYWN0aXZlIiwiZGlzYWJsZWQiLCJjb2xvciIsImFjdGlvbiIsImhyZWYiLCJ0YWciXTsKICAgIAlsZXQgJCRyZXN0UHJvcHMgPSBjb21wdXRlX3Jlc3RfcHJvcHMoJCRwcm9wcywgb21pdF9wcm9wc19uYW1lcyk7CiAgICAJbGV0IHsgJCRzbG90czogc2xvdHMgPSB7fSwgJCRzY29wZSB9ID0gJCRwcm9wczsKICAgIAl2YWxpZGF0ZV9zbG90cygiTGlzdEdyb3VwSXRlbSIsIHNsb3RzLCBbJ2RlZmF1bHQnXSk7CiAgICAJbGV0IHsgY2xhc3M6IGNsYXNzTmFtZSA9ICIiIH0gPSAkJHByb3BzOwogICAgCWxldCB7IGFjdGl2ZSA9IGZhbHNlIH0gPSAkJHByb3BzOwogICAgCWxldCB7IGRpc2FibGVkID0gZmFsc2UgfSA9ICQkcHJvcHM7CiAgICAJbGV0IHsgY29sb3IgPSAiIiB9ID0gJCRwcm9wczsKICAgIAlsZXQgeyBhY3Rpb24gPSBmYWxzZSB9ID0gJCRwcm9wczsKICAgIAlsZXQgeyBocmVmID0gbnVsbCB9ID0gJCRwcm9wczsKICAgIAlsZXQgeyB0YWcgPSBudWxsIH0gPSAkJHByb3BzOwoKICAgIAlmdW5jdGlvbiBjbGlja19oYW5kbGVyKGV2ZW50KSB7CiAgICAJCWJ1YmJsZSgkJHNlbGYsIGV2ZW50KTsKICAgIAl9CgogICAgCSQkc2VsZi4kJHNldCA9ICQkbmV3X3Byb3BzID0+IHsKICAgIAkJJCRwcm9wcyA9IGFzc2lnbihhc3NpZ24oe30sICQkcHJvcHMpLCBleGNsdWRlX2ludGVybmFsX3Byb3BzKCQkbmV3X3Byb3BzKSk7CiAgICAJCSQkaW52YWxpZGF0ZSg1LCAkJHJlc3RQcm9wcyA9IGNvbXB1dGVfcmVzdF9wcm9wcygkJHByb3BzLCBvbWl0X3Byb3BzX25hbWVzKSk7CiAgICAJCWlmICgiY2xhc3MiIGluICQkbmV3X3Byb3BzKSAkJGludmFsaWRhdGUoNiwgY2xhc3NOYW1lID0gJCRuZXdfcHJvcHMuY2xhc3MpOwogICAgCQlpZiAoImFjdGl2ZSIgaW4gJCRuZXdfcHJvcHMpICQkaW52YWxpZGF0ZSgwLCBhY3RpdmUgPSAkJG5ld19wcm9wcy5hY3RpdmUpOwogICAgCQlpZiAoImRpc2FibGVkIiBpbiAkJG5ld19wcm9wcykgJCRpbnZhbGlkYXRlKDEsIGRpc2FibGVkID0gJCRuZXdfcHJvcHMuZGlzYWJsZWQpOwogICAgCQlpZiAoImNvbG9yIiBpbiAkJG5ld19wcm9wcykgJCRpbnZhbGlkYXRlKDcsIGNvbG9yID0gJCRuZXdfcHJvcHMuY29sb3IpOwogICAgCQlpZiAoImFjdGlvbiIgaW4gJCRuZXdfcHJvcHMpICQkaW52YWxpZGF0ZSg4LCBhY3Rpb24gPSAkJG5ld19wcm9wcy5hY3Rpb24pOwogICAgCQlpZiAoImhyZWYiIGluICQkbmV3X3Byb3BzKSAkJGludmFsaWRhdGUoMiwgaHJlZiA9ICQkbmV3X3Byb3BzLmhyZWYpOwogICAgCQlpZiAoInRhZyIgaW4gJCRuZXdfcHJvcHMpICQkaW52YWxpZGF0ZSgzLCB0YWcgPSAkJG5ld19wcm9wcy50YWcpOwogICAgCQlpZiAoIiQkc2NvcGUiIGluICQkbmV3X3Byb3BzKSAkJGludmFsaWRhdGUoOSwgJCRzY29wZSA9ICQkbmV3X3Byb3BzLiQkc2NvcGUpOwogICAgCX07CgogICAgCSQkc2VsZi4kY2FwdHVyZV9zdGF0ZSA9ICgpID0+ICh7CiAgICAJCWNsYXNzbmFtZXMsCiAgICAJCWNsYXNzTmFtZSwKICAgIAkJYWN0aXZlLAogICAgCQlkaXNhYmxlZCwKICAgIAkJY29sb3IsCiAgICAJCWFjdGlvbiwKICAgIAkJaHJlZiwKICAgIAkJdGFnLAogICAgCQljbGFzc2VzCiAgICAJfSk7CgogICAgCSQkc2VsZi4kaW5qZWN0X3N0YXRlID0gJCRuZXdfcHJvcHMgPT4gewogICAgCQlpZiAoImNsYXNzTmFtZSIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDYsIGNsYXNzTmFtZSA9ICQkbmV3X3Byb3BzLmNsYXNzTmFtZSk7CiAgICAJCWlmICgiYWN0aXZlIiBpbiAkJHByb3BzKSAkJGludmFsaWRhdGUoMCwgYWN0aXZlID0gJCRuZXdfcHJvcHMuYWN0aXZlKTsKICAgIAkJaWYgKCJkaXNhYmxlZCIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDEsIGRpc2FibGVkID0gJCRuZXdfcHJvcHMuZGlzYWJsZWQpOwogICAgCQlpZiAoImNvbG9yIiBpbiAkJHByb3BzKSAkJGludmFsaWRhdGUoNywgY29sb3IgPSAkJG5ld19wcm9wcy5jb2xvcik7CiAgICAJCWlmICgiYWN0aW9uIiBpbiAkJHByb3BzKSAkJGludmFsaWRhdGUoOCwgYWN0aW9uID0gJCRuZXdfcHJvcHMuYWN0aW9uKTsKICAgIAkJaWYgKCJocmVmIiBpbiAkJHByb3BzKSAkJGludmFsaWRhdGUoMiwgaHJlZiA9ICQkbmV3X3Byb3BzLmhyZWYpOwogICAgCQlpZiAoInRhZyIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDMsIHRhZyA9ICQkbmV3X3Byb3BzLnRhZyk7CiAgICAJCWlmICgiY2xhc3NlcyIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDQsIGNsYXNzZXMgPSAkJG5ld19wcm9wcy5jbGFzc2VzKTsKICAgIAl9OwoKICAgIAlpZiAoJCRwcm9wcyAmJiAiJCRpbmplY3QiIGluICQkcHJvcHMpIHsKICAgIAkJJCRzZWxmLiRpbmplY3Rfc3RhdGUoJCRwcm9wcy4kJGluamVjdCk7CiAgICAJfQoKICAgIAkkJHNlbGYuJCQudXBkYXRlID0gKCkgPT4gewogICAgCQlpZiAoJCRzZWxmLiQkLmRpcnR5ICYgLypjbGFzc05hbWUsIGFjdGl2ZSwgZGlzYWJsZWQsIGFjdGlvbiwgY29sb3IqLyA0NTEpIHsKICAgIAkJCSAkJGludmFsaWRhdGUoNCwgY2xhc3NlcyA9IGNsYXNzbmFtZXMoY2xhc3NOYW1lLCBhY3RpdmUgPyAiYWN0aXZlIiA6IGZhbHNlLCBkaXNhYmxlZCA/ICJkaXNhYmxlZCIgOiBmYWxzZSwgYWN0aW9uID8gImxpc3QtZ3JvdXAtaXRlbS1hY3Rpb24iIDogZmFsc2UsIGNvbG9yID8gYGxpc3QtZ3JvdXAtaXRlbS0ke2NvbG9yfWAgOiBmYWxzZSwgImxpc3QtZ3JvdXAtaXRlbSIpKTsKICAgIAkJfQogICAgCX07CgogICAgCXJldHVybiBbCiAgICAJCWFjdGl2ZSwKICAgIAkJZGlzYWJsZWQsCiAgICAJCWhyZWYsCiAgICAJCXRhZywKICAgIAkJY2xhc3NlcywKICAgIAkJJCRyZXN0UHJvcHMsCiAgICAJCWNsYXNzTmFtZSwKICAgIAkJY29sb3IsCiAgICAJCWFjdGlvbiwKICAgIAkJJCRzY29wZSwKICAgIAkJc2xvdHMsCiAgICAJCWNsaWNrX2hhbmRsZXIKICAgIAldOwogICAgfQoKICAgIGNsYXNzIExpc3RHcm91cEl0ZW0gZXh0ZW5kcyBTdmVsdGVDb21wb25lbnREZXYgewogICAgCWNvbnN0cnVjdG9yKG9wdGlvbnMpIHsKICAgIAkJc3VwZXIob3B0aW9ucyk7CgogICAgCQlpbml0KHRoaXMsIG9wdGlvbnMsIGluc3RhbmNlJDksIGNyZWF0ZV9mcmFnbWVudCQ5LCBzYWZlX25vdF9lcXVhbCwgewogICAgCQkJY2xhc3M6IDYsCiAgICAJCQlhY3RpdmU6IDAsCiAgICAJCQlkaXNhYmxlZDogMSwKICAgIAkJCWNvbG9yOiA3LAogICAgCQkJYWN0aW9uOiA4LAogICAgCQkJaHJlZjogMiwKICAgIAkJCXRhZzogMwogICAgCQl9KTsKCiAgICAJCWRpc3BhdGNoX2RldigiU3ZlbHRlUmVnaXN0ZXJDb21wb25lbnQiLCB7CiAgICAJCQljb21wb25lbnQ6IHRoaXMsCiAgICAJCQl0YWdOYW1lOiAiTGlzdEdyb3VwSXRlbSIsCiAgICAJCQlvcHRpb25zLAogICAgCQkJaWQ6IGNyZWF0ZV9mcmFnbWVudCQ5Lm5hbWUKICAgIAkJfSk7CiAgICAJfQoKICAgIAlnZXQgY2xhc3MoKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPExpc3RHcm91cEl0ZW0+OiBQcm9wcyBjYW5ub3QgYmUgcmVhZCBkaXJlY3RseSBmcm9tIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlzZXQgY2xhc3ModmFsdWUpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8TGlzdEdyb3VwSXRlbT46IFByb3BzIGNhbm5vdCBiZSBzZXQgZGlyZWN0bHkgb24gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCWdldCBhY3RpdmUoKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPExpc3RHcm91cEl0ZW0+OiBQcm9wcyBjYW5ub3QgYmUgcmVhZCBkaXJlY3RseSBmcm9tIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlzZXQgYWN0aXZlKHZhbHVlKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPExpc3RHcm91cEl0ZW0+OiBQcm9wcyBjYW5ub3QgYmUgc2V0IGRpcmVjdGx5IG9uIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlnZXQgZGlzYWJsZWQoKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPExpc3RHcm91cEl0ZW0+OiBQcm9wcyBjYW5ub3QgYmUgcmVhZCBkaXJlY3RseSBmcm9tIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlzZXQgZGlzYWJsZWQodmFsdWUpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8TGlzdEdyb3VwSXRlbT46IFByb3BzIGNhbm5vdCBiZSBzZXQgZGlyZWN0bHkgb24gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCWdldCBjb2xvcigpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8TGlzdEdyb3VwSXRlbT46IFByb3BzIGNhbm5vdCBiZSByZWFkIGRpcmVjdGx5IGZyb20gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCXNldCBjb2xvcih2YWx1ZSkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxMaXN0R3JvdXBJdGVtPjogUHJvcHMgY2Fubm90IGJlIHNldCBkaXJlY3RseSBvbiB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJZ2V0IGFjdGlvbigpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8TGlzdEdyb3VwSXRlbT46IFByb3BzIGNhbm5vdCBiZSByZWFkIGRpcmVjdGx5IGZyb20gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCXNldCBhY3Rpb24odmFsdWUpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8TGlzdEdyb3VwSXRlbT46IFByb3BzIGNhbm5vdCBiZSBzZXQgZGlyZWN0bHkgb24gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCWdldCBocmVmKCkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxMaXN0R3JvdXBJdGVtPjogUHJvcHMgY2Fubm90IGJlIHJlYWQgZGlyZWN0bHkgZnJvbSB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJc2V0IGhyZWYodmFsdWUpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8TGlzdEdyb3VwSXRlbT46IFByb3BzIGNhbm5vdCBiZSBzZXQgZGlyZWN0bHkgb24gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCWdldCB0YWcoKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPExpc3RHcm91cEl0ZW0+OiBQcm9wcyBjYW5ub3QgYmUgcmVhZCBkaXJlY3RseSBmcm9tIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlzZXQgdGFnKHZhbHVlKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPExpc3RHcm91cEl0ZW0+OiBQcm9wcyBjYW5ub3QgYmUgc2V0IGRpcmVjdGx5IG9uIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQogICAgfQoKICAgIC8qIG5vZGVfbW9kdWxlcy9zdmVsdGVzdHJhcC9zcmMvTWVkaWEuc3ZlbHRlIGdlbmVyYXRlZCBieSBTdmVsdGUgdjMuMzEuMiAqLwogICAgY29uc3QgZmlsZSRhID0gIm5vZGVfbW9kdWxlcy9zdmVsdGVzdHJhcC9zcmMvTWVkaWEuc3ZlbHRlIjsKCiAgICAvLyAoNTY6MCkgezplbHNlfQogICAgZnVuY3Rpb24gY3JlYXRlX2Vsc2VfYmxvY2skNChjdHgpIHsKICAgIAlsZXQgZGl2OwogICAgCWxldCBjdXJyZW50OwogICAgCWNvbnN0IGRlZmF1bHRfc2xvdF90ZW1wbGF0ZSA9IC8qI3Nsb3RzKi8gY3R4WzE2XS5kZWZhdWx0OwogICAgCWNvbnN0IGRlZmF1bHRfc2xvdCA9IGNyZWF0ZV9zbG90KGRlZmF1bHRfc2xvdF90ZW1wbGF0ZSwgY3R4LCAvKiQkc2NvcGUqLyBjdHhbMTVdLCBudWxsKTsKICAgIAlsZXQgZGl2X2xldmVscyA9IFsvKiQkcmVzdFByb3BzKi8gY3R4WzddLCB7IGNsYXNzOiAvKmNsYXNzZXMqLyBjdHhbNl0gfV07CiAgICAJbGV0IGRpdl9kYXRhID0ge307CgogICAgCWZvciAobGV0IGkgPSAwOyBpIDwgZGl2X2xldmVscy5sZW5ndGg7IGkgKz0gMSkgewogICAgCQlkaXZfZGF0YSA9IGFzc2lnbihkaXZfZGF0YSwgZGl2X2xldmVsc1tpXSk7CiAgICAJfQoKICAgIAljb25zdCBibG9jayA9IHsKICAgIAkJYzogZnVuY3Rpb24gY3JlYXRlKCkgewogICAgCQkJZGl2ID0gZWxlbWVudCgiZGl2Iik7CiAgICAJCQlpZiAoZGVmYXVsdF9zbG90KSBkZWZhdWx0X3Nsb3QuYygpOwogICAgCQkJc2V0X2F0dHJpYnV0ZXMoZGl2LCBkaXZfZGF0YSk7CiAgICAJCQlhZGRfbG9jYXRpb24oZGl2LCBmaWxlJGEsIDU2LCAyLCAxMTkwKTsKICAgIAkJfSwKICAgIAkJbTogZnVuY3Rpb24gbW91bnQodGFyZ2V0LCBhbmNob3IpIHsKICAgIAkJCWluc2VydF9kZXYodGFyZ2V0LCBkaXYsIGFuY2hvcik7CgogICAgCQkJaWYgKGRlZmF1bHRfc2xvdCkgewogICAgCQkJCWRlZmF1bHRfc2xvdC5tKGRpdiwgbnVsbCk7CiAgICAJCQl9CgogICAgCQkJY3VycmVudCA9IHRydWU7CiAgICAJCX0sCiAgICAJCXA6IGZ1bmN0aW9uIHVwZGF0ZShjdHgsIGRpcnR5KSB7CiAgICAJCQlpZiAoZGVmYXVsdF9zbG90KSB7CiAgICAJCQkJaWYgKGRlZmF1bHRfc2xvdC5wICYmIGRpcnR5ICYgLyokJHNjb3BlKi8gMzI3NjgpIHsKICAgIAkJCQkJdXBkYXRlX3Nsb3QoZGVmYXVsdF9zbG90LCBkZWZhdWx0X3Nsb3RfdGVtcGxhdGUsIGN0eCwgLyokJHNjb3BlKi8gY3R4WzE1XSwgZGlydHksIG51bGwsIG51bGwpOwogICAgCQkJCX0KICAgIAkJCX0KCiAgICAJCQlzZXRfYXR0cmlidXRlcyhkaXYsIGRpdl9kYXRhID0gZ2V0X3NwcmVhZF91cGRhdGUoZGl2X2xldmVscywgWwogICAgCQkJCWRpcnR5ICYgLyokJHJlc3RQcm9wcyovIDEyOCAmJiAvKiQkcmVzdFByb3BzKi8gY3R4WzddLAogICAgCQkJCSghY3VycmVudCB8fCBkaXJ0eSAmIC8qY2xhc3NlcyovIDY0KSAmJiB7IGNsYXNzOiAvKmNsYXNzZXMqLyBjdHhbNl0gfQogICAgCQkJXSkpOwogICAgCQl9LAogICAgCQlpOiBmdW5jdGlvbiBpbnRybyhsb2NhbCkgewogICAgCQkJaWYgKGN1cnJlbnQpIHJldHVybjsKICAgIAkJCXRyYW5zaXRpb25faW4oZGVmYXVsdF9zbG90LCBsb2NhbCk7CiAgICAJCQljdXJyZW50ID0gdHJ1ZTsKICAgIAkJfSwKICAgIAkJbzogZnVuY3Rpb24gb3V0cm8obG9jYWwpIHsKICAgIAkJCXRyYW5zaXRpb25fb3V0KGRlZmF1bHRfc2xvdCwgbG9jYWwpOwogICAgCQkJY3VycmVudCA9IGZhbHNlOwogICAgCQl9LAogICAgCQlkOiBmdW5jdGlvbiBkZXN0cm95KGRldGFjaGluZykgewogICAgCQkJaWYgKGRldGFjaGluZykgZGV0YWNoX2RldihkaXYpOwogICAgCQkJaWYgKGRlZmF1bHRfc2xvdCkgZGVmYXVsdF9zbG90LmQoZGV0YWNoaW5nKTsKICAgIAkJfQogICAgCX07CgogICAgCWRpc3BhdGNoX2RldigiU3ZlbHRlUmVnaXN0ZXJCbG9jayIsIHsKICAgIAkJYmxvY2ssCiAgICAJCWlkOiBjcmVhdGVfZWxzZV9ibG9jayQ0Lm5hbWUsCiAgICAJCXR5cGU6ICJlbHNlIiwKICAgIAkJc291cmNlOiAiKDU2OjApIHs6ZWxzZX0iLAogICAgCQljdHgKICAgIAl9KTsKCiAgICAJcmV0dXJuIGJsb2NrOwogICAgfQoKICAgIC8vICg1MjoxNSkgCiAgICBmdW5jdGlvbiBjcmVhdGVfaWZfYmxvY2tfMyQyKGN0eCkgewogICAgCWxldCB1bDsKICAgIAlsZXQgY3VycmVudDsKICAgIAljb25zdCBkZWZhdWx0X3Nsb3RfdGVtcGxhdGUgPSAvKiNzbG90cyovIGN0eFsxNl0uZGVmYXVsdDsKICAgIAljb25zdCBkZWZhdWx0X3Nsb3QgPSBjcmVhdGVfc2xvdChkZWZhdWx0X3Nsb3RfdGVtcGxhdGUsIGN0eCwgLyokJHNjb3BlKi8gY3R4WzE1XSwgbnVsbCk7CiAgICAJbGV0IHVsX2xldmVscyA9IFsvKiQkcmVzdFByb3BzKi8gY3R4WzddLCB7IGNsYXNzOiAvKmNsYXNzZXMqLyBjdHhbNl0gfV07CiAgICAJbGV0IHVsX2RhdGEgPSB7fTsKCiAgICAJZm9yIChsZXQgaSA9IDA7IGkgPCB1bF9sZXZlbHMubGVuZ3RoOyBpICs9IDEpIHsKICAgIAkJdWxfZGF0YSA9IGFzc2lnbih1bF9kYXRhLCB1bF9sZXZlbHNbaV0pOwogICAgCX0KCiAgICAJY29uc3QgYmxvY2sgPSB7CiAgICAJCWM6IGZ1bmN0aW9uIGNyZWF0ZSgpIHsKICAgIAkJCXVsID0gZWxlbWVudCgidWwiKTsKICAgIAkJCWlmIChkZWZhdWx0X3Nsb3QpIGRlZmF1bHRfc2xvdC5jKCk7CiAgICAJCQlzZXRfYXR0cmlidXRlcyh1bCwgdWxfZGF0YSk7CiAgICAJCQlhZGRfbG9jYXRpb24odWwsIGZpbGUkYSwgNTIsIDIsIDExMjEpOwogICAgCQl9LAogICAgCQltOiBmdW5jdGlvbiBtb3VudCh0YXJnZXQsIGFuY2hvcikgewogICAgCQkJaW5zZXJ0X2Rldih0YXJnZXQsIHVsLCBhbmNob3IpOwoKICAgIAkJCWlmIChkZWZhdWx0X3Nsb3QpIHsKICAgIAkJCQlkZWZhdWx0X3Nsb3QubSh1bCwgbnVsbCk7CiAgICAJCQl9CgogICAgCQkJY3VycmVudCA9IHRydWU7CiAgICAJCX0sCiAgICAJCXA6IGZ1bmN0aW9uIHVwZGF0ZShjdHgsIGRpcnR5KSB7CiAgICAJCQlpZiAoZGVmYXVsdF9zbG90KSB7CiAgICAJCQkJaWYgKGRlZmF1bHRfc2xvdC5wICYmIGRpcnR5ICYgLyokJHNjb3BlKi8gMzI3NjgpIHsKICAgIAkJCQkJdXBkYXRlX3Nsb3QoZGVmYXVsdF9zbG90LCBkZWZhdWx0X3Nsb3RfdGVtcGxhdGUsIGN0eCwgLyokJHNjb3BlKi8gY3R4WzE1XSwgZGlydHksIG51bGwsIG51bGwpOwogICAgCQkJCX0KICAgIAkJCX0KCiAgICAJCQlzZXRfYXR0cmlidXRlcyh1bCwgdWxfZGF0YSA9IGdldF9zcHJlYWRfdXBkYXRlKHVsX2xldmVscywgWwogICAgCQkJCWRpcnR5ICYgLyokJHJlc3RQcm9wcyovIDEyOCAmJiAvKiQkcmVzdFByb3BzKi8gY3R4WzddLAogICAgCQkJCSghY3VycmVudCB8fCBkaXJ0eSAmIC8qY2xhc3NlcyovIDY0KSAmJiB7IGNsYXNzOiAvKmNsYXNzZXMqLyBjdHhbNl0gfQogICAgCQkJXSkpOwogICAgCQl9LAogICAgCQlpOiBmdW5jdGlvbiBpbnRybyhsb2NhbCkgewogICAgCQkJaWYgKGN1cnJlbnQpIHJldHVybjsKICAgIAkJCXRyYW5zaXRpb25faW4oZGVmYXVsdF9zbG90LCBsb2NhbCk7CiAgICAJCQljdXJyZW50ID0gdHJ1ZTsKICAgIAkJfSwKICAgIAkJbzogZnVuY3Rpb24gb3V0cm8obG9jYWwpIHsKICAgIAkJCXRyYW5zaXRpb25fb3V0KGRlZmF1bHRfc2xvdCwgbG9jYWwpOwogICAgCQkJY3VycmVudCA9IGZhbHNlOwogICAgCQl9LAogICAgCQlkOiBmdW5jdGlvbiBkZXN0cm95KGRldGFjaGluZykgewogICAgCQkJaWYgKGRldGFjaGluZykgZGV0YWNoX2Rldih1bCk7CiAgICAJCQlpZiAoZGVmYXVsdF9zbG90KSBkZWZhdWx0X3Nsb3QuZChkZXRhY2hpbmcpOwogICAgCQl9CiAgICAJfTsKCiAgICAJZGlzcGF0Y2hfZGV2KCJTdmVsdGVSZWdpc3RlckJsb2NrIiwgewogICAgCQlibG9jaywKICAgIAkJaWQ6IGNyZWF0ZV9pZl9ibG9ja18zJDIubmFtZSwKICAgIAkJdHlwZTogImlmIiwKICAgIAkJc291cmNlOiAiKDUyOjE1KSAiLAogICAgCQljdHgKICAgIAl9KTsKCiAgICAJcmV0dXJuIGJsb2NrOwogICAgfQoKICAgIC8vICg1MDoyNCkgCiAgICBmdW5jdGlvbiBjcmVhdGVfaWZfYmxvY2tfMiQyKGN0eCkgewogICAgCWxldCBpbWc7CiAgICAJbGV0IGltZ19zcmNfdmFsdWU7CgogICAgCWxldCBpbWdfbGV2ZWxzID0gWwogICAgCQkvKiQkcmVzdFByb3BzKi8gY3R4WzddLAogICAgCQl7IGNsYXNzOiAvKmNsYXNzZXMqLyBjdHhbNl0gfSwKICAgIAkJeyBzcmM6IGltZ19zcmNfdmFsdWUgPSAvKnNyYyovIGN0eFs0XSB9LAogICAgCQl7IGFsdDogLyphbHQqLyBjdHhbNV0gfQogICAgCV07CgogICAgCWxldCBpbWdfZGF0YSA9IHt9OwoKICAgIAlmb3IgKGxldCBpID0gMDsgaSA8IGltZ19sZXZlbHMubGVuZ3RoOyBpICs9IDEpIHsKICAgIAkJaW1nX2RhdGEgPSBhc3NpZ24oaW1nX2RhdGEsIGltZ19sZXZlbHNbaV0pOwogICAgCX0KCiAgICAJY29uc3QgYmxvY2sgPSB7CiAgICAJCWM6IGZ1bmN0aW9uIGNyZWF0ZSgpIHsKICAgIAkJCWltZyA9IGVsZW1lbnQoImltZyIpOwogICAgCQkJc2V0X2F0dHJpYnV0ZXMoaW1nLCBpbWdfZGF0YSk7CiAgICAJCQlhZGRfbG9jYXRpb24oaW1nLCBmaWxlJGEsIDUwLCAyLCAxMDUwKTsKICAgIAkJfSwKICAgIAkJbTogZnVuY3Rpb24gbW91bnQodGFyZ2V0LCBhbmNob3IpIHsKICAgIAkJCWluc2VydF9kZXYodGFyZ2V0LCBpbWcsIGFuY2hvcik7CiAgICAJCX0sCiAgICAJCXA6IGZ1bmN0aW9uIHVwZGF0ZShjdHgsIGRpcnR5KSB7CiAgICAJCQlzZXRfYXR0cmlidXRlcyhpbWcsIGltZ19kYXRhID0gZ2V0X3NwcmVhZF91cGRhdGUoaW1nX2xldmVscywgWwogICAgCQkJCWRpcnR5ICYgLyokJHJlc3RQcm9wcyovIDEyOCAmJiAvKiQkcmVzdFByb3BzKi8gY3R4WzddLAogICAgCQkJCWRpcnR5ICYgLypjbGFzc2VzKi8gNjQgJiYgeyBjbGFzczogLypjbGFzc2VzKi8gY3R4WzZdIH0sCiAgICAJCQkJZGlydHkgJiAvKnNyYyovIDE2ICYmIGltZy5zcmMgIT09IChpbWdfc3JjX3ZhbHVlID0gLypzcmMqLyBjdHhbNF0pICYmIHsgc3JjOiBpbWdfc3JjX3ZhbHVlIH0sCiAgICAJCQkJZGlydHkgJiAvKmFsdCovIDMyICYmIHsgYWx0OiAvKmFsdCovIGN0eFs1XSB9CiAgICAJCQldKSk7CiAgICAJCX0sCiAgICAJCWk6IG5vb3AsCiAgICAJCW86IG5vb3AsCiAgICAJCWQ6IGZ1bmN0aW9uIGRlc3Ryb3koZGV0YWNoaW5nKSB7CiAgICAJCQlpZiAoZGV0YWNoaW5nKSBkZXRhY2hfZGV2KGltZyk7CiAgICAJCX0KICAgIAl9OwoKICAgIAlkaXNwYXRjaF9kZXYoIlN2ZWx0ZVJlZ2lzdGVyQmxvY2siLCB7CiAgICAJCWJsb2NrLAogICAgCQlpZDogY3JlYXRlX2lmX2Jsb2NrXzIkMi5uYW1lLAogICAgCQl0eXBlOiAiaWYiLAogICAgCQlzb3VyY2U6ICIoNTA6MjQpICIsCiAgICAJCWN0eAogICAgCX0pOwoKICAgIAlyZXR1cm4gYmxvY2s7CiAgICB9CgogICAgLy8gKDQ2OjE1KSAKICAgIGZ1bmN0aW9uIGNyZWF0ZV9pZl9ibG9ja18xJDMoY3R4KSB7CiAgICAJbGV0IGE7CiAgICAJbGV0IGN1cnJlbnQ7CiAgICAJY29uc3QgZGVmYXVsdF9zbG90X3RlbXBsYXRlID0gLyojc2xvdHMqLyBjdHhbMTZdLmRlZmF1bHQ7CiAgICAJY29uc3QgZGVmYXVsdF9zbG90ID0gY3JlYXRlX3Nsb3QoZGVmYXVsdF9zbG90X3RlbXBsYXRlLCBjdHgsIC8qJCRzY29wZSovIGN0eFsxNV0sIG51bGwpOwoKICAgIAlsZXQgYV9sZXZlbHMgPSBbCiAgICAJCS8qJCRyZXN0UHJvcHMqLyBjdHhbN10sCiAgICAJCXsgY2xhc3M6IC8qY2xhc3NlcyovIGN0eFs2XSB9LAogICAgCQl7IGhyZWY6IC8qaHJlZiovIGN0eFszXSB9CiAgICAJXTsKCiAgICAJbGV0IGFfZGF0YSA9IHt9OwoKICAgIAlmb3IgKGxldCBpID0gMDsgaSA8IGFfbGV2ZWxzLmxlbmd0aDsgaSArPSAxKSB7CiAgICAJCWFfZGF0YSA9IGFzc2lnbihhX2RhdGEsIGFfbGV2ZWxzW2ldKTsKICAgIAl9CgogICAgCWNvbnN0IGJsb2NrID0gewogICAgCQljOiBmdW5jdGlvbiBjcmVhdGUoKSB7CiAgICAJCQlhID0gZWxlbWVudCgiYSIpOwogICAgCQkJaWYgKGRlZmF1bHRfc2xvdCkgZGVmYXVsdF9zbG90LmMoKTsKICAgIAkJCXNldF9hdHRyaWJ1dGVzKGEsIGFfZGF0YSk7CiAgICAJCQlhZGRfbG9jYXRpb24oYSwgZmlsZSRhLCA0NiwgMiwgOTU5KTsKICAgIAkJfSwKICAgIAkJbTogZnVuY3Rpb24gbW91bnQodGFyZ2V0LCBhbmNob3IpIHsKICAgIAkJCWluc2VydF9kZXYodGFyZ2V0LCBhLCBhbmNob3IpOwoKICAgIAkJCWlmIChkZWZhdWx0X3Nsb3QpIHsKICAgIAkJCQlkZWZhdWx0X3Nsb3QubShhLCBudWxsKTsKICAgIAkJCX0KCiAgICAJCQljdXJyZW50ID0gdHJ1ZTsKICAgIAkJfSwKICAgIAkJcDogZnVuY3Rpb24gdXBkYXRlKGN0eCwgZGlydHkpIHsKICAgIAkJCWlmIChkZWZhdWx0X3Nsb3QpIHsKICAgIAkJCQlpZiAoZGVmYXVsdF9zbG90LnAgJiYgZGlydHkgJiAvKiQkc2NvcGUqLyAzMjc2OCkgewogICAgCQkJCQl1cGRhdGVfc2xvdChkZWZhdWx0X3Nsb3QsIGRlZmF1bHRfc2xvdF90ZW1wbGF0ZSwgY3R4LCAvKiQkc2NvcGUqLyBjdHhbMTVdLCBkaXJ0eSwgbnVsbCwgbnVsbCk7CiAgICAJCQkJfQogICAgCQkJfQoKICAgIAkJCXNldF9hdHRyaWJ1dGVzKGEsIGFfZGF0YSA9IGdldF9zcHJlYWRfdXBkYXRlKGFfbGV2ZWxzLCBbCiAgICAJCQkJZGlydHkgJiAvKiQkcmVzdFByb3BzKi8gMTI4ICYmIC8qJCRyZXN0UHJvcHMqLyBjdHhbN10sCiAgICAJCQkJKCFjdXJyZW50IHx8IGRpcnR5ICYgLypjbGFzc2VzKi8gNjQpICYmIHsgY2xhc3M6IC8qY2xhc3NlcyovIGN0eFs2XSB9LAogICAgCQkJCSghY3VycmVudCB8fCBkaXJ0eSAmIC8qaHJlZiovIDgpICYmIHsgaHJlZjogLypocmVmKi8gY3R4WzNdIH0KICAgIAkJCV0pKTsKICAgIAkJfSwKICAgIAkJaTogZnVuY3Rpb24gaW50cm8obG9jYWwpIHsKICAgIAkJCWlmIChjdXJyZW50KSByZXR1cm47CiAgICAJCQl0cmFuc2l0aW9uX2luKGRlZmF1bHRfc2xvdCwgbG9jYWwpOwogICAgCQkJY3VycmVudCA9IHRydWU7CiAgICAJCX0sCiAgICAJCW86IGZ1bmN0aW9uIG91dHJvKGxvY2FsKSB7CiAgICAJCQl0cmFuc2l0aW9uX291dChkZWZhdWx0X3Nsb3QsIGxvY2FsKTsKICAgIAkJCWN1cnJlbnQgPSBmYWxzZTsKICAgIAkJfSwKICAgIAkJZDogZnVuY3Rpb24gZGVzdHJveShkZXRhY2hpbmcpIHsKICAgIAkJCWlmIChkZXRhY2hpbmcpIGRldGFjaF9kZXYoYSk7CiAgICAJCQlpZiAoZGVmYXVsdF9zbG90KSBkZWZhdWx0X3Nsb3QuZChkZXRhY2hpbmcpOwogICAgCQl9CiAgICAJfTsKCiAgICAJZGlzcGF0Y2hfZGV2KCJTdmVsdGVSZWdpc3RlckJsb2NrIiwgewogICAgCQlibG9jaywKICAgIAkJaWQ6IGNyZWF0ZV9pZl9ibG9ja18xJDMubmFtZSwKICAgIAkJdHlwZTogImlmIiwKICAgIAkJc291cmNlOiAiKDQ2OjE1KSAiLAogICAgCQljdHgKICAgIAl9KTsKCiAgICAJcmV0dXJuIGJsb2NrOwogICAgfQoKICAgIC8vICg0MjowKSB7I2lmIGhlYWRpbmd9CiAgICBmdW5jdGlvbiBjcmVhdGVfaWZfYmxvY2skNChjdHgpIHsKICAgIAlsZXQgaDQ7CiAgICAJbGV0IGN1cnJlbnQ7CiAgICAJY29uc3QgZGVmYXVsdF9zbG90X3RlbXBsYXRlID0gLyojc2xvdHMqLyBjdHhbMTZdLmRlZmF1bHQ7CiAgICAJY29uc3QgZGVmYXVsdF9zbG90ID0gY3JlYXRlX3Nsb3QoZGVmYXVsdF9zbG90X3RlbXBsYXRlLCBjdHgsIC8qJCRzY29wZSovIGN0eFsxNV0sIG51bGwpOwogICAgCWxldCBoNF9sZXZlbHMgPSBbLyokJHJlc3RQcm9wcyovIGN0eFs3XSwgeyBjbGFzczogLypjbGFzc2VzKi8gY3R4WzZdIH1dOwogICAgCWxldCBoNF9kYXRhID0ge307CgogICAgCWZvciAobGV0IGkgPSAwOyBpIDwgaDRfbGV2ZWxzLmxlbmd0aDsgaSArPSAxKSB7CiAgICAJCWg0X2RhdGEgPSBhc3NpZ24oaDRfZGF0YSwgaDRfbGV2ZWxzW2ldKTsKICAgIAl9CgogICAgCWNvbnN0IGJsb2NrID0gewogICAgCQljOiBmdW5jdGlvbiBjcmVhdGUoKSB7CiAgICAJCQloNCA9IGVsZW1lbnQoImg0Iik7CiAgICAJCQlpZiAoZGVmYXVsdF9zbG90KSBkZWZhdWx0X3Nsb3QuYygpOwogICAgCQkJc2V0X2F0dHJpYnV0ZXMoaDQsIGg0X2RhdGEpOwogICAgCQkJYWRkX2xvY2F0aW9uKGg0LCBmaWxlJGEsIDQyLCAyLCA4ODIpOwogICAgCQl9LAogICAgCQltOiBmdW5jdGlvbiBtb3VudCh0YXJnZXQsIGFuY2hvcikgewogICAgCQkJaW5zZXJ0X2Rldih0YXJnZXQsIGg0LCBhbmNob3IpOwoKICAgIAkJCWlmIChkZWZhdWx0X3Nsb3QpIHsKICAgIAkJCQlkZWZhdWx0X3Nsb3QubShoNCwgbnVsbCk7CiAgICAJCQl9CgogICAgCQkJY3VycmVudCA9IHRydWU7CiAgICAJCX0sCiAgICAJCXA6IGZ1bmN0aW9uIHVwZGF0ZShjdHgsIGRpcnR5KSB7CiAgICAJCQlpZiAoZGVmYXVsdF9zbG90KSB7CiAgICAJCQkJaWYgKGRlZmF1bHRfc2xvdC5wICYmIGRpcnR5ICYgLyokJHNjb3BlKi8gMzI3NjgpIHsKICAgIAkJCQkJdXBkYXRlX3Nsb3QoZGVmYXVsdF9zbG90LCBkZWZhdWx0X3Nsb3RfdGVtcGxhdGUsIGN0eCwgLyokJHNjb3BlKi8gY3R4WzE1XSwgZGlydHksIG51bGwsIG51bGwpOwogICAgCQkJCX0KICAgIAkJCX0KCiAgICAJCQlzZXRfYXR0cmlidXRlcyhoNCwgaDRfZGF0YSA9IGdldF9zcHJlYWRfdXBkYXRlKGg0X2xldmVscywgWwogICAgCQkJCWRpcnR5ICYgLyokJHJlc3RQcm9wcyovIDEyOCAmJiAvKiQkcmVzdFByb3BzKi8gY3R4WzddLAogICAgCQkJCSghY3VycmVudCB8fCBkaXJ0eSAmIC8qY2xhc3NlcyovIDY0KSAmJiB7IGNsYXNzOiAvKmNsYXNzZXMqLyBjdHhbNl0gfQogICAgCQkJXSkpOwogICAgCQl9LAogICAgCQlpOiBmdW5jdGlvbiBpbnRybyhsb2NhbCkgewogICAgCQkJaWYgKGN1cnJlbnQpIHJldHVybjsKICAgIAkJCXRyYW5zaXRpb25faW4oZGVmYXVsdF9zbG90LCBsb2NhbCk7CiAgICAJCQljdXJyZW50ID0gdHJ1ZTsKICAgIAkJfSwKICAgIAkJbzogZnVuY3Rpb24gb3V0cm8obG9jYWwpIHsKICAgIAkJCXRyYW5zaXRpb25fb3V0KGRlZmF1bHRfc2xvdCwgbG9jYWwpOwogICAgCQkJY3VycmVudCA9IGZhbHNlOwogICAgCQl9LAogICAgCQlkOiBmdW5jdGlvbiBkZXN0cm95KGRldGFjaGluZykgewogICAgCQkJaWYgKGRldGFjaGluZykgZGV0YWNoX2RldihoNCk7CiAgICAJCQlpZiAoZGVmYXVsdF9zbG90KSBkZWZhdWx0X3Nsb3QuZChkZXRhY2hpbmcpOwogICAgCQl9CiAgICAJfTsKCiAgICAJZGlzcGF0Y2hfZGV2KCJTdmVsdGVSZWdpc3RlckJsb2NrIiwgewogICAgCQlibG9jaywKICAgIAkJaWQ6IGNyZWF0ZV9pZl9ibG9jayQ0Lm5hbWUsCiAgICAJCXR5cGU6ICJpZiIsCiAgICAJCXNvdXJjZTogIig0MjowKSB7I2lmIGhlYWRpbmd9IiwKICAgIAkJY3R4CiAgICAJfSk7CgogICAgCXJldHVybiBibG9jazsKICAgIH0KCiAgICBmdW5jdGlvbiBjcmVhdGVfZnJhZ21lbnQkYShjdHgpIHsKICAgIAlsZXQgY3VycmVudF9ibG9ja190eXBlX2luZGV4OwogICAgCWxldCBpZl9ibG9jazsKICAgIAlsZXQgaWZfYmxvY2tfYW5jaG9yOwogICAgCWxldCBjdXJyZW50OwoKICAgIAljb25zdCBpZl9ibG9ja19jcmVhdG9ycyA9IFsKICAgIAkJY3JlYXRlX2lmX2Jsb2NrJDQsCiAgICAJCWNyZWF0ZV9pZl9ibG9ja18xJDMsCiAgICAJCWNyZWF0ZV9pZl9ibG9ja18yJDIsCiAgICAJCWNyZWF0ZV9pZl9ibG9ja18zJDIsCiAgICAJCWNyZWF0ZV9lbHNlX2Jsb2NrJDQKICAgIAldOwoKICAgIAljb25zdCBpZl9ibG9ja3MgPSBbXTsKCiAgICAJZnVuY3Rpb24gc2VsZWN0X2Jsb2NrX3R5cGUoY3R4LCBkaXJ0eSkgewogICAgCQlpZiAoLypoZWFkaW5nKi8gY3R4WzBdKSByZXR1cm4gMDsKICAgIAkJaWYgKC8qaHJlZiovIGN0eFszXSkgcmV0dXJuIDE7CiAgICAJCWlmICgvKnNyYyovIGN0eFs0XSB8fCAvKm9iamVjdCovIGN0eFsyXSkgcmV0dXJuIDI7CiAgICAJCWlmICgvKmxpc3QqLyBjdHhbMV0pIHJldHVybiAzOwogICAgCQlyZXR1cm4gNDsKICAgIAl9CgogICAgCWN1cnJlbnRfYmxvY2tfdHlwZV9pbmRleCA9IHNlbGVjdF9ibG9ja190eXBlKGN0eCk7CiAgICAJaWZfYmxvY2sgPSBpZl9ibG9ja3NbY3VycmVudF9ibG9ja190eXBlX2luZGV4XSA9IGlmX2Jsb2NrX2NyZWF0b3JzW2N1cnJlbnRfYmxvY2tfdHlwZV9pbmRleF0oY3R4KTsKCiAgICAJY29uc3QgYmxvY2sgPSB7CiAgICAJCWM6IGZ1bmN0aW9uIGNyZWF0ZSgpIHsKICAgIAkJCWlmX2Jsb2NrLmMoKTsKICAgIAkJCWlmX2Jsb2NrX2FuY2hvciA9IGVtcHR5KCk7CiAgICAJCX0sCiAgICAJCWw6IGZ1bmN0aW9uIGNsYWltKG5vZGVzKSB7CiAgICAJCQl0aHJvdyBuZXcgRXJyb3IoIm9wdGlvbnMuaHlkcmF0ZSBvbmx5IHdvcmtzIGlmIHRoZSBjb21wb25lbnQgd2FzIGNvbXBpbGVkIHdpdGggdGhlIGBoeWRyYXRhYmxlOiB0cnVlYCBvcHRpb24iKTsKICAgIAkJfSwKICAgIAkJbTogZnVuY3Rpb24gbW91bnQodGFyZ2V0LCBhbmNob3IpIHsKICAgIAkJCWlmX2Jsb2Nrc1tjdXJyZW50X2Jsb2NrX3R5cGVfaW5kZXhdLm0odGFyZ2V0LCBhbmNob3IpOwogICAgCQkJaW5zZXJ0X2Rldih0YXJnZXQsIGlmX2Jsb2NrX2FuY2hvciwgYW5jaG9yKTsKICAgIAkJCWN1cnJlbnQgPSB0cnVlOwogICAgCQl9LAogICAgCQlwOiBmdW5jdGlvbiB1cGRhdGUoY3R4LCBbZGlydHldKSB7CiAgICAJCQlsZXQgcHJldmlvdXNfYmxvY2tfaW5kZXggPSBjdXJyZW50X2Jsb2NrX3R5cGVfaW5kZXg7CiAgICAJCQljdXJyZW50X2Jsb2NrX3R5cGVfaW5kZXggPSBzZWxlY3RfYmxvY2tfdHlwZShjdHgpOwoKICAgIAkJCWlmIChjdXJyZW50X2Jsb2NrX3R5cGVfaW5kZXggPT09IHByZXZpb3VzX2Jsb2NrX2luZGV4KSB7CiAgICAJCQkJaWZfYmxvY2tzW2N1cnJlbnRfYmxvY2tfdHlwZV9pbmRleF0ucChjdHgsIGRpcnR5KTsKICAgIAkJCX0gZWxzZSB7CiAgICAJCQkJZ3JvdXBfb3V0cm9zKCk7CgogICAgCQkJCXRyYW5zaXRpb25fb3V0KGlmX2Jsb2Nrc1twcmV2aW91c19ibG9ja19pbmRleF0sIDEsIDEsICgpID0+IHsKICAgIAkJCQkJaWZfYmxvY2tzW3ByZXZpb3VzX2Jsb2NrX2luZGV4XSA9IG51bGw7CiAgICAJCQkJfSk7CgogICAgCQkJCWNoZWNrX291dHJvcygpOwogICAgCQkJCWlmX2Jsb2NrID0gaWZfYmxvY2tzW2N1cnJlbnRfYmxvY2tfdHlwZV9pbmRleF07CgogICAgCQkJCWlmICghaWZfYmxvY2spIHsKICAgIAkJCQkJaWZfYmxvY2sgPSBpZl9ibG9ja3NbY3VycmVudF9ibG9ja190eXBlX2luZGV4XSA9IGlmX2Jsb2NrX2NyZWF0b3JzW2N1cnJlbnRfYmxvY2tfdHlwZV9pbmRleF0oY3R4KTsKICAgIAkJCQkJaWZfYmxvY2suYygpOwogICAgCQkJCX0gZWxzZSB7CiAgICAJCQkJCWlmX2Jsb2NrLnAoY3R4LCBkaXJ0eSk7CiAgICAJCQkJfQoKICAgIAkJCQl0cmFuc2l0aW9uX2luKGlmX2Jsb2NrLCAxKTsKICAgIAkJCQlpZl9ibG9jay5tKGlmX2Jsb2NrX2FuY2hvci5wYXJlbnROb2RlLCBpZl9ibG9ja19hbmNob3IpOwogICAgCQkJfQogICAgCQl9LAogICAgCQlpOiBmdW5jdGlvbiBpbnRybyhsb2NhbCkgewogICAgCQkJaWYgKGN1cnJlbnQpIHJldHVybjsKICAgIAkJCXRyYW5zaXRpb25faW4oaWZfYmxvY2spOwogICAgCQkJY3VycmVudCA9IHRydWU7CiAgICAJCX0sCiAgICAJCW86IGZ1bmN0aW9uIG91dHJvKGxvY2FsKSB7CiAgICAJCQl0cmFuc2l0aW9uX291dChpZl9ibG9jayk7CiAgICAJCQljdXJyZW50ID0gZmFsc2U7CiAgICAJCX0sCiAgICAJCWQ6IGZ1bmN0aW9uIGRlc3Ryb3koZGV0YWNoaW5nKSB7CiAgICAJCQlpZl9ibG9ja3NbY3VycmVudF9ibG9ja190eXBlX2luZGV4XS5kKGRldGFjaGluZyk7CiAgICAJCQlpZiAoZGV0YWNoaW5nKSBkZXRhY2hfZGV2KGlmX2Jsb2NrX2FuY2hvcik7CiAgICAJCX0KICAgIAl9OwoKICAgIAlkaXNwYXRjaF9kZXYoIlN2ZWx0ZVJlZ2lzdGVyQmxvY2siLCB7CiAgICAJCWJsb2NrLAogICAgCQlpZDogY3JlYXRlX2ZyYWdtZW50JGEubmFtZSwKICAgIAkJdHlwZTogImNvbXBvbmVudCIsCiAgICAJCXNvdXJjZTogIiIsCiAgICAJCWN0eAogICAgCX0pOwoKICAgIAlyZXR1cm4gYmxvY2s7CiAgICB9CgogICAgZnVuY3Rpb24gaW5zdGFuY2UkYSgkJHNlbGYsICQkcHJvcHMsICQkaW52YWxpZGF0ZSkgewogICAgCWxldCBjbGFzc2VzOwoKICAgIAljb25zdCBvbWl0X3Byb3BzX25hbWVzID0gWwogICAgCQkiY2xhc3MiLCJib2R5IiwiYm90dG9tIiwiaGVhZGluZyIsImxlZnQiLCJsaXN0IiwibWlkZGxlIiwib2JqZWN0IiwicmlnaHQiLCJ0b3AiLCJocmVmIiwic3JjIiwiYWx0IgogICAgCV07CgogICAgCWxldCAkJHJlc3RQcm9wcyA9IGNvbXB1dGVfcmVzdF9wcm9wcygkJHByb3BzLCBvbWl0X3Byb3BzX25hbWVzKTsKICAgIAlsZXQgeyAkJHNsb3RzOiBzbG90cyA9IHt9LCAkJHNjb3BlIH0gPSAkJHByb3BzOwogICAgCXZhbGlkYXRlX3Nsb3RzKCJNZWRpYSIsIHNsb3RzLCBbJ2RlZmF1bHQnXSk7CiAgICAJbGV0IHsgY2xhc3M6IGNsYXNzTmFtZSA9ICIiIH0gPSAkJHByb3BzOwogICAgCWxldCB7IGJvZHkgPSBmYWxzZSB9ID0gJCRwcm9wczsKICAgIAlsZXQgeyBib3R0b20gPSBmYWxzZSB9ID0gJCRwcm9wczsKICAgIAlsZXQgeyBoZWFkaW5nID0gZmFsc2UgfSA9ICQkcHJvcHM7CiAgICAJbGV0IHsgbGVmdCA9IGZhbHNlIH0gPSAkJHByb3BzOwogICAgCWxldCB7IGxpc3QgPSBmYWxzZSB9ID0gJCRwcm9wczsKICAgIAlsZXQgeyBtaWRkbGUgPSBmYWxzZSB9ID0gJCRwcm9wczsKICAgIAlsZXQgeyBvYmplY3QgPSBmYWxzZSB9ID0gJCRwcm9wczsKICAgIAlsZXQgeyByaWdodCA9IGZhbHNlIH0gPSAkJHByb3BzOwogICAgCWxldCB7IHRvcCA9IGZhbHNlIH0gPSAkJHByb3BzOwogICAgCWxldCB7IGhyZWYgPSAiIiB9ID0gJCRwcm9wczsKICAgIAlsZXQgeyBzcmMgPSAiIiB9ID0gJCRwcm9wczsKICAgIAlsZXQgeyBhbHQgPSAiIiB9ID0gJCRwcm9wczsKCiAgICAJJCRzZWxmLiQkc2V0ID0gJCRuZXdfcHJvcHMgPT4gewogICAgCQkkJHByb3BzID0gYXNzaWduKGFzc2lnbih7fSwgJCRwcm9wcyksIGV4Y2x1ZGVfaW50ZXJuYWxfcHJvcHMoJCRuZXdfcHJvcHMpKTsKICAgIAkJJCRpbnZhbGlkYXRlKDcsICQkcmVzdFByb3BzID0gY29tcHV0ZV9yZXN0X3Byb3BzKCQkcHJvcHMsIG9taXRfcHJvcHNfbmFtZXMpKTsKICAgIAkJaWYgKCJjbGFzcyIgaW4gJCRuZXdfcHJvcHMpICQkaW52YWxpZGF0ZSg4LCBjbGFzc05hbWUgPSAkJG5ld19wcm9wcy5jbGFzcyk7CiAgICAJCWlmICgiYm9keSIgaW4gJCRuZXdfcHJvcHMpICQkaW52YWxpZGF0ZSg5LCBib2R5ID0gJCRuZXdfcHJvcHMuYm9keSk7CiAgICAJCWlmICgiYm90dG9tIiBpbiAkJG5ld19wcm9wcykgJCRpbnZhbGlkYXRlKDEwLCBib3R0b20gPSAkJG5ld19wcm9wcy5ib3R0b20pOwogICAgCQlpZiAoImhlYWRpbmciIGluICQkbmV3X3Byb3BzKSAkJGludmFsaWRhdGUoMCwgaGVhZGluZyA9ICQkbmV3X3Byb3BzLmhlYWRpbmcpOwogICAgCQlpZiAoImxlZnQiIGluICQkbmV3X3Byb3BzKSAkJGludmFsaWRhdGUoMTEsIGxlZnQgPSAkJG5ld19wcm9wcy5sZWZ0KTsKICAgIAkJaWYgKCJsaXN0IiBpbiAkJG5ld19wcm9wcykgJCRpbnZhbGlkYXRlKDEsIGxpc3QgPSAkJG5ld19wcm9wcy5saXN0KTsKICAgIAkJaWYgKCJtaWRkbGUiIGluICQkbmV3X3Byb3BzKSAkJGludmFsaWRhdGUoMTIsIG1pZGRsZSA9ICQkbmV3X3Byb3BzLm1pZGRsZSk7CiAgICAJCWlmICgib2JqZWN0IiBpbiAkJG5ld19wcm9wcykgJCRpbnZhbGlkYXRlKDIsIG9iamVjdCA9ICQkbmV3X3Byb3BzLm9iamVjdCk7CiAgICAJCWlmICgicmlnaHQiIGluICQkbmV3X3Byb3BzKSAkJGludmFsaWRhdGUoMTMsIHJpZ2h0ID0gJCRuZXdfcHJvcHMucmlnaHQpOwogICAgCQlpZiAoInRvcCIgaW4gJCRuZXdfcHJvcHMpICQkaW52YWxpZGF0ZSgxNCwgdG9wID0gJCRuZXdfcHJvcHMudG9wKTsKICAgIAkJaWYgKCJocmVmIiBpbiAkJG5ld19wcm9wcykgJCRpbnZhbGlkYXRlKDMsIGhyZWYgPSAkJG5ld19wcm9wcy5ocmVmKTsKICAgIAkJaWYgKCJzcmMiIGluICQkbmV3X3Byb3BzKSAkJGludmFsaWRhdGUoNCwgc3JjID0gJCRuZXdfcHJvcHMuc3JjKTsKICAgIAkJaWYgKCJhbHQiIGluICQkbmV3X3Byb3BzKSAkJGludmFsaWRhdGUoNSwgYWx0ID0gJCRuZXdfcHJvcHMuYWx0KTsKICAgIAkJaWYgKCIkJHNjb3BlIiBpbiAkJG5ld19wcm9wcykgJCRpbnZhbGlkYXRlKDE1LCAkJHNjb3BlID0gJCRuZXdfcHJvcHMuJCRzY29wZSk7CiAgICAJfTsKCiAgICAJJCRzZWxmLiRjYXB0dXJlX3N0YXRlID0gKCkgPT4gKHsKICAgIAkJY2xhc3NuYW1lcywKICAgIAkJY2xhc3NOYW1lLAogICAgCQlib2R5LAogICAgCQlib3R0b20sCiAgICAJCWhlYWRpbmcsCiAgICAJCWxlZnQsCiAgICAJCWxpc3QsCiAgICAJCW1pZGRsZSwKICAgIAkJb2JqZWN0LAogICAgCQlyaWdodCwKICAgIAkJdG9wLAogICAgCQlocmVmLAogICAgCQlzcmMsCiAgICAJCWFsdCwKICAgIAkJY2xhc3NlcwogICAgCX0pOwoKICAgIAkkJHNlbGYuJGluamVjdF9zdGF0ZSA9ICQkbmV3X3Byb3BzID0+IHsKICAgIAkJaWYgKCJjbGFzc05hbWUiIGluICQkcHJvcHMpICQkaW52YWxpZGF0ZSg4LCBjbGFzc05hbWUgPSAkJG5ld19wcm9wcy5jbGFzc05hbWUpOwogICAgCQlpZiAoImJvZHkiIGluICQkcHJvcHMpICQkaW52YWxpZGF0ZSg5LCBib2R5ID0gJCRuZXdfcHJvcHMuYm9keSk7CiAgICAJCWlmICgiYm90dG9tIiBpbiAkJHByb3BzKSAkJGludmFsaWRhdGUoMTAsIGJvdHRvbSA9ICQkbmV3X3Byb3BzLmJvdHRvbSk7CiAgICAJCWlmICgiaGVhZGluZyIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDAsIGhlYWRpbmcgPSAkJG5ld19wcm9wcy5oZWFkaW5nKTsKICAgIAkJaWYgKCJsZWZ0IiBpbiAkJHByb3BzKSAkJGludmFsaWRhdGUoMTEsIGxlZnQgPSAkJG5ld19wcm9wcy5sZWZ0KTsKICAgIAkJaWYgKCJsaXN0IiBpbiAkJHByb3BzKSAkJGludmFsaWRhdGUoMSwgbGlzdCA9ICQkbmV3X3Byb3BzLmxpc3QpOwogICAgCQlpZiAoIm1pZGRsZSIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDEyLCBtaWRkbGUgPSAkJG5ld19wcm9wcy5taWRkbGUpOwogICAgCQlpZiAoIm9iamVjdCIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDIsIG9iamVjdCA9ICQkbmV3X3Byb3BzLm9iamVjdCk7CiAgICAJCWlmICgicmlnaHQiIGluICQkcHJvcHMpICQkaW52YWxpZGF0ZSgxMywgcmlnaHQgPSAkJG5ld19wcm9wcy5yaWdodCk7CiAgICAJCWlmICgidG9wIiBpbiAkJHByb3BzKSAkJGludmFsaWRhdGUoMTQsIHRvcCA9ICQkbmV3X3Byb3BzLnRvcCk7CiAgICAJCWlmICgiaHJlZiIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDMsIGhyZWYgPSAkJG5ld19wcm9wcy5ocmVmKTsKICAgIAkJaWYgKCJzcmMiIGluICQkcHJvcHMpICQkaW52YWxpZGF0ZSg0LCBzcmMgPSAkJG5ld19wcm9wcy5zcmMpOwogICAgCQlpZiAoImFsdCIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDUsIGFsdCA9ICQkbmV3X3Byb3BzLmFsdCk7CiAgICAJCWlmICgiY2xhc3NlcyIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDYsIGNsYXNzZXMgPSAkJG5ld19wcm9wcy5jbGFzc2VzKTsKICAgIAl9OwoKICAgIAlpZiAoJCRwcm9wcyAmJiAiJCRpbmplY3QiIGluICQkcHJvcHMpIHsKICAgIAkJJCRzZWxmLiRpbmplY3Rfc3RhdGUoJCRwcm9wcy4kJGluamVjdCk7CiAgICAJfQoKICAgIAkkJHNlbGYuJCQudXBkYXRlID0gKCkgPT4gewogICAgCQlpZiAoJCRzZWxmLiQkLmRpcnR5ICYgLypjbGFzc05hbWUsIGJvZHksIGhlYWRpbmcsIGxlZnQsIHJpZ2h0LCB0b3AsIGJvdHRvbSwgbWlkZGxlLCBvYmplY3QsIGxpc3QqLyAzMjUxOSkgewogICAgCQkJICQkaW52YWxpZGF0ZSg2LCBjbGFzc2VzID0gY2xhc3NuYW1lcyhjbGFzc05hbWUsIHsKICAgIAkJCQkibWVkaWEtYm9keSI6IGJvZHksCiAgICAJCQkJIm1lZGlhLWhlYWRpbmciOiBoZWFkaW5nLAogICAgCQkJCSJtZWRpYS1sZWZ0IjogbGVmdCwKICAgIAkJCQkibWVkaWEtcmlnaHQiOiByaWdodCwKICAgIAkJCQkibWVkaWEtdG9wIjogdG9wLAogICAgCQkJCSJtZWRpYS1ib3R0b20iOiBib3R0b20sCiAgICAJCQkJIm1lZGlhLW1pZGRsZSI6IG1pZGRsZSwKICAgIAkJCQkibWVkaWEtb2JqZWN0Ijogb2JqZWN0LAogICAgCQkJCSJtZWRpYS1saXN0IjogbGlzdCwKICAgIAkJCQltZWRpYTogIWJvZHkgJiYgIWhlYWRpbmcgJiYgIWxlZnQgJiYgIXJpZ2h0ICYmICF0b3AgJiYgIWJvdHRvbSAmJiAhbWlkZGxlICYmICFvYmplY3QgJiYgIWxpc3QKICAgIAkJCX0pKTsKICAgIAkJfQogICAgCX07CgogICAgCXJldHVybiBbCiAgICAJCWhlYWRpbmcsCiAgICAJCWxpc3QsCiAgICAJCW9iamVjdCwKICAgIAkJaHJlZiwKICAgIAkJc3JjLAogICAgCQlhbHQsCiAgICAJCWNsYXNzZXMsCiAgICAJCSQkcmVzdFByb3BzLAogICAgCQljbGFzc05hbWUsCiAgICAJCWJvZHksCiAgICAJCWJvdHRvbSwKICAgIAkJbGVmdCwKICAgIAkJbWlkZGxlLAogICAgCQlyaWdodCwKICAgIAkJdG9wLAogICAgCQkkJHNjb3BlLAogICAgCQlzbG90cwogICAgCV07CiAgICB9CgogICAgY2xhc3MgTWVkaWEgZXh0ZW5kcyBTdmVsdGVDb21wb25lbnREZXYgewogICAgCWNvbnN0cnVjdG9yKG9wdGlvbnMpIHsKICAgIAkJc3VwZXIob3B0aW9ucyk7CgogICAgCQlpbml0KHRoaXMsIG9wdGlvbnMsIGluc3RhbmNlJGEsIGNyZWF0ZV9mcmFnbWVudCRhLCBzYWZlX25vdF9lcXVhbCwgewogICAgCQkJY2xhc3M6IDgsCiAgICAJCQlib2R5OiA5LAogICAgCQkJYm90dG9tOiAxMCwKICAgIAkJCWhlYWRpbmc6IDAsCiAgICAJCQlsZWZ0OiAxMSwKICAgIAkJCWxpc3Q6IDEsCiAgICAJCQltaWRkbGU6IDEyLAogICAgCQkJb2JqZWN0OiAyLAogICAgCQkJcmlnaHQ6IDEzLAogICAgCQkJdG9wOiAxNCwKICAgIAkJCWhyZWY6IDMsCiAgICAJCQlzcmM6IDQsCiAgICAJCQlhbHQ6IDUKICAgIAkJfSk7CgogICAgCQlkaXNwYXRjaF9kZXYoIlN2ZWx0ZVJlZ2lzdGVyQ29tcG9uZW50IiwgewogICAgCQkJY29tcG9uZW50OiB0aGlzLAogICAgCQkJdGFnTmFtZTogIk1lZGlhIiwKICAgIAkJCW9wdGlvbnMsCiAgICAJCQlpZDogY3JlYXRlX2ZyYWdtZW50JGEubmFtZQogICAgCQl9KTsKICAgIAl9CgogICAgCWdldCBjbGFzcygpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8TWVkaWE+OiBQcm9wcyBjYW5ub3QgYmUgcmVhZCBkaXJlY3RseSBmcm9tIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlzZXQgY2xhc3ModmFsdWUpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8TWVkaWE+OiBQcm9wcyBjYW5ub3QgYmUgc2V0IGRpcmVjdGx5IG9uIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlnZXQgYm9keSgpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8TWVkaWE+OiBQcm9wcyBjYW5ub3QgYmUgcmVhZCBkaXJlY3RseSBmcm9tIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlzZXQgYm9keSh2YWx1ZSkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxNZWRpYT46IFByb3BzIGNhbm5vdCBiZSBzZXQgZGlyZWN0bHkgb24gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCWdldCBib3R0b20oKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPE1lZGlhPjogUHJvcHMgY2Fubm90IGJlIHJlYWQgZGlyZWN0bHkgZnJvbSB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJc2V0IGJvdHRvbSh2YWx1ZSkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxNZWRpYT46IFByb3BzIGNhbm5vdCBiZSBzZXQgZGlyZWN0bHkgb24gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCWdldCBoZWFkaW5nKCkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxNZWRpYT46IFByb3BzIGNhbm5vdCBiZSByZWFkIGRpcmVjdGx5IGZyb20gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCXNldCBoZWFkaW5nKHZhbHVlKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPE1lZGlhPjogUHJvcHMgY2Fubm90IGJlIHNldCBkaXJlY3RseSBvbiB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJZ2V0IGxlZnQoKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPE1lZGlhPjogUHJvcHMgY2Fubm90IGJlIHJlYWQgZGlyZWN0bHkgZnJvbSB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJc2V0IGxlZnQodmFsdWUpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8TWVkaWE+OiBQcm9wcyBjYW5ub3QgYmUgc2V0IGRpcmVjdGx5IG9uIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlnZXQgbGlzdCgpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8TWVkaWE+OiBQcm9wcyBjYW5ub3QgYmUgcmVhZCBkaXJlY3RseSBmcm9tIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlzZXQgbGlzdCh2YWx1ZSkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxNZWRpYT46IFByb3BzIGNhbm5vdCBiZSBzZXQgZGlyZWN0bHkgb24gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCWdldCBtaWRkbGUoKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPE1lZGlhPjogUHJvcHMgY2Fubm90IGJlIHJlYWQgZGlyZWN0bHkgZnJvbSB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJc2V0IG1pZGRsZSh2YWx1ZSkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxNZWRpYT46IFByb3BzIGNhbm5vdCBiZSBzZXQgZGlyZWN0bHkgb24gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCWdldCBvYmplY3QoKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPE1lZGlhPjogUHJvcHMgY2Fubm90IGJlIHJlYWQgZGlyZWN0bHkgZnJvbSB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJc2V0IG9iamVjdCh2YWx1ZSkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxNZWRpYT46IFByb3BzIGNhbm5vdCBiZSBzZXQgZGlyZWN0bHkgb24gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCWdldCByaWdodCgpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8TWVkaWE+OiBQcm9wcyBjYW5ub3QgYmUgcmVhZCBkaXJlY3RseSBmcm9tIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlzZXQgcmlnaHQodmFsdWUpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8TWVkaWE+OiBQcm9wcyBjYW5ub3QgYmUgc2V0IGRpcmVjdGx5IG9uIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlnZXQgdG9wKCkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxNZWRpYT46IFByb3BzIGNhbm5vdCBiZSByZWFkIGRpcmVjdGx5IGZyb20gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCXNldCB0b3AodmFsdWUpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8TWVkaWE+OiBQcm9wcyBjYW5ub3QgYmUgc2V0IGRpcmVjdGx5IG9uIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlnZXQgaHJlZigpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8TWVkaWE+OiBQcm9wcyBjYW5ub3QgYmUgcmVhZCBkaXJlY3RseSBmcm9tIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlzZXQgaHJlZih2YWx1ZSkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxNZWRpYT46IFByb3BzIGNhbm5vdCBiZSBzZXQgZGlyZWN0bHkgb24gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCWdldCBzcmMoKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPE1lZGlhPjogUHJvcHMgY2Fubm90IGJlIHJlYWQgZGlyZWN0bHkgZnJvbSB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJc2V0IHNyYyh2YWx1ZSkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxNZWRpYT46IFByb3BzIGNhbm5vdCBiZSBzZXQgZGlyZWN0bHkgb24gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCWdldCBhbHQoKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPE1lZGlhPjogUHJvcHMgY2Fubm90IGJlIHJlYWQgZGlyZWN0bHkgZnJvbSB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJc2V0IGFsdCh2YWx1ZSkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxNZWRpYT46IFByb3BzIGNhbm5vdCBiZSBzZXQgZGlyZWN0bHkgb24gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CiAgICB9CgogICAgLyogbm9kZV9tb2R1bGVzL3N2ZWx0ZXN0cmFwL3NyYy9OYXYuc3ZlbHRlIGdlbmVyYXRlZCBieSBTdmVsdGUgdjMuMzEuMiAqLwogICAgY29uc3QgZmlsZSRiID0gIm5vZGVfbW9kdWxlcy9zdmVsdGVzdHJhcC9zcmMvTmF2LnN2ZWx0ZSI7CgogICAgZnVuY3Rpb24gY3JlYXRlX2ZyYWdtZW50JGIoY3R4KSB7CiAgICAJbGV0IHVsOwogICAgCWxldCBjdXJyZW50OwogICAgCWNvbnN0IGRlZmF1bHRfc2xvdF90ZW1wbGF0ZSA9IC8qI3Nsb3RzKi8gY3R4WzEyXS5kZWZhdWx0OwogICAgCWNvbnN0IGRlZmF1bHRfc2xvdCA9IGNyZWF0ZV9zbG90KGRlZmF1bHRfc2xvdF90ZW1wbGF0ZSwgY3R4LCAvKiQkc2NvcGUqLyBjdHhbMTFdLCBudWxsKTsKICAgIAlsZXQgdWxfbGV2ZWxzID0gWy8qJCRyZXN0UHJvcHMqLyBjdHhbMV0sIHsgY2xhc3M6IC8qY2xhc3NlcyovIGN0eFswXSB9XTsKICAgIAlsZXQgdWxfZGF0YSA9IHt9OwoKICAgIAlmb3IgKGxldCBpID0gMDsgaSA8IHVsX2xldmVscy5sZW5ndGg7IGkgKz0gMSkgewogICAgCQl1bF9kYXRhID0gYXNzaWduKHVsX2RhdGEsIHVsX2xldmVsc1tpXSk7CiAgICAJfQoKICAgIAljb25zdCBibG9jayA9IHsKICAgIAkJYzogZnVuY3Rpb24gY3JlYXRlKCkgewogICAgCQkJdWwgPSBlbGVtZW50KCJ1bCIpOwogICAgCQkJaWYgKGRlZmF1bHRfc2xvdCkgZGVmYXVsdF9zbG90LmMoKTsKICAgIAkJCXNldF9hdHRyaWJ1dGVzKHVsLCB1bF9kYXRhKTsKICAgIAkJCWFkZF9sb2NhdGlvbih1bCwgZmlsZSRiLCAzOSwgMCwgOTQxKTsKICAgIAkJfSwKICAgIAkJbDogZnVuY3Rpb24gY2xhaW0obm9kZXMpIHsKICAgIAkJCXRocm93IG5ldyBFcnJvcigib3B0aW9ucy5oeWRyYXRlIG9ubHkgd29ya3MgaWYgdGhlIGNvbXBvbmVudCB3YXMgY29tcGlsZWQgd2l0aCB0aGUgYGh5ZHJhdGFibGU6IHRydWVgIG9wdGlvbiIpOwogICAgCQl9LAogICAgCQltOiBmdW5jdGlvbiBtb3VudCh0YXJnZXQsIGFuY2hvcikgewogICAgCQkJaW5zZXJ0X2Rldih0YXJnZXQsIHVsLCBhbmNob3IpOwoKICAgIAkJCWlmIChkZWZhdWx0X3Nsb3QpIHsKICAgIAkJCQlkZWZhdWx0X3Nsb3QubSh1bCwgbnVsbCk7CiAgICAJCQl9CgogICAgCQkJY3VycmVudCA9IHRydWU7CiAgICAJCX0sCiAgICAJCXA6IGZ1bmN0aW9uIHVwZGF0ZShjdHgsIFtkaXJ0eV0pIHsKICAgIAkJCWlmIChkZWZhdWx0X3Nsb3QpIHsKICAgIAkJCQlpZiAoZGVmYXVsdF9zbG90LnAgJiYgZGlydHkgJiAvKiQkc2NvcGUqLyAyMDQ4KSB7CiAgICAJCQkJCXVwZGF0ZV9zbG90KGRlZmF1bHRfc2xvdCwgZGVmYXVsdF9zbG90X3RlbXBsYXRlLCBjdHgsIC8qJCRzY29wZSovIGN0eFsxMV0sIGRpcnR5LCBudWxsLCBudWxsKTsKICAgIAkJCQl9CiAgICAJCQl9CgogICAgCQkJc2V0X2F0dHJpYnV0ZXModWwsIHVsX2RhdGEgPSBnZXRfc3ByZWFkX3VwZGF0ZSh1bF9sZXZlbHMsIFsKICAgIAkJCQlkaXJ0eSAmIC8qJCRyZXN0UHJvcHMqLyAyICYmIC8qJCRyZXN0UHJvcHMqLyBjdHhbMV0sCiAgICAJCQkJKCFjdXJyZW50IHx8IGRpcnR5ICYgLypjbGFzc2VzKi8gMSkgJiYgeyBjbGFzczogLypjbGFzc2VzKi8gY3R4WzBdIH0KICAgIAkJCV0pKTsKICAgIAkJfSwKICAgIAkJaTogZnVuY3Rpb24gaW50cm8obG9jYWwpIHsKICAgIAkJCWlmIChjdXJyZW50KSByZXR1cm47CiAgICAJCQl0cmFuc2l0aW9uX2luKGRlZmF1bHRfc2xvdCwgbG9jYWwpOwogICAgCQkJY3VycmVudCA9IHRydWU7CiAgICAJCX0sCiAgICAJCW86IGZ1bmN0aW9uIG91dHJvKGxvY2FsKSB7CiAgICAJCQl0cmFuc2l0aW9uX291dChkZWZhdWx0X3Nsb3QsIGxvY2FsKTsKICAgIAkJCWN1cnJlbnQgPSBmYWxzZTsKICAgIAkJfSwKICAgIAkJZDogZnVuY3Rpb24gZGVzdHJveShkZXRhY2hpbmcpIHsKICAgIAkJCWlmIChkZXRhY2hpbmcpIGRldGFjaF9kZXYodWwpOwogICAgCQkJaWYgKGRlZmF1bHRfc2xvdCkgZGVmYXVsdF9zbG90LmQoZGV0YWNoaW5nKTsKICAgIAkJfQogICAgCX07CgogICAgCWRpc3BhdGNoX2RldigiU3ZlbHRlUmVnaXN0ZXJCbG9jayIsIHsKICAgIAkJYmxvY2ssCiAgICAJCWlkOiBjcmVhdGVfZnJhZ21lbnQkYi5uYW1lLAogICAgCQl0eXBlOiAiY29tcG9uZW50IiwKICAgIAkJc291cmNlOiAiIiwKICAgIAkJY3R4CiAgICAJfSk7CgogICAgCXJldHVybiBibG9jazsKICAgIH0KCiAgICBmdW5jdGlvbiBnZXRWZXJ0aWNhbENsYXNzKHZlcnRpY2FsKSB7CiAgICAJaWYgKHZlcnRpY2FsID09PSBmYWxzZSkgewogICAgCQlyZXR1cm4gZmFsc2U7CiAgICAJfSBlbHNlIGlmICh2ZXJ0aWNhbCA9PT0gdHJ1ZSB8fCB2ZXJ0aWNhbCA9PT0gInhzIikgewogICAgCQlyZXR1cm4gImZsZXgtY29sdW1uIjsKICAgIAl9CgogICAgCXJldHVybiBgZmxleC0ke3ZlcnRpY2FsfS1jb2x1bW5gOwogICAgfQoKICAgIGZ1bmN0aW9uIGluc3RhbmNlJGIoJCRzZWxmLCAkJHByb3BzLCAkJGludmFsaWRhdGUpIHsKICAgIAlsZXQgY2xhc3NlczsKCiAgICAJY29uc3Qgb21pdF9wcm9wc19uYW1lcyA9IFsKICAgIAkJImNsYXNzIiwidGFicyIsInBpbGxzIiwidmVydGljYWwiLCJob3Jpem9udGFsIiwianVzdGlmaWVkIiwiZmlsbCIsIm5hdmJhciIsImNhcmQiCiAgICAJXTsKCiAgICAJbGV0ICQkcmVzdFByb3BzID0gY29tcHV0ZV9yZXN0X3Byb3BzKCQkcHJvcHMsIG9taXRfcHJvcHNfbmFtZXMpOwogICAgCWxldCB7ICQkc2xvdHM6IHNsb3RzID0ge30sICQkc2NvcGUgfSA9ICQkcHJvcHM7CiAgICAJdmFsaWRhdGVfc2xvdHMoIk5hdiIsIHNsb3RzLCBbJ2RlZmF1bHQnXSk7CiAgICAJbGV0IHsgY2xhc3M6IGNsYXNzTmFtZSA9ICIiIH0gPSAkJHByb3BzOwogICAgCWxldCB7IHRhYnMgPSBmYWxzZSB9ID0gJCRwcm9wczsKICAgIAlsZXQgeyBwaWxscyA9IGZhbHNlIH0gPSAkJHByb3BzOwogICAgCWxldCB7IHZlcnRpY2FsID0gZmFsc2UgfSA9ICQkcHJvcHM7CiAgICAJbGV0IHsgaG9yaXpvbnRhbCA9ICIiIH0gPSAkJHByb3BzOwogICAgCWxldCB7IGp1c3RpZmllZCA9IGZhbHNlIH0gPSAkJHByb3BzOwogICAgCWxldCB7IGZpbGwgPSBmYWxzZSB9ID0gJCRwcm9wczsKICAgIAlsZXQgeyBuYXZiYXIgPSBmYWxzZSB9ID0gJCRwcm9wczsKICAgIAlsZXQgeyBjYXJkID0gZmFsc2UgfSA9ICQkcHJvcHM7CgogICAgCSQkc2VsZi4kJHNldCA9ICQkbmV3X3Byb3BzID0+IHsKICAgIAkJJCRwcm9wcyA9IGFzc2lnbihhc3NpZ24oe30sICQkcHJvcHMpLCBleGNsdWRlX2ludGVybmFsX3Byb3BzKCQkbmV3X3Byb3BzKSk7CiAgICAJCSQkaW52YWxpZGF0ZSgxLCAkJHJlc3RQcm9wcyA9IGNvbXB1dGVfcmVzdF9wcm9wcygkJHByb3BzLCBvbWl0X3Byb3BzX25hbWVzKSk7CiAgICAJCWlmICgiY2xhc3MiIGluICQkbmV3X3Byb3BzKSAkJGludmFsaWRhdGUoMiwgY2xhc3NOYW1lID0gJCRuZXdfcHJvcHMuY2xhc3MpOwogICAgCQlpZiAoInRhYnMiIGluICQkbmV3X3Byb3BzKSAkJGludmFsaWRhdGUoMywgdGFicyA9ICQkbmV3X3Byb3BzLnRhYnMpOwogICAgCQlpZiAoInBpbGxzIiBpbiAkJG5ld19wcm9wcykgJCRpbnZhbGlkYXRlKDQsIHBpbGxzID0gJCRuZXdfcHJvcHMucGlsbHMpOwogICAgCQlpZiAoInZlcnRpY2FsIiBpbiAkJG5ld19wcm9wcykgJCRpbnZhbGlkYXRlKDUsIHZlcnRpY2FsID0gJCRuZXdfcHJvcHMudmVydGljYWwpOwogICAgCQlpZiAoImhvcml6b250YWwiIGluICQkbmV3X3Byb3BzKSAkJGludmFsaWRhdGUoNiwgaG9yaXpvbnRhbCA9ICQkbmV3X3Byb3BzLmhvcml6b250YWwpOwogICAgCQlpZiAoImp1c3RpZmllZCIgaW4gJCRuZXdfcHJvcHMpICQkaW52YWxpZGF0ZSg3LCBqdXN0aWZpZWQgPSAkJG5ld19wcm9wcy5qdXN0aWZpZWQpOwogICAgCQlpZiAoImZpbGwiIGluICQkbmV3X3Byb3BzKSAkJGludmFsaWRhdGUoOCwgZmlsbCA9ICQkbmV3X3Byb3BzLmZpbGwpOwogICAgCQlpZiAoIm5hdmJhciIgaW4gJCRuZXdfcHJvcHMpICQkaW52YWxpZGF0ZSg5LCBuYXZiYXIgPSAkJG5ld19wcm9wcy5uYXZiYXIpOwogICAgCQlpZiAoImNhcmQiIGluICQkbmV3X3Byb3BzKSAkJGludmFsaWRhdGUoMTAsIGNhcmQgPSAkJG5ld19wcm9wcy5jYXJkKTsKICAgIAkJaWYgKCIkJHNjb3BlIiBpbiAkJG5ld19wcm9wcykgJCRpbnZhbGlkYXRlKDExLCAkJHNjb3BlID0gJCRuZXdfcHJvcHMuJCRzY29wZSk7CiAgICAJfTsKCiAgICAJJCRzZWxmLiRjYXB0dXJlX3N0YXRlID0gKCkgPT4gKHsKICAgIAkJY2xhc3NuYW1lcywKICAgIAkJY2xhc3NOYW1lLAogICAgCQl0YWJzLAogICAgCQlwaWxscywKICAgIAkJdmVydGljYWwsCiAgICAJCWhvcml6b250YWwsCiAgICAJCWp1c3RpZmllZCwKICAgIAkJZmlsbCwKICAgIAkJbmF2YmFyLAogICAgCQljYXJkLAogICAgCQlnZXRWZXJ0aWNhbENsYXNzLAogICAgCQljbGFzc2VzCiAgICAJfSk7CgogICAgCSQkc2VsZi4kaW5qZWN0X3N0YXRlID0gJCRuZXdfcHJvcHMgPT4gewogICAgCQlpZiAoImNsYXNzTmFtZSIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDIsIGNsYXNzTmFtZSA9ICQkbmV3X3Byb3BzLmNsYXNzTmFtZSk7CiAgICAJCWlmICgidGFicyIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDMsIHRhYnMgPSAkJG5ld19wcm9wcy50YWJzKTsKICAgIAkJaWYgKCJwaWxscyIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDQsIHBpbGxzID0gJCRuZXdfcHJvcHMucGlsbHMpOwogICAgCQlpZiAoInZlcnRpY2FsIiBpbiAkJHByb3BzKSAkJGludmFsaWRhdGUoNSwgdmVydGljYWwgPSAkJG5ld19wcm9wcy52ZXJ0aWNhbCk7CiAgICAJCWlmICgiaG9yaXpvbnRhbCIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDYsIGhvcml6b250YWwgPSAkJG5ld19wcm9wcy5ob3Jpem9udGFsKTsKICAgIAkJaWYgKCJqdXN0aWZpZWQiIGluICQkcHJvcHMpICQkaW52YWxpZGF0ZSg3LCBqdXN0aWZpZWQgPSAkJG5ld19wcm9wcy5qdXN0aWZpZWQpOwogICAgCQlpZiAoImZpbGwiIGluICQkcHJvcHMpICQkaW52YWxpZGF0ZSg4LCBmaWxsID0gJCRuZXdfcHJvcHMuZmlsbCk7CiAgICAJCWlmICgibmF2YmFyIiBpbiAkJHByb3BzKSAkJGludmFsaWRhdGUoOSwgbmF2YmFyID0gJCRuZXdfcHJvcHMubmF2YmFyKTsKICAgIAkJaWYgKCJjYXJkIiBpbiAkJHByb3BzKSAkJGludmFsaWRhdGUoMTAsIGNhcmQgPSAkJG5ld19wcm9wcy5jYXJkKTsKICAgIAkJaWYgKCJjbGFzc2VzIiBpbiAkJHByb3BzKSAkJGludmFsaWRhdGUoMCwgY2xhc3NlcyA9ICQkbmV3X3Byb3BzLmNsYXNzZXMpOwogICAgCX07CgogICAgCWlmICgkJHByb3BzICYmICIkJGluamVjdCIgaW4gJCRwcm9wcykgewogICAgCQkkJHNlbGYuJGluamVjdF9zdGF0ZSgkJHByb3BzLiQkaW5qZWN0KTsKICAgIAl9CgogICAgCSQkc2VsZi4kJC51cGRhdGUgPSAoKSA9PiB7CiAgICAJCWlmICgkJHNlbGYuJCQuZGlydHkgJiAvKmNsYXNzTmFtZSwgbmF2YmFyLCBob3Jpem9udGFsLCB2ZXJ0aWNhbCwgdGFicywgY2FyZCwgcGlsbHMsIGp1c3RpZmllZCwgZmlsbCovIDIwNDQpIHsKICAgIAkJCSAkJGludmFsaWRhdGUoMCwgY2xhc3NlcyA9IGNsYXNzbmFtZXMoY2xhc3NOYW1lLCBuYXZiYXIgPyAibmF2YmFyLW5hdiIgOiAibmF2IiwgaG9yaXpvbnRhbCA/IGBqdXN0aWZ5LWNvbnRlbnQtJHtob3Jpem9udGFsfWAgOiBmYWxzZSwgZ2V0VmVydGljYWxDbGFzcyh2ZXJ0aWNhbCksIHsKICAgIAkJCQkibmF2LXRhYnMiOiB0YWJzLAogICAgCQkJCSJjYXJkLWhlYWRlci10YWJzIjogY2FyZCAmJiB0YWJzLAogICAgCQkJCSJuYXYtcGlsbHMiOiBwaWxscywKICAgIAkJCQkiY2FyZC1oZWFkZXItcGlsbHMiOiBjYXJkICYmIHBpbGxzLAogICAgCQkJCSJuYXYtanVzdGlmaWVkIjoganVzdGlmaWVkLAogICAgCQkJCSJuYXYtZmlsbCI6IGZpbGwKICAgIAkJCX0pKTsKICAgIAkJfQogICAgCX07CgogICAgCXJldHVybiBbCiAgICAJCWNsYXNzZXMsCiAgICAJCSQkcmVzdFByb3BzLAogICAgCQljbGFzc05hbWUsCiAgICAJCXRhYnMsCiAgICAJCXBpbGxzLAogICAgCQl2ZXJ0aWNhbCwKICAgIAkJaG9yaXpvbnRhbCwKICAgIAkJanVzdGlmaWVkLAogICAgCQlmaWxsLAogICAgCQluYXZiYXIsCiAgICAJCWNhcmQsCiAgICAJCSQkc2NvcGUsCiAgICAJCXNsb3RzCiAgICAJXTsKICAgIH0KCiAgICBjbGFzcyBOYXYgZXh0ZW5kcyBTdmVsdGVDb21wb25lbnREZXYgewogICAgCWNvbnN0cnVjdG9yKG9wdGlvbnMpIHsKICAgIAkJc3VwZXIob3B0aW9ucyk7CgogICAgCQlpbml0KHRoaXMsIG9wdGlvbnMsIGluc3RhbmNlJGIsIGNyZWF0ZV9mcmFnbWVudCRiLCBzYWZlX25vdF9lcXVhbCwgewogICAgCQkJY2xhc3M6IDIsCiAgICAJCQl0YWJzOiAzLAogICAgCQkJcGlsbHM6IDQsCiAgICAJCQl2ZXJ0aWNhbDogNSwKICAgIAkJCWhvcml6b250YWw6IDYsCiAgICAJCQlqdXN0aWZpZWQ6IDcsCiAgICAJCQlmaWxsOiA4LAogICAgCQkJbmF2YmFyOiA5LAogICAgCQkJY2FyZDogMTAKICAgIAkJfSk7CgogICAgCQlkaXNwYXRjaF9kZXYoIlN2ZWx0ZVJlZ2lzdGVyQ29tcG9uZW50IiwgewogICAgCQkJY29tcG9uZW50OiB0aGlzLAogICAgCQkJdGFnTmFtZTogIk5hdiIsCiAgICAJCQlvcHRpb25zLAogICAgCQkJaWQ6IGNyZWF0ZV9mcmFnbWVudCRiLm5hbWUKICAgIAkJfSk7CiAgICAJfQoKICAgIAlnZXQgY2xhc3MoKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPE5hdj46IFByb3BzIGNhbm5vdCBiZSByZWFkIGRpcmVjdGx5IGZyb20gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCXNldCBjbGFzcyh2YWx1ZSkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxOYXY+OiBQcm9wcyBjYW5ub3QgYmUgc2V0IGRpcmVjdGx5IG9uIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlnZXQgdGFicygpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8TmF2PjogUHJvcHMgY2Fubm90IGJlIHJlYWQgZGlyZWN0bHkgZnJvbSB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJc2V0IHRhYnModmFsdWUpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8TmF2PjogUHJvcHMgY2Fubm90IGJlIHNldCBkaXJlY3RseSBvbiB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJZ2V0IHBpbGxzKCkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxOYXY+OiBQcm9wcyBjYW5ub3QgYmUgcmVhZCBkaXJlY3RseSBmcm9tIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlzZXQgcGlsbHModmFsdWUpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8TmF2PjogUHJvcHMgY2Fubm90IGJlIHNldCBkaXJlY3RseSBvbiB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJZ2V0IHZlcnRpY2FsKCkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxOYXY+OiBQcm9wcyBjYW5ub3QgYmUgcmVhZCBkaXJlY3RseSBmcm9tIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlzZXQgdmVydGljYWwodmFsdWUpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8TmF2PjogUHJvcHMgY2Fubm90IGJlIHNldCBkaXJlY3RseSBvbiB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJZ2V0IGhvcml6b250YWwoKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPE5hdj46IFByb3BzIGNhbm5vdCBiZSByZWFkIGRpcmVjdGx5IGZyb20gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCXNldCBob3Jpem9udGFsKHZhbHVlKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPE5hdj46IFByb3BzIGNhbm5vdCBiZSBzZXQgZGlyZWN0bHkgb24gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCWdldCBqdXN0aWZpZWQoKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPE5hdj46IFByb3BzIGNhbm5vdCBiZSByZWFkIGRpcmVjdGx5IGZyb20gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCXNldCBqdXN0aWZpZWQodmFsdWUpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8TmF2PjogUHJvcHMgY2Fubm90IGJlIHNldCBkaXJlY3RseSBvbiB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJZ2V0IGZpbGwoKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPE5hdj46IFByb3BzIGNhbm5vdCBiZSByZWFkIGRpcmVjdGx5IGZyb20gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCXNldCBmaWxsKHZhbHVlKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPE5hdj46IFByb3BzIGNhbm5vdCBiZSBzZXQgZGlyZWN0bHkgb24gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCWdldCBuYXZiYXIoKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPE5hdj46IFByb3BzIGNhbm5vdCBiZSByZWFkIGRpcmVjdGx5IGZyb20gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCXNldCBuYXZiYXIodmFsdWUpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8TmF2PjogUHJvcHMgY2Fubm90IGJlIHNldCBkaXJlY3RseSBvbiB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJZ2V0IGNhcmQoKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPE5hdj46IFByb3BzIGNhbm5vdCBiZSByZWFkIGRpcmVjdGx5IGZyb20gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCXNldCBjYXJkKHZhbHVlKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPE5hdj46IFByb3BzIGNhbm5vdCBiZSBzZXQgZGlyZWN0bHkgb24gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CiAgICB9CgogICAgLyogbm9kZV9tb2R1bGVzL3N2ZWx0ZXN0cmFwL3NyYy9OYXZJdGVtLnN2ZWx0ZSBnZW5lcmF0ZWQgYnkgU3ZlbHRlIHYzLjMxLjIgKi8KICAgIGNvbnN0IGZpbGUkYyA9ICJub2RlX21vZHVsZXMvc3ZlbHRlc3RyYXAvc3JjL05hdkl0ZW0uc3ZlbHRlIjsKCiAgICBmdW5jdGlvbiBjcmVhdGVfZnJhZ21lbnQkYyhjdHgpIHsKICAgIAlsZXQgbGk7CiAgICAJbGV0IGN1cnJlbnQ7CiAgICAJY29uc3QgZGVmYXVsdF9zbG90X3RlbXBsYXRlID0gLyojc2xvdHMqLyBjdHhbNV0uZGVmYXVsdDsKICAgIAljb25zdCBkZWZhdWx0X3Nsb3QgPSBjcmVhdGVfc2xvdChkZWZhdWx0X3Nsb3RfdGVtcGxhdGUsIGN0eCwgLyokJHNjb3BlKi8gY3R4WzRdLCBudWxsKTsKICAgIAlsZXQgbGlfbGV2ZWxzID0gWy8qJCRyZXN0UHJvcHMqLyBjdHhbMV0sIHsgY2xhc3M6IC8qY2xhc3NlcyovIGN0eFswXSB9XTsKICAgIAlsZXQgbGlfZGF0YSA9IHt9OwoKICAgIAlmb3IgKGxldCBpID0gMDsgaSA8IGxpX2xldmVscy5sZW5ndGg7IGkgKz0gMSkgewogICAgCQlsaV9kYXRhID0gYXNzaWduKGxpX2RhdGEsIGxpX2xldmVsc1tpXSk7CiAgICAJfQoKICAgIAljb25zdCBibG9jayA9IHsKICAgIAkJYzogZnVuY3Rpb24gY3JlYXRlKCkgewogICAgCQkJbGkgPSBlbGVtZW50KCJsaSIpOwogICAgCQkJaWYgKGRlZmF1bHRfc2xvdCkgZGVmYXVsdF9zbG90LmMoKTsKICAgIAkJCXNldF9hdHRyaWJ1dGVzKGxpLCBsaV9kYXRhKTsKICAgIAkJCWFkZF9sb2NhdGlvbihsaSwgZmlsZSRjLCAxMCwgMCwgMjE5KTsKICAgIAkJfSwKICAgIAkJbDogZnVuY3Rpb24gY2xhaW0obm9kZXMpIHsKICAgIAkJCXRocm93IG5ldyBFcnJvcigib3B0aW9ucy5oeWRyYXRlIG9ubHkgd29ya3MgaWYgdGhlIGNvbXBvbmVudCB3YXMgY29tcGlsZWQgd2l0aCB0aGUgYGh5ZHJhdGFibGU6IHRydWVgIG9wdGlvbiIpOwogICAgCQl9LAogICAgCQltOiBmdW5jdGlvbiBtb3VudCh0YXJnZXQsIGFuY2hvcikgewogICAgCQkJaW5zZXJ0X2Rldih0YXJnZXQsIGxpLCBhbmNob3IpOwoKICAgIAkJCWlmIChkZWZhdWx0X3Nsb3QpIHsKICAgIAkJCQlkZWZhdWx0X3Nsb3QubShsaSwgbnVsbCk7CiAgICAJCQl9CgogICAgCQkJY3VycmVudCA9IHRydWU7CiAgICAJCX0sCiAgICAJCXA6IGZ1bmN0aW9uIHVwZGF0ZShjdHgsIFtkaXJ0eV0pIHsKICAgIAkJCWlmIChkZWZhdWx0X3Nsb3QpIHsKICAgIAkJCQlpZiAoZGVmYXVsdF9zbG90LnAgJiYgZGlydHkgJiAvKiQkc2NvcGUqLyAxNikgewogICAgCQkJCQl1cGRhdGVfc2xvdChkZWZhdWx0X3Nsb3QsIGRlZmF1bHRfc2xvdF90ZW1wbGF0ZSwgY3R4LCAvKiQkc2NvcGUqLyBjdHhbNF0sIGRpcnR5LCBudWxsLCBudWxsKTsKICAgIAkJCQl9CiAgICAJCQl9CgogICAgCQkJc2V0X2F0dHJpYnV0ZXMobGksIGxpX2RhdGEgPSBnZXRfc3ByZWFkX3VwZGF0ZShsaV9sZXZlbHMsIFsKICAgIAkJCQlkaXJ0eSAmIC8qJCRyZXN0UHJvcHMqLyAyICYmIC8qJCRyZXN0UHJvcHMqLyBjdHhbMV0sCiAgICAJCQkJKCFjdXJyZW50IHx8IGRpcnR5ICYgLypjbGFzc2VzKi8gMSkgJiYgeyBjbGFzczogLypjbGFzc2VzKi8gY3R4WzBdIH0KICAgIAkJCV0pKTsKICAgIAkJfSwKICAgIAkJaTogZnVuY3Rpb24gaW50cm8obG9jYWwpIHsKICAgIAkJCWlmIChjdXJyZW50KSByZXR1cm47CiAgICAJCQl0cmFuc2l0aW9uX2luKGRlZmF1bHRfc2xvdCwgbG9jYWwpOwogICAgCQkJY3VycmVudCA9IHRydWU7CiAgICAJCX0sCiAgICAJCW86IGZ1bmN0aW9uIG91dHJvKGxvY2FsKSB7CiAgICAJCQl0cmFuc2l0aW9uX291dChkZWZhdWx0X3Nsb3QsIGxvY2FsKTsKICAgIAkJCWN1cnJlbnQgPSBmYWxzZTsKICAgIAkJfSwKICAgIAkJZDogZnVuY3Rpb24gZGVzdHJveShkZXRhY2hpbmcpIHsKICAgIAkJCWlmIChkZXRhY2hpbmcpIGRldGFjaF9kZXYobGkpOwogICAgCQkJaWYgKGRlZmF1bHRfc2xvdCkgZGVmYXVsdF9zbG90LmQoZGV0YWNoaW5nKTsKICAgIAkJfQogICAgCX07CgogICAgCWRpc3BhdGNoX2RldigiU3ZlbHRlUmVnaXN0ZXJCbG9jayIsIHsKICAgIAkJYmxvY2ssCiAgICAJCWlkOiBjcmVhdGVfZnJhZ21lbnQkYy5uYW1lLAogICAgCQl0eXBlOiAiY29tcG9uZW50IiwKICAgIAkJc291cmNlOiAiIiwKICAgIAkJY3R4CiAgICAJfSk7CgogICAgCXJldHVybiBibG9jazsKICAgIH0KCiAgICBmdW5jdGlvbiBpbnN0YW5jZSRjKCQkc2VsZiwgJCRwcm9wcywgJCRpbnZhbGlkYXRlKSB7CiAgICAJbGV0IGNsYXNzZXM7CiAgICAJY29uc3Qgb21pdF9wcm9wc19uYW1lcyA9IFsiY2xhc3MiLCJhY3RpdmUiXTsKICAgIAlsZXQgJCRyZXN0UHJvcHMgPSBjb21wdXRlX3Jlc3RfcHJvcHMoJCRwcm9wcywgb21pdF9wcm9wc19uYW1lcyk7CiAgICAJbGV0IHsgJCRzbG90czogc2xvdHMgPSB7fSwgJCRzY29wZSB9ID0gJCRwcm9wczsKICAgIAl2YWxpZGF0ZV9zbG90cygiTmF2SXRlbSIsIHNsb3RzLCBbJ2RlZmF1bHQnXSk7CiAgICAJbGV0IHsgY2xhc3M6IGNsYXNzTmFtZSA9ICIiIH0gPSAkJHByb3BzOwogICAgCWxldCB7IGFjdGl2ZSA9IGZhbHNlIH0gPSAkJHByb3BzOwoKICAgIAkkJHNlbGYuJCRzZXQgPSAkJG5ld19wcm9wcyA9PiB7CiAgICAJCSQkcHJvcHMgPSBhc3NpZ24oYXNzaWduKHt9LCAkJHByb3BzKSwgZXhjbHVkZV9pbnRlcm5hbF9wcm9wcygkJG5ld19wcm9wcykpOwogICAgCQkkJGludmFsaWRhdGUoMSwgJCRyZXN0UHJvcHMgPSBjb21wdXRlX3Jlc3RfcHJvcHMoJCRwcm9wcywgb21pdF9wcm9wc19uYW1lcykpOwogICAgCQlpZiAoImNsYXNzIiBpbiAkJG5ld19wcm9wcykgJCRpbnZhbGlkYXRlKDIsIGNsYXNzTmFtZSA9ICQkbmV3X3Byb3BzLmNsYXNzKTsKICAgIAkJaWYgKCJhY3RpdmUiIGluICQkbmV3X3Byb3BzKSAkJGludmFsaWRhdGUoMywgYWN0aXZlID0gJCRuZXdfcHJvcHMuYWN0aXZlKTsKICAgIAkJaWYgKCIkJHNjb3BlIiBpbiAkJG5ld19wcm9wcykgJCRpbnZhbGlkYXRlKDQsICQkc2NvcGUgPSAkJG5ld19wcm9wcy4kJHNjb3BlKTsKICAgIAl9OwoKICAgIAkkJHNlbGYuJGNhcHR1cmVfc3RhdGUgPSAoKSA9PiAoeyBjbGFzc25hbWVzLCBjbGFzc05hbWUsIGFjdGl2ZSwgY2xhc3NlcyB9KTsKCiAgICAJJCRzZWxmLiRpbmplY3Rfc3RhdGUgPSAkJG5ld19wcm9wcyA9PiB7CiAgICAJCWlmICgiY2xhc3NOYW1lIiBpbiAkJHByb3BzKSAkJGludmFsaWRhdGUoMiwgY2xhc3NOYW1lID0gJCRuZXdfcHJvcHMuY2xhc3NOYW1lKTsKICAgIAkJaWYgKCJhY3RpdmUiIGluICQkcHJvcHMpICQkaW52YWxpZGF0ZSgzLCBhY3RpdmUgPSAkJG5ld19wcm9wcy5hY3RpdmUpOwogICAgCQlpZiAoImNsYXNzZXMiIGluICQkcHJvcHMpICQkaW52YWxpZGF0ZSgwLCBjbGFzc2VzID0gJCRuZXdfcHJvcHMuY2xhc3Nlcyk7CiAgICAJfTsKCiAgICAJaWYgKCQkcHJvcHMgJiYgIiQkaW5qZWN0IiBpbiAkJHByb3BzKSB7CiAgICAJCSQkc2VsZi4kaW5qZWN0X3N0YXRlKCQkcHJvcHMuJCRpbmplY3QpOwogICAgCX0KCiAgICAJJCRzZWxmLiQkLnVwZGF0ZSA9ICgpID0+IHsKICAgIAkJaWYgKCQkc2VsZi4kJC5kaXJ0eSAmIC8qY2xhc3NOYW1lLCBhY3RpdmUqLyAxMikgewogICAgCQkJICQkaW52YWxpZGF0ZSgwLCBjbGFzc2VzID0gY2xhc3NuYW1lcyhjbGFzc05hbWUsICJuYXYtaXRlbSIsIGFjdGl2ZSA/ICJhY3RpdmUiIDogZmFsc2UpKTsKICAgIAkJfQogICAgCX07CgogICAgCXJldHVybiBbY2xhc3NlcywgJCRyZXN0UHJvcHMsIGNsYXNzTmFtZSwgYWN0aXZlLCAkJHNjb3BlLCBzbG90c107CiAgICB9CgogICAgY2xhc3MgTmF2SXRlbSBleHRlbmRzIFN2ZWx0ZUNvbXBvbmVudERldiB7CiAgICAJY29uc3RydWN0b3Iob3B0aW9ucykgewogICAgCQlzdXBlcihvcHRpb25zKTsKICAgIAkJaW5pdCh0aGlzLCBvcHRpb25zLCBpbnN0YW5jZSRjLCBjcmVhdGVfZnJhZ21lbnQkYywgc2FmZV9ub3RfZXF1YWwsIHsgY2xhc3M6IDIsIGFjdGl2ZTogMyB9KTsKCiAgICAJCWRpc3BhdGNoX2RldigiU3ZlbHRlUmVnaXN0ZXJDb21wb25lbnQiLCB7CiAgICAJCQljb21wb25lbnQ6IHRoaXMsCiAgICAJCQl0YWdOYW1lOiAiTmF2SXRlbSIsCiAgICAJCQlvcHRpb25zLAogICAgCQkJaWQ6IGNyZWF0ZV9mcmFnbWVudCRjLm5hbWUKICAgIAkJfSk7CiAgICAJfQoKICAgIAlnZXQgY2xhc3MoKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPE5hdkl0ZW0+OiBQcm9wcyBjYW5ub3QgYmUgcmVhZCBkaXJlY3RseSBmcm9tIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlzZXQgY2xhc3ModmFsdWUpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8TmF2SXRlbT46IFByb3BzIGNhbm5vdCBiZSBzZXQgZGlyZWN0bHkgb24gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCWdldCBhY3RpdmUoKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPE5hdkl0ZW0+OiBQcm9wcyBjYW5ub3QgYmUgcmVhZCBkaXJlY3RseSBmcm9tIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlzZXQgYWN0aXZlKHZhbHVlKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPE5hdkl0ZW0+OiBQcm9wcyBjYW5ub3QgYmUgc2V0IGRpcmVjdGx5IG9uIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQogICAgfQoKICAgIC8qIG5vZGVfbW9kdWxlcy9zdmVsdGVzdHJhcC9zcmMvTmF2TGluay5zdmVsdGUgZ2VuZXJhdGVkIGJ5IFN2ZWx0ZSB2My4zMS4yICovCiAgICBjb25zdCBmaWxlJGQgPSAibm9kZV9tb2R1bGVzL3N2ZWx0ZXN0cmFwL3NyYy9OYXZMaW5rLnN2ZWx0ZSI7CgogICAgZnVuY3Rpb24gY3JlYXRlX2ZyYWdtZW50JGQoY3R4KSB7CiAgICAJbGV0IGE7CiAgICAJbGV0IGN1cnJlbnQ7CiAgICAJbGV0IG1vdW50ZWQ7CiAgICAJbGV0IGRpc3Bvc2U7CiAgICAJY29uc3QgZGVmYXVsdF9zbG90X3RlbXBsYXRlID0gLyojc2xvdHMqLyBjdHhbOF0uZGVmYXVsdDsKICAgIAljb25zdCBkZWZhdWx0X3Nsb3QgPSBjcmVhdGVfc2xvdChkZWZhdWx0X3Nsb3RfdGVtcGxhdGUsIGN0eCwgLyokJHNjb3BlKi8gY3R4WzddLCBudWxsKTsKCiAgICAJbGV0IGFfbGV2ZWxzID0gWwogICAgCQkvKiQkcmVzdFByb3BzKi8gY3R4WzNdLAogICAgCQl7IGhyZWY6IC8qaHJlZiovIGN0eFswXSB9LAogICAgCQl7IGNsYXNzOiAvKmNsYXNzZXMqLyBjdHhbMV0gfQogICAgCV07CgogICAgCWxldCBhX2RhdGEgPSB7fTsKCiAgICAJZm9yIChsZXQgaSA9IDA7IGkgPCBhX2xldmVscy5sZW5ndGg7IGkgKz0gMSkgewogICAgCQlhX2RhdGEgPSBhc3NpZ24oYV9kYXRhLCBhX2xldmVsc1tpXSk7CiAgICAJfQoKICAgIAljb25zdCBibG9jayA9IHsKICAgIAkJYzogZnVuY3Rpb24gY3JlYXRlKCkgewogICAgCQkJYSA9IGVsZW1lbnQoImEiKTsKICAgIAkJCWlmIChkZWZhdWx0X3Nsb3QpIGRlZmF1bHRfc2xvdC5jKCk7CiAgICAJCQlzZXRfYXR0cmlidXRlcyhhLCBhX2RhdGEpOwogICAgCQkJYWRkX2xvY2F0aW9uKGEsIGZpbGUkZCwgMjcsIDAsIDQ3Mik7CiAgICAJCX0sCiAgICAJCWw6IGZ1bmN0aW9uIGNsYWltKG5vZGVzKSB7CiAgICAJCQl0aHJvdyBuZXcgRXJyb3IoIm9wdGlvbnMuaHlkcmF0ZSBvbmx5IHdvcmtzIGlmIHRoZSBjb21wb25lbnQgd2FzIGNvbXBpbGVkIHdpdGggdGhlIGBoeWRyYXRhYmxlOiB0cnVlYCBvcHRpb24iKTsKICAgIAkJfSwKICAgIAkJbTogZnVuY3Rpb24gbW91bnQodGFyZ2V0LCBhbmNob3IpIHsKICAgIAkJCWluc2VydF9kZXYodGFyZ2V0LCBhLCBhbmNob3IpOwoKICAgIAkJCWlmIChkZWZhdWx0X3Nsb3QpIHsKICAgIAkJCQlkZWZhdWx0X3Nsb3QubShhLCBudWxsKTsKICAgIAkJCX0KCiAgICAJCQljdXJyZW50ID0gdHJ1ZTsKCiAgICAJCQlpZiAoIW1vdW50ZWQpIHsKICAgIAkJCQlkaXNwb3NlID0gWwogICAgCQkJCQlsaXN0ZW5fZGV2KGEsICJjbGljayIsIC8qY2xpY2tfaGFuZGxlciovIGN0eFs5XSwgZmFsc2UsIGZhbHNlLCBmYWxzZSksCiAgICAJCQkJCWxpc3Rlbl9kZXYoYSwgImNsaWNrIiwgLypoYW5kbGVDbGljayovIGN0eFsyXSwgZmFsc2UsIGZhbHNlLCBmYWxzZSkKICAgIAkJCQldOwoKICAgIAkJCQltb3VudGVkID0gdHJ1ZTsKICAgIAkJCX0KICAgIAkJfSwKICAgIAkJcDogZnVuY3Rpb24gdXBkYXRlKGN0eCwgW2RpcnR5XSkgewogICAgCQkJaWYgKGRlZmF1bHRfc2xvdCkgewogICAgCQkJCWlmIChkZWZhdWx0X3Nsb3QucCAmJiBkaXJ0eSAmIC8qJCRzY29wZSovIDEyOCkgewogICAgCQkJCQl1cGRhdGVfc2xvdChkZWZhdWx0X3Nsb3QsIGRlZmF1bHRfc2xvdF90ZW1wbGF0ZSwgY3R4LCAvKiQkc2NvcGUqLyBjdHhbN10sIGRpcnR5LCBudWxsLCBudWxsKTsKICAgIAkJCQl9CiAgICAJCQl9CgogICAgCQkJc2V0X2F0dHJpYnV0ZXMoYSwgYV9kYXRhID0gZ2V0X3NwcmVhZF91cGRhdGUoYV9sZXZlbHMsIFsKICAgIAkJCQlkaXJ0eSAmIC8qJCRyZXN0UHJvcHMqLyA4ICYmIC8qJCRyZXN0UHJvcHMqLyBjdHhbM10sCiAgICAJCQkJKCFjdXJyZW50IHx8IGRpcnR5ICYgLypocmVmKi8gMSkgJiYgeyBocmVmOiAvKmhyZWYqLyBjdHhbMF0gfSwKICAgIAkJCQkoIWN1cnJlbnQgfHwgZGlydHkgJiAvKmNsYXNzZXMqLyAyKSAmJiB7IGNsYXNzOiAvKmNsYXNzZXMqLyBjdHhbMV0gfQogICAgCQkJXSkpOwogICAgCQl9LAogICAgCQlpOiBmdW5jdGlvbiBpbnRybyhsb2NhbCkgewogICAgCQkJaWYgKGN1cnJlbnQpIHJldHVybjsKICAgIAkJCXRyYW5zaXRpb25faW4oZGVmYXVsdF9zbG90LCBsb2NhbCk7CiAgICAJCQljdXJyZW50ID0gdHJ1ZTsKICAgIAkJfSwKICAgIAkJbzogZnVuY3Rpb24gb3V0cm8obG9jYWwpIHsKICAgIAkJCXRyYW5zaXRpb25fb3V0KGRlZmF1bHRfc2xvdCwgbG9jYWwpOwogICAgCQkJY3VycmVudCA9IGZhbHNlOwogICAgCQl9LAogICAgCQlkOiBmdW5jdGlvbiBkZXN0cm95KGRldGFjaGluZykgewogICAgCQkJaWYgKGRldGFjaGluZykgZGV0YWNoX2RldihhKTsKICAgIAkJCWlmIChkZWZhdWx0X3Nsb3QpIGRlZmF1bHRfc2xvdC5kKGRldGFjaGluZyk7CiAgICAJCQltb3VudGVkID0gZmFsc2U7CiAgICAJCQlydW5fYWxsKGRpc3Bvc2UpOwogICAgCQl9CiAgICAJfTsKCiAgICAJZGlzcGF0Y2hfZGV2KCJTdmVsdGVSZWdpc3RlckJsb2NrIiwgewogICAgCQlibG9jaywKICAgIAkJaWQ6IGNyZWF0ZV9mcmFnbWVudCRkLm5hbWUsCiAgICAJCXR5cGU6ICJjb21wb25lbnQiLAogICAgCQlzb3VyY2U6ICIiLAogICAgCQljdHgKICAgIAl9KTsKCiAgICAJcmV0dXJuIGJsb2NrOwogICAgfQoKICAgIGZ1bmN0aW9uIGluc3RhbmNlJGQoJCRzZWxmLCAkJHByb3BzLCAkJGludmFsaWRhdGUpIHsKICAgIAlsZXQgY2xhc3NlczsKICAgIAljb25zdCBvbWl0X3Byb3BzX25hbWVzID0gWyJjbGFzcyIsImRpc2FibGVkIiwiYWN0aXZlIiwiaHJlZiJdOwogICAgCWxldCAkJHJlc3RQcm9wcyA9IGNvbXB1dGVfcmVzdF9wcm9wcygkJHByb3BzLCBvbWl0X3Byb3BzX25hbWVzKTsKICAgIAlsZXQgeyAkJHNsb3RzOiBzbG90cyA9IHt9LCAkJHNjb3BlIH0gPSAkJHByb3BzOwogICAgCXZhbGlkYXRlX3Nsb3RzKCJOYXZMaW5rIiwgc2xvdHMsIFsnZGVmYXVsdCddKTsKICAgIAlsZXQgeyBjbGFzczogY2xhc3NOYW1lID0gIiIgfSA9ICQkcHJvcHM7CiAgICAJbGV0IHsgZGlzYWJsZWQgPSBmYWxzZSB9ID0gJCRwcm9wczsKICAgIAlsZXQgeyBhY3RpdmUgPSBmYWxzZSB9ID0gJCRwcm9wczsKICAgIAlsZXQgeyBocmVmID0gIiMiIH0gPSAkJHByb3BzOwoKICAgIAlmdW5jdGlvbiBoYW5kbGVDbGljayhlKSB7CiAgICAJCWlmIChkaXNhYmxlZCkgewogICAgCQkJZS5wcmV2ZW50RGVmYXVsdCgpOwogICAgCQkJZS5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKTsKICAgIAkJCXJldHVybjsKICAgIAkJfQoKICAgIAkJaWYgKGhyZWYgPT09ICIjIikgewogICAgCQkJZS5wcmV2ZW50RGVmYXVsdCgpOwogICAgCQl9CiAgICAJfQoKICAgIAlmdW5jdGlvbiBjbGlja19oYW5kbGVyKGV2ZW50KSB7CiAgICAJCWJ1YmJsZSgkJHNlbGYsIGV2ZW50KTsKICAgIAl9CgogICAgCSQkc2VsZi4kJHNldCA9ICQkbmV3X3Byb3BzID0+IHsKICAgIAkJJCRwcm9wcyA9IGFzc2lnbihhc3NpZ24oe30sICQkcHJvcHMpLCBleGNsdWRlX2ludGVybmFsX3Byb3BzKCQkbmV3X3Byb3BzKSk7CiAgICAJCSQkaW52YWxpZGF0ZSgzLCAkJHJlc3RQcm9wcyA9IGNvbXB1dGVfcmVzdF9wcm9wcygkJHByb3BzLCBvbWl0X3Byb3BzX25hbWVzKSk7CiAgICAJCWlmICgiY2xhc3MiIGluICQkbmV3X3Byb3BzKSAkJGludmFsaWRhdGUoNCwgY2xhc3NOYW1lID0gJCRuZXdfcHJvcHMuY2xhc3MpOwogICAgCQlpZiAoImRpc2FibGVkIiBpbiAkJG5ld19wcm9wcykgJCRpbnZhbGlkYXRlKDUsIGRpc2FibGVkID0gJCRuZXdfcHJvcHMuZGlzYWJsZWQpOwogICAgCQlpZiAoImFjdGl2ZSIgaW4gJCRuZXdfcHJvcHMpICQkaW52YWxpZGF0ZSg2LCBhY3RpdmUgPSAkJG5ld19wcm9wcy5hY3RpdmUpOwogICAgCQlpZiAoImhyZWYiIGluICQkbmV3X3Byb3BzKSAkJGludmFsaWRhdGUoMCwgaHJlZiA9ICQkbmV3X3Byb3BzLmhyZWYpOwogICAgCQlpZiAoIiQkc2NvcGUiIGluICQkbmV3X3Byb3BzKSAkJGludmFsaWRhdGUoNywgJCRzY29wZSA9ICQkbmV3X3Byb3BzLiQkc2NvcGUpOwogICAgCX07CgogICAgCSQkc2VsZi4kY2FwdHVyZV9zdGF0ZSA9ICgpID0+ICh7CiAgICAJCWNsYXNzbmFtZXMsCiAgICAJCWNsYXNzTmFtZSwKICAgIAkJZGlzYWJsZWQsCiAgICAJCWFjdGl2ZSwKICAgIAkJaHJlZiwKICAgIAkJaGFuZGxlQ2xpY2ssCiAgICAJCWNsYXNzZXMKICAgIAl9KTsKCiAgICAJJCRzZWxmLiRpbmplY3Rfc3RhdGUgPSAkJG5ld19wcm9wcyA9PiB7CiAgICAJCWlmICgiY2xhc3NOYW1lIiBpbiAkJHByb3BzKSAkJGludmFsaWRhdGUoNCwgY2xhc3NOYW1lID0gJCRuZXdfcHJvcHMuY2xhc3NOYW1lKTsKICAgIAkJaWYgKCJkaXNhYmxlZCIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDUsIGRpc2FibGVkID0gJCRuZXdfcHJvcHMuZGlzYWJsZWQpOwogICAgCQlpZiAoImFjdGl2ZSIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDYsIGFjdGl2ZSA9ICQkbmV3X3Byb3BzLmFjdGl2ZSk7CiAgICAJCWlmICgiaHJlZiIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDAsIGhyZWYgPSAkJG5ld19wcm9wcy5ocmVmKTsKICAgIAkJaWYgKCJjbGFzc2VzIiBpbiAkJHByb3BzKSAkJGludmFsaWRhdGUoMSwgY2xhc3NlcyA9ICQkbmV3X3Byb3BzLmNsYXNzZXMpOwogICAgCX07CgogICAgCWlmICgkJHByb3BzICYmICIkJGluamVjdCIgaW4gJCRwcm9wcykgewogICAgCQkkJHNlbGYuJGluamVjdF9zdGF0ZSgkJHByb3BzLiQkaW5qZWN0KTsKICAgIAl9CgogICAgCSQkc2VsZi4kJC51cGRhdGUgPSAoKSA9PiB7CiAgICAJCWlmICgkJHNlbGYuJCQuZGlydHkgJiAvKmNsYXNzTmFtZSwgZGlzYWJsZWQsIGFjdGl2ZSovIDExMikgewogICAgCQkJICQkaW52YWxpZGF0ZSgxLCBjbGFzc2VzID0gY2xhc3NuYW1lcyhjbGFzc05hbWUsICJuYXYtbGluayIsIHsgZGlzYWJsZWQsIGFjdGl2ZSB9KSk7CiAgICAJCX0KICAgIAl9OwoKICAgIAlyZXR1cm4gWwogICAgCQlocmVmLAogICAgCQljbGFzc2VzLAogICAgCQloYW5kbGVDbGljaywKICAgIAkJJCRyZXN0UHJvcHMsCiAgICAJCWNsYXNzTmFtZSwKICAgIAkJZGlzYWJsZWQsCiAgICAJCWFjdGl2ZSwKICAgIAkJJCRzY29wZSwKICAgIAkJc2xvdHMsCiAgICAJCWNsaWNrX2hhbmRsZXIKICAgIAldOwogICAgfQoKICAgIGNsYXNzIE5hdkxpbmsgZXh0ZW5kcyBTdmVsdGVDb21wb25lbnREZXYgewogICAgCWNvbnN0cnVjdG9yKG9wdGlvbnMpIHsKICAgIAkJc3VwZXIob3B0aW9ucyk7CgogICAgCQlpbml0KHRoaXMsIG9wdGlvbnMsIGluc3RhbmNlJGQsIGNyZWF0ZV9mcmFnbWVudCRkLCBzYWZlX25vdF9lcXVhbCwgewogICAgCQkJY2xhc3M6IDQsCiAgICAJCQlkaXNhYmxlZDogNSwKICAgIAkJCWFjdGl2ZTogNiwKICAgIAkJCWhyZWY6IDAKICAgIAkJfSk7CgogICAgCQlkaXNwYXRjaF9kZXYoIlN2ZWx0ZVJlZ2lzdGVyQ29tcG9uZW50IiwgewogICAgCQkJY29tcG9uZW50OiB0aGlzLAogICAgCQkJdGFnTmFtZTogIk5hdkxpbmsiLAogICAgCQkJb3B0aW9ucywKICAgIAkJCWlkOiBjcmVhdGVfZnJhZ21lbnQkZC5uYW1lCiAgICAJCX0pOwogICAgCX0KCiAgICAJZ2V0IGNsYXNzKCkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxOYXZMaW5rPjogUHJvcHMgY2Fubm90IGJlIHJlYWQgZGlyZWN0bHkgZnJvbSB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJc2V0IGNsYXNzKHZhbHVlKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPE5hdkxpbms+OiBQcm9wcyBjYW5ub3QgYmUgc2V0IGRpcmVjdGx5IG9uIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlnZXQgZGlzYWJsZWQoKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPE5hdkxpbms+OiBQcm9wcyBjYW5ub3QgYmUgcmVhZCBkaXJlY3RseSBmcm9tIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlzZXQgZGlzYWJsZWQodmFsdWUpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8TmF2TGluaz46IFByb3BzIGNhbm5vdCBiZSBzZXQgZGlyZWN0bHkgb24gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCWdldCBhY3RpdmUoKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPE5hdkxpbms+OiBQcm9wcyBjYW5ub3QgYmUgcmVhZCBkaXJlY3RseSBmcm9tIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlzZXQgYWN0aXZlKHZhbHVlKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPE5hdkxpbms+OiBQcm9wcyBjYW5ub3QgYmUgc2V0IGRpcmVjdGx5IG9uIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlnZXQgaHJlZigpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8TmF2TGluaz46IFByb3BzIGNhbm5vdCBiZSByZWFkIGRpcmVjdGx5IGZyb20gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCXNldCBocmVmKHZhbHVlKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPE5hdkxpbms+OiBQcm9wcyBjYW5ub3QgYmUgc2V0IGRpcmVjdGx5IG9uIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQogICAgfQoKICAgIC8qIG5vZGVfbW9kdWxlcy9zdmVsdGVzdHJhcC9zcmMvUm93LnN2ZWx0ZSBnZW5lcmF0ZWQgYnkgU3ZlbHRlIHYzLjMxLjIgKi8KICAgIGNvbnN0IGZpbGUkZSA9ICJub2RlX21vZHVsZXMvc3ZlbHRlc3RyYXAvc3JjL1Jvdy5zdmVsdGUiOwoKICAgIGZ1bmN0aW9uIGNyZWF0ZV9mcmFnbWVudCRlKGN0eCkgewogICAgCWxldCBkaXY7CiAgICAJbGV0IGN1cnJlbnQ7CiAgICAJY29uc3QgZGVmYXVsdF9zbG90X3RlbXBsYXRlID0gLyojc2xvdHMqLyBjdHhbNl0uZGVmYXVsdDsKICAgIAljb25zdCBkZWZhdWx0X3Nsb3QgPSBjcmVhdGVfc2xvdChkZWZhdWx0X3Nsb3RfdGVtcGxhdGUsIGN0eCwgLyokJHNjb3BlKi8gY3R4WzVdLCBudWxsKTsKICAgIAlsZXQgZGl2X2xldmVscyA9IFsvKiQkcmVzdFByb3BzKi8gY3R4WzFdLCB7IGNsYXNzOiAvKmNsYXNzZXMqLyBjdHhbMF0gfV07CiAgICAJbGV0IGRpdl9kYXRhID0ge307CgogICAgCWZvciAobGV0IGkgPSAwOyBpIDwgZGl2X2xldmVscy5sZW5ndGg7IGkgKz0gMSkgewogICAgCQlkaXZfZGF0YSA9IGFzc2lnbihkaXZfZGF0YSwgZGl2X2xldmVsc1tpXSk7CiAgICAJfQoKICAgIAljb25zdCBibG9jayA9IHsKICAgIAkJYzogZnVuY3Rpb24gY3JlYXRlKCkgewogICAgCQkJZGl2ID0gZWxlbWVudCgiZGl2Iik7CiAgICAJCQlpZiAoZGVmYXVsdF9zbG90KSBkZWZhdWx0X3Nsb3QuYygpOwogICAgCQkJc2V0X2F0dHJpYnV0ZXMoZGl2LCBkaXZfZGF0YSk7CiAgICAJCQlhZGRfbG9jYXRpb24oZGl2LCBmaWxlJGUsIDE1LCAwLCAyODYpOwogICAgCQl9LAogICAgCQlsOiBmdW5jdGlvbiBjbGFpbShub2RlcykgewogICAgCQkJdGhyb3cgbmV3IEVycm9yKCJvcHRpb25zLmh5ZHJhdGUgb25seSB3b3JrcyBpZiB0aGUgY29tcG9uZW50IHdhcyBjb21waWxlZCB3aXRoIHRoZSBgaHlkcmF0YWJsZTogdHJ1ZWAgb3B0aW9uIik7CiAgICAJCX0sCiAgICAJCW06IGZ1bmN0aW9uIG1vdW50KHRhcmdldCwgYW5jaG9yKSB7CiAgICAJCQlpbnNlcnRfZGV2KHRhcmdldCwgZGl2LCBhbmNob3IpOwoKICAgIAkJCWlmIChkZWZhdWx0X3Nsb3QpIHsKICAgIAkJCQlkZWZhdWx0X3Nsb3QubShkaXYsIG51bGwpOwogICAgCQkJfQoKICAgIAkJCWN1cnJlbnQgPSB0cnVlOwogICAgCQl9LAogICAgCQlwOiBmdW5jdGlvbiB1cGRhdGUoY3R4LCBbZGlydHldKSB7CiAgICAJCQlpZiAoZGVmYXVsdF9zbG90KSB7CiAgICAJCQkJaWYgKGRlZmF1bHRfc2xvdC5wICYmIGRpcnR5ICYgLyokJHNjb3BlKi8gMzIpIHsKICAgIAkJCQkJdXBkYXRlX3Nsb3QoZGVmYXVsdF9zbG90LCBkZWZhdWx0X3Nsb3RfdGVtcGxhdGUsIGN0eCwgLyokJHNjb3BlKi8gY3R4WzVdLCBkaXJ0eSwgbnVsbCwgbnVsbCk7CiAgICAJCQkJfQogICAgCQkJfQoKICAgIAkJCXNldF9hdHRyaWJ1dGVzKGRpdiwgZGl2X2RhdGEgPSBnZXRfc3ByZWFkX3VwZGF0ZShkaXZfbGV2ZWxzLCBbCiAgICAJCQkJZGlydHkgJiAvKiQkcmVzdFByb3BzKi8gMiAmJiAvKiQkcmVzdFByb3BzKi8gY3R4WzFdLAogICAgCQkJCSghY3VycmVudCB8fCBkaXJ0eSAmIC8qY2xhc3NlcyovIDEpICYmIHsgY2xhc3M6IC8qY2xhc3NlcyovIGN0eFswXSB9CiAgICAJCQldKSk7CiAgICAJCX0sCiAgICAJCWk6IGZ1bmN0aW9uIGludHJvKGxvY2FsKSB7CiAgICAJCQlpZiAoY3VycmVudCkgcmV0dXJuOwogICAgCQkJdHJhbnNpdGlvbl9pbihkZWZhdWx0X3Nsb3QsIGxvY2FsKTsKICAgIAkJCWN1cnJlbnQgPSB0cnVlOwogICAgCQl9LAogICAgCQlvOiBmdW5jdGlvbiBvdXRybyhsb2NhbCkgewogICAgCQkJdHJhbnNpdGlvbl9vdXQoZGVmYXVsdF9zbG90LCBsb2NhbCk7CiAgICAJCQljdXJyZW50ID0gZmFsc2U7CiAgICAJCX0sCiAgICAJCWQ6IGZ1bmN0aW9uIGRlc3Ryb3koZGV0YWNoaW5nKSB7CiAgICAJCQlpZiAoZGV0YWNoaW5nKSBkZXRhY2hfZGV2KGRpdik7CiAgICAJCQlpZiAoZGVmYXVsdF9zbG90KSBkZWZhdWx0X3Nsb3QuZChkZXRhY2hpbmcpOwogICAgCQl9CiAgICAJfTsKCiAgICAJZGlzcGF0Y2hfZGV2KCJTdmVsdGVSZWdpc3RlckJsb2NrIiwgewogICAgCQlibG9jaywKICAgIAkJaWQ6IGNyZWF0ZV9mcmFnbWVudCRlLm5hbWUsCiAgICAJCXR5cGU6ICJjb21wb25lbnQiLAogICAgCQlzb3VyY2U6ICIiLAogICAgCQljdHgKICAgIAl9KTsKCiAgICAJcmV0dXJuIGJsb2NrOwogICAgfQoKICAgIGZ1bmN0aW9uIGluc3RhbmNlJGUoJCRzZWxmLCAkJHByb3BzLCAkJGludmFsaWRhdGUpIHsKICAgIAlsZXQgY2xhc3NlczsKICAgIAljb25zdCBvbWl0X3Byb3BzX25hbWVzID0gWyJjbGFzcyIsIm5vR3V0dGVycyIsImZvcm0iXTsKICAgIAlsZXQgJCRyZXN0UHJvcHMgPSBjb21wdXRlX3Jlc3RfcHJvcHMoJCRwcm9wcywgb21pdF9wcm9wc19uYW1lcyk7CiAgICAJbGV0IHsgJCRzbG90czogc2xvdHMgPSB7fSwgJCRzY29wZSB9ID0gJCRwcm9wczsKICAgIAl2YWxpZGF0ZV9zbG90cygiUm93Iiwgc2xvdHMsIFsnZGVmYXVsdCddKTsKICAgIAlsZXQgeyBjbGFzczogY2xhc3NOYW1lID0gIiIgfSA9ICQkcHJvcHM7CiAgICAJbGV0IHsgbm9HdXR0ZXJzID0gZmFsc2UgfSA9ICQkcHJvcHM7CiAgICAJbGV0IHsgZm9ybSA9IGZhbHNlIH0gPSAkJHByb3BzOwoKICAgIAkkJHNlbGYuJCRzZXQgPSAkJG5ld19wcm9wcyA9PiB7CiAgICAJCSQkcHJvcHMgPSBhc3NpZ24oYXNzaWduKHt9LCAkJHByb3BzKSwgZXhjbHVkZV9pbnRlcm5hbF9wcm9wcygkJG5ld19wcm9wcykpOwogICAgCQkkJGludmFsaWRhdGUoMSwgJCRyZXN0UHJvcHMgPSBjb21wdXRlX3Jlc3RfcHJvcHMoJCRwcm9wcywgb21pdF9wcm9wc19uYW1lcykpOwogICAgCQlpZiAoImNsYXNzIiBpbiAkJG5ld19wcm9wcykgJCRpbnZhbGlkYXRlKDIsIGNsYXNzTmFtZSA9ICQkbmV3X3Byb3BzLmNsYXNzKTsKICAgIAkJaWYgKCJub0d1dHRlcnMiIGluICQkbmV3X3Byb3BzKSAkJGludmFsaWRhdGUoMywgbm9HdXR0ZXJzID0gJCRuZXdfcHJvcHMubm9HdXR0ZXJzKTsKICAgIAkJaWYgKCJmb3JtIiBpbiAkJG5ld19wcm9wcykgJCRpbnZhbGlkYXRlKDQsIGZvcm0gPSAkJG5ld19wcm9wcy5mb3JtKTsKICAgIAkJaWYgKCIkJHNjb3BlIiBpbiAkJG5ld19wcm9wcykgJCRpbnZhbGlkYXRlKDUsICQkc2NvcGUgPSAkJG5ld19wcm9wcy4kJHNjb3BlKTsKICAgIAl9OwoKICAgIAkkJHNlbGYuJGNhcHR1cmVfc3RhdGUgPSAoKSA9PiAoewogICAgCQljbGFzc25hbWVzLAogICAgCQljbGFzc05hbWUsCiAgICAJCW5vR3V0dGVycywKICAgIAkJZm9ybSwKICAgIAkJY2xhc3NlcwogICAgCX0pOwoKICAgIAkkJHNlbGYuJGluamVjdF9zdGF0ZSA9ICQkbmV3X3Byb3BzID0+IHsKICAgIAkJaWYgKCJjbGFzc05hbWUiIGluICQkcHJvcHMpICQkaW52YWxpZGF0ZSgyLCBjbGFzc05hbWUgPSAkJG5ld19wcm9wcy5jbGFzc05hbWUpOwogICAgCQlpZiAoIm5vR3V0dGVycyIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDMsIG5vR3V0dGVycyA9ICQkbmV3X3Byb3BzLm5vR3V0dGVycyk7CiAgICAJCWlmICgiZm9ybSIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDQsIGZvcm0gPSAkJG5ld19wcm9wcy5mb3JtKTsKICAgIAkJaWYgKCJjbGFzc2VzIiBpbiAkJHByb3BzKSAkJGludmFsaWRhdGUoMCwgY2xhc3NlcyA9ICQkbmV3X3Byb3BzLmNsYXNzZXMpOwogICAgCX07CgogICAgCWlmICgkJHByb3BzICYmICIkJGluamVjdCIgaW4gJCRwcm9wcykgewogICAgCQkkJHNlbGYuJGluamVjdF9zdGF0ZSgkJHByb3BzLiQkaW5qZWN0KTsKICAgIAl9CgogICAgCSQkc2VsZi4kJC51cGRhdGUgPSAoKSA9PiB7CiAgICAJCWlmICgkJHNlbGYuJCQuZGlydHkgJiAvKmNsYXNzTmFtZSwgbm9HdXR0ZXJzLCBmb3JtKi8gMjgpIHsKICAgIAkJCSAkJGludmFsaWRhdGUoMCwgY2xhc3NlcyA9IGNsYXNzbmFtZXMoY2xhc3NOYW1lLCBub0d1dHRlcnMgPyAibm8tZ3V0dGVycyIgOiBudWxsLCBmb3JtID8gImZvcm0tcm93IiA6ICJyb3ciKSk7CiAgICAJCX0KICAgIAl9OwoKICAgIAlyZXR1cm4gW2NsYXNzZXMsICQkcmVzdFByb3BzLCBjbGFzc05hbWUsIG5vR3V0dGVycywgZm9ybSwgJCRzY29wZSwgc2xvdHNdOwogICAgfQoKICAgIGNsYXNzIFJvdyBleHRlbmRzIFN2ZWx0ZUNvbXBvbmVudERldiB7CiAgICAJY29uc3RydWN0b3Iob3B0aW9ucykgewogICAgCQlzdXBlcihvcHRpb25zKTsKICAgIAkJaW5pdCh0aGlzLCBvcHRpb25zLCBpbnN0YW5jZSRlLCBjcmVhdGVfZnJhZ21lbnQkZSwgc2FmZV9ub3RfZXF1YWwsIHsgY2xhc3M6IDIsIG5vR3V0dGVyczogMywgZm9ybTogNCB9KTsKCiAgICAJCWRpc3BhdGNoX2RldigiU3ZlbHRlUmVnaXN0ZXJDb21wb25lbnQiLCB7CiAgICAJCQljb21wb25lbnQ6IHRoaXMsCiAgICAJCQl0YWdOYW1lOiAiUm93IiwKICAgIAkJCW9wdGlvbnMsCiAgICAJCQlpZDogY3JlYXRlX2ZyYWdtZW50JGUubmFtZQogICAgCQl9KTsKICAgIAl9CgogICAgCWdldCBjbGFzcygpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8Um93PjogUHJvcHMgY2Fubm90IGJlIHJlYWQgZGlyZWN0bHkgZnJvbSB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJc2V0IGNsYXNzKHZhbHVlKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPFJvdz46IFByb3BzIGNhbm5vdCBiZSBzZXQgZGlyZWN0bHkgb24gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCWdldCBub0d1dHRlcnMoKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPFJvdz46IFByb3BzIGNhbm5vdCBiZSByZWFkIGRpcmVjdGx5IGZyb20gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCXNldCBub0d1dHRlcnModmFsdWUpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8Um93PjogUHJvcHMgY2Fubm90IGJlIHNldCBkaXJlY3RseSBvbiB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJZ2V0IGZvcm0oKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPFJvdz46IFByb3BzIGNhbm5vdCBiZSByZWFkIGRpcmVjdGx5IGZyb20gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCXNldCBmb3JtKHZhbHVlKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPFJvdz46IFByb3BzIGNhbm5vdCBiZSBzZXQgZGlyZWN0bHkgb24gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CiAgICB9CgogICAgLyogbm9kZV9tb2R1bGVzL3N2ZWx0ZXN0cmFwL3NyYy9TcGlubmVyLnN2ZWx0ZSBnZW5lcmF0ZWQgYnkgU3ZlbHRlIHYzLjMxLjIgKi8KICAgIGNvbnN0IGZpbGUkZiA9ICJub2RlX21vZHVsZXMvc3ZlbHRlc3RyYXAvc3JjL1NwaW5uZXIuc3ZlbHRlIjsKCiAgICAvLyAoMjA6MTApIExvYWRpbmcuLi4KICAgIGZ1bmN0aW9uIGZhbGxiYWNrX2Jsb2NrJDEoY3R4KSB7CiAgICAJbGV0IHQ7CgogICAgCWNvbnN0IGJsb2NrID0gewogICAgCQljOiBmdW5jdGlvbiBjcmVhdGUoKSB7CiAgICAJCQl0ID0gdGV4dCgiTG9hZGluZy4uLiIpOwogICAgCQl9LAogICAgCQltOiBmdW5jdGlvbiBtb3VudCh0YXJnZXQsIGFuY2hvcikgewogICAgCQkJaW5zZXJ0X2Rldih0YXJnZXQsIHQsIGFuY2hvcik7CiAgICAJCX0sCiAgICAJCWQ6IGZ1bmN0aW9uIGRlc3Ryb3koZGV0YWNoaW5nKSB7CiAgICAJCQlpZiAoZGV0YWNoaW5nKSBkZXRhY2hfZGV2KHQpOwogICAgCQl9CiAgICAJfTsKCiAgICAJZGlzcGF0Y2hfZGV2KCJTdmVsdGVSZWdpc3RlckJsb2NrIiwgewogICAgCQlibG9jaywKICAgIAkJaWQ6IGZhbGxiYWNrX2Jsb2NrJDEubmFtZSwKICAgIAkJdHlwZTogImZhbGxiYWNrIiwKICAgIAkJc291cmNlOiAiKDIwOjEwKSBMb2FkaW5nLi4uIiwKICAgIAkJY3R4CiAgICAJfSk7CgogICAgCXJldHVybiBibG9jazsKICAgIH0KCiAgICBmdW5jdGlvbiBjcmVhdGVfZnJhZ21lbnQkZihjdHgpIHsKICAgIAlsZXQgZGl2OwogICAgCWxldCBzcGFuOwogICAgCWxldCBjdXJyZW50OwogICAgCWNvbnN0IGRlZmF1bHRfc2xvdF90ZW1wbGF0ZSA9IC8qI3Nsb3RzKi8gY3R4WzddLmRlZmF1bHQ7CiAgICAJY29uc3QgZGVmYXVsdF9zbG90ID0gY3JlYXRlX3Nsb3QoZGVmYXVsdF9zbG90X3RlbXBsYXRlLCBjdHgsIC8qJCRzY29wZSovIGN0eFs2XSwgbnVsbCk7CiAgICAJY29uc3QgZGVmYXVsdF9zbG90X29yX2ZhbGxiYWNrID0gZGVmYXVsdF9zbG90IHx8IGZhbGxiYWNrX2Jsb2NrJDEoY3R4KTsKICAgIAlsZXQgZGl2X2xldmVscyA9IFsvKiQkcmVzdFByb3BzKi8gY3R4WzFdLCB7IHJvbGU6ICJzdGF0dXMiIH0sIHsgY2xhc3M6IC8qY2xhc3NlcyovIGN0eFswXSB9XTsKICAgIAlsZXQgZGl2X2RhdGEgPSB7fTsKCiAgICAJZm9yIChsZXQgaSA9IDA7IGkgPCBkaXZfbGV2ZWxzLmxlbmd0aDsgaSArPSAxKSB7CiAgICAJCWRpdl9kYXRhID0gYXNzaWduKGRpdl9kYXRhLCBkaXZfbGV2ZWxzW2ldKTsKICAgIAl9CgogICAgCWNvbnN0IGJsb2NrID0gewogICAgCQljOiBmdW5jdGlvbiBjcmVhdGUoKSB7CiAgICAJCQlkaXYgPSBlbGVtZW50KCJkaXYiKTsKICAgIAkJCXNwYW4gPSBlbGVtZW50KCJzcGFuIik7CiAgICAJCQlpZiAoZGVmYXVsdF9zbG90X29yX2ZhbGxiYWNrKSBkZWZhdWx0X3Nsb3Rfb3JfZmFsbGJhY2suYygpOwogICAgCQkJYXR0cl9kZXYoc3BhbiwgImNsYXNzIiwgInNyLW9ubHkiKTsKICAgIAkJCWFkZF9sb2NhdGlvbihzcGFuLCBmaWxlJGYsIDE4LCAyLCAzOTkpOwogICAgCQkJc2V0X2F0dHJpYnV0ZXMoZGl2LCBkaXZfZGF0YSk7CiAgICAJCQlhZGRfbG9jYXRpb24oZGl2LCBmaWxlJGYsIDE3LCAwLCAzNDQpOwogICAgCQl9LAogICAgCQlsOiBmdW5jdGlvbiBjbGFpbShub2RlcykgewogICAgCQkJdGhyb3cgbmV3IEVycm9yKCJvcHRpb25zLmh5ZHJhdGUgb25seSB3b3JrcyBpZiB0aGUgY29tcG9uZW50IHdhcyBjb21waWxlZCB3aXRoIHRoZSBgaHlkcmF0YWJsZTogdHJ1ZWAgb3B0aW9uIik7CiAgICAJCX0sCiAgICAJCW06IGZ1bmN0aW9uIG1vdW50KHRhcmdldCwgYW5jaG9yKSB7CiAgICAJCQlpbnNlcnRfZGV2KHRhcmdldCwgZGl2LCBhbmNob3IpOwogICAgCQkJYXBwZW5kX2RldihkaXYsIHNwYW4pOwoKICAgIAkJCWlmIChkZWZhdWx0X3Nsb3Rfb3JfZmFsbGJhY2spIHsKICAgIAkJCQlkZWZhdWx0X3Nsb3Rfb3JfZmFsbGJhY2subShzcGFuLCBudWxsKTsKICAgIAkJCX0KCiAgICAJCQljdXJyZW50ID0gdHJ1ZTsKICAgIAkJfSwKICAgIAkJcDogZnVuY3Rpb24gdXBkYXRlKGN0eCwgW2RpcnR5XSkgewogICAgCQkJaWYgKGRlZmF1bHRfc2xvdCkgewogICAgCQkJCWlmIChkZWZhdWx0X3Nsb3QucCAmJiBkaXJ0eSAmIC8qJCRzY29wZSovIDY0KSB7CiAgICAJCQkJCXVwZGF0ZV9zbG90KGRlZmF1bHRfc2xvdCwgZGVmYXVsdF9zbG90X3RlbXBsYXRlLCBjdHgsIC8qJCRzY29wZSovIGN0eFs2XSwgZGlydHksIG51bGwsIG51bGwpOwogICAgCQkJCX0KICAgIAkJCX0KCiAgICAJCQlzZXRfYXR0cmlidXRlcyhkaXYsIGRpdl9kYXRhID0gZ2V0X3NwcmVhZF91cGRhdGUoZGl2X2xldmVscywgWwogICAgCQkJCWRpcnR5ICYgLyokJHJlc3RQcm9wcyovIDIgJiYgLyokJHJlc3RQcm9wcyovIGN0eFsxXSwKICAgIAkJCQl7IHJvbGU6ICJzdGF0dXMiIH0sCiAgICAJCQkJKCFjdXJyZW50IHx8IGRpcnR5ICYgLypjbGFzc2VzKi8gMSkgJiYgeyBjbGFzczogLypjbGFzc2VzKi8gY3R4WzBdIH0KICAgIAkJCV0pKTsKICAgIAkJfSwKICAgIAkJaTogZnVuY3Rpb24gaW50cm8obG9jYWwpIHsKICAgIAkJCWlmIChjdXJyZW50KSByZXR1cm47CiAgICAJCQl0cmFuc2l0aW9uX2luKGRlZmF1bHRfc2xvdF9vcl9mYWxsYmFjaywgbG9jYWwpOwogICAgCQkJY3VycmVudCA9IHRydWU7CiAgICAJCX0sCiAgICAJCW86IGZ1bmN0aW9uIG91dHJvKGxvY2FsKSB7CiAgICAJCQl0cmFuc2l0aW9uX291dChkZWZhdWx0X3Nsb3Rfb3JfZmFsbGJhY2ssIGxvY2FsKTsKICAgIAkJCWN1cnJlbnQgPSBmYWxzZTsKICAgIAkJfSwKICAgIAkJZDogZnVuY3Rpb24gZGVzdHJveShkZXRhY2hpbmcpIHsKICAgIAkJCWlmIChkZXRhY2hpbmcpIGRldGFjaF9kZXYoZGl2KTsKICAgIAkJCWlmIChkZWZhdWx0X3Nsb3Rfb3JfZmFsbGJhY2spIGRlZmF1bHRfc2xvdF9vcl9mYWxsYmFjay5kKGRldGFjaGluZyk7CiAgICAJCX0KICAgIAl9OwoKICAgIAlkaXNwYXRjaF9kZXYoIlN2ZWx0ZVJlZ2lzdGVyQmxvY2siLCB7CiAgICAJCWJsb2NrLAogICAgCQlpZDogY3JlYXRlX2ZyYWdtZW50JGYubmFtZSwKICAgIAkJdHlwZTogImNvbXBvbmVudCIsCiAgICAJCXNvdXJjZTogIiIsCiAgICAJCWN0eAogICAgCX0pOwoKICAgIAlyZXR1cm4gYmxvY2s7CiAgICB9CgogICAgZnVuY3Rpb24gaW5zdGFuY2UkZigkJHNlbGYsICQkcHJvcHMsICQkaW52YWxpZGF0ZSkgewogICAgCWxldCBjbGFzc2VzOwogICAgCWNvbnN0IG9taXRfcHJvcHNfbmFtZXMgPSBbImNsYXNzIiwidHlwZSIsInNpemUiLCJjb2xvciJdOwogICAgCWxldCAkJHJlc3RQcm9wcyA9IGNvbXB1dGVfcmVzdF9wcm9wcygkJHByb3BzLCBvbWl0X3Byb3BzX25hbWVzKTsKICAgIAlsZXQgeyAkJHNsb3RzOiBzbG90cyA9IHt9LCAkJHNjb3BlIH0gPSAkJHByb3BzOwogICAgCXZhbGlkYXRlX3Nsb3RzKCJTcGlubmVyIiwgc2xvdHMsIFsnZGVmYXVsdCddKTsKICAgIAlsZXQgeyBjbGFzczogY2xhc3NOYW1lID0gIiIgfSA9ICQkcHJvcHM7CiAgICAJbGV0IHsgdHlwZSA9ICJib3JkZXIiIH0gPSAkJHByb3BzOwogICAgCWxldCB7IHNpemUgPSAiIiB9ID0gJCRwcm9wczsKICAgIAlsZXQgeyBjb2xvciA9ICIiIH0gPSAkJHByb3BzOwoKICAgIAkkJHNlbGYuJCRzZXQgPSAkJG5ld19wcm9wcyA9PiB7CiAgICAJCSQkcHJvcHMgPSBhc3NpZ24oYXNzaWduKHt9LCAkJHByb3BzKSwgZXhjbHVkZV9pbnRlcm5hbF9wcm9wcygkJG5ld19wcm9wcykpOwogICAgCQkkJGludmFsaWRhdGUoMSwgJCRyZXN0UHJvcHMgPSBjb21wdXRlX3Jlc3RfcHJvcHMoJCRwcm9wcywgb21pdF9wcm9wc19uYW1lcykpOwogICAgCQlpZiAoImNsYXNzIiBpbiAkJG5ld19wcm9wcykgJCRpbnZhbGlkYXRlKDIsIGNsYXNzTmFtZSA9ICQkbmV3X3Byb3BzLmNsYXNzKTsKICAgIAkJaWYgKCJ0eXBlIiBpbiAkJG5ld19wcm9wcykgJCRpbnZhbGlkYXRlKDMsIHR5cGUgPSAkJG5ld19wcm9wcy50eXBlKTsKICAgIAkJaWYgKCJzaXplIiBpbiAkJG5ld19wcm9wcykgJCRpbnZhbGlkYXRlKDQsIHNpemUgPSAkJG5ld19wcm9wcy5zaXplKTsKICAgIAkJaWYgKCJjb2xvciIgaW4gJCRuZXdfcHJvcHMpICQkaW52YWxpZGF0ZSg1LCBjb2xvciA9ICQkbmV3X3Byb3BzLmNvbG9yKTsKICAgIAkJaWYgKCIkJHNjb3BlIiBpbiAkJG5ld19wcm9wcykgJCRpbnZhbGlkYXRlKDYsICQkc2NvcGUgPSAkJG5ld19wcm9wcy4kJHNjb3BlKTsKICAgIAl9OwoKICAgIAkkJHNlbGYuJGNhcHR1cmVfc3RhdGUgPSAoKSA9PiAoewogICAgCQljbGFzc25hbWVzLAogICAgCQljbGFzc05hbWUsCiAgICAJCXR5cGUsCiAgICAJCXNpemUsCiAgICAJCWNvbG9yLAogICAgCQljbGFzc2VzCiAgICAJfSk7CgogICAgCSQkc2VsZi4kaW5qZWN0X3N0YXRlID0gJCRuZXdfcHJvcHMgPT4gewogICAgCQlpZiAoImNsYXNzTmFtZSIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDIsIGNsYXNzTmFtZSA9ICQkbmV3X3Byb3BzLmNsYXNzTmFtZSk7CiAgICAJCWlmICgidHlwZSIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDMsIHR5cGUgPSAkJG5ld19wcm9wcy50eXBlKTsKICAgIAkJaWYgKCJzaXplIiBpbiAkJHByb3BzKSAkJGludmFsaWRhdGUoNCwgc2l6ZSA9ICQkbmV3X3Byb3BzLnNpemUpOwogICAgCQlpZiAoImNvbG9yIiBpbiAkJHByb3BzKSAkJGludmFsaWRhdGUoNSwgY29sb3IgPSAkJG5ld19wcm9wcy5jb2xvcik7CiAgICAJCWlmICgiY2xhc3NlcyIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDAsIGNsYXNzZXMgPSAkJG5ld19wcm9wcy5jbGFzc2VzKTsKICAgIAl9OwoKICAgIAlpZiAoJCRwcm9wcyAmJiAiJCRpbmplY3QiIGluICQkcHJvcHMpIHsKICAgIAkJJCRzZWxmLiRpbmplY3Rfc3RhdGUoJCRwcm9wcy4kJGluamVjdCk7CiAgICAJfQoKICAgIAkkJHNlbGYuJCQudXBkYXRlID0gKCkgPT4gewogICAgCQlpZiAoJCRzZWxmLiQkLmRpcnR5ICYgLypjbGFzc05hbWUsIHNpemUsIHR5cGUsIGNvbG9yKi8gNjApIHsKICAgIAkJCSAkJGludmFsaWRhdGUoMCwgY2xhc3NlcyA9IGNsYXNzbmFtZXMoY2xhc3NOYW1lLCBzaXplID8gYHNwaW5uZXItJHt0eXBlfS0ke3NpemV9YCA6IGZhbHNlLCBgc3Bpbm5lci0ke3R5cGV9YCwgY29sb3IgPyBgdGV4dC0ke2NvbG9yfWAgOiBmYWxzZSkpOwogICAgCQl9CiAgICAJfTsKCiAgICAJcmV0dXJuIFtjbGFzc2VzLCAkJHJlc3RQcm9wcywgY2xhc3NOYW1lLCB0eXBlLCBzaXplLCBjb2xvciwgJCRzY29wZSwgc2xvdHNdOwogICAgfQoKICAgIGNsYXNzIFNwaW5uZXIgZXh0ZW5kcyBTdmVsdGVDb21wb25lbnREZXYgewogICAgCWNvbnN0cnVjdG9yKG9wdGlvbnMpIHsKICAgIAkJc3VwZXIob3B0aW9ucyk7CiAgICAJCWluaXQodGhpcywgb3B0aW9ucywgaW5zdGFuY2UkZiwgY3JlYXRlX2ZyYWdtZW50JGYsIHNhZmVfbm90X2VxdWFsLCB7IGNsYXNzOiAyLCB0eXBlOiAzLCBzaXplOiA0LCBjb2xvcjogNSB9KTsKCiAgICAJCWRpc3BhdGNoX2RldigiU3ZlbHRlUmVnaXN0ZXJDb21wb25lbnQiLCB7CiAgICAJCQljb21wb25lbnQ6IHRoaXMsCiAgICAJCQl0YWdOYW1lOiAiU3Bpbm5lciIsCiAgICAJCQlvcHRpb25zLAogICAgCQkJaWQ6IGNyZWF0ZV9mcmFnbWVudCRmLm5hbWUKICAgIAkJfSk7CiAgICAJfQoKICAgIAlnZXQgY2xhc3MoKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPFNwaW5uZXI+OiBQcm9wcyBjYW5ub3QgYmUgcmVhZCBkaXJlY3RseSBmcm9tIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlzZXQgY2xhc3ModmFsdWUpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8U3Bpbm5lcj46IFByb3BzIGNhbm5vdCBiZSBzZXQgZGlyZWN0bHkgb24gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCWdldCB0eXBlKCkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxTcGlubmVyPjogUHJvcHMgY2Fubm90IGJlIHJlYWQgZGlyZWN0bHkgZnJvbSB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJc2V0IHR5cGUodmFsdWUpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8U3Bpbm5lcj46IFByb3BzIGNhbm5vdCBiZSBzZXQgZGlyZWN0bHkgb24gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCWdldCBzaXplKCkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxTcGlubmVyPjogUHJvcHMgY2Fubm90IGJlIHJlYWQgZGlyZWN0bHkgZnJvbSB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJc2V0IHNpemUodmFsdWUpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8U3Bpbm5lcj46IFByb3BzIGNhbm5vdCBiZSBzZXQgZGlyZWN0bHkgb24gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCWdldCBjb2xvcigpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8U3Bpbm5lcj46IFByb3BzIGNhbm5vdCBiZSByZWFkIGRpcmVjdGx5IGZyb20gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCXNldCBjb2xvcih2YWx1ZSkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxTcGlubmVyPjogUHJvcHMgY2Fubm90IGJlIHNldCBkaXJlY3RseSBvbiB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KICAgIH0KCiAgICBjb25zdCBzY2FubmVyID0gd3JpdGFibGUoIiIpOwoKICAgIC8qIHNyYy9TY2FubmVycy5zdmVsdGUgZ2VuZXJhdGVkIGJ5IFN2ZWx0ZSB2My4zMS4yICovCgogICAgZnVuY3Rpb24gZ2V0X2VhY2hfY29udGV4dChjdHgsIGxpc3QsIGkpIHsKICAgIAljb25zdCBjaGlsZF9jdHggPSBjdHguc2xpY2UoKTsKICAgIAljaGlsZF9jdHhbM10gPSBsaXN0W2ldOwogICAgCXJldHVybiBjaGlsZF9jdHg7CiAgICB9CgogICAgLy8gKDM2OjApIHs6ZWxzZX0KICAgIGZ1bmN0aW9uIGNyZWF0ZV9lbHNlX2Jsb2NrJDUoY3R4KSB7CiAgICAJbGV0IHNwaW5uZXI7CiAgICAJbGV0IGN1cnJlbnQ7CiAgICAJc3Bpbm5lciA9IG5ldyBTcGlubmVyKHsgJCRpbmxpbmU6IHRydWUgfSk7CgogICAgCWNvbnN0IGJsb2NrID0gewogICAgCQljOiBmdW5jdGlvbiBjcmVhdGUoKSB7CiAgICAJCQljcmVhdGVfY29tcG9uZW50KHNwaW5uZXIuJCQuZnJhZ21lbnQpOwogICAgCQl9LAogICAgCQltOiBmdW5jdGlvbiBtb3VudCh0YXJnZXQsIGFuY2hvcikgewogICAgCQkJbW91bnRfY29tcG9uZW50KHNwaW5uZXIsIHRhcmdldCwgYW5jaG9yKTsKICAgIAkJCWN1cnJlbnQgPSB0cnVlOwogICAgCQl9LAogICAgCQlwOiBub29wLAogICAgCQlpOiBmdW5jdGlvbiBpbnRybyhsb2NhbCkgewogICAgCQkJaWYgKGN1cnJlbnQpIHJldHVybjsKICAgIAkJCXRyYW5zaXRpb25faW4oc3Bpbm5lci4kJC5mcmFnbWVudCwgbG9jYWwpOwogICAgCQkJY3VycmVudCA9IHRydWU7CiAgICAJCX0sCiAgICAJCW86IGZ1bmN0aW9uIG91dHJvKGxvY2FsKSB7CiAgICAJCQl0cmFuc2l0aW9uX291dChzcGlubmVyLiQkLmZyYWdtZW50LCBsb2NhbCk7CiAgICAJCQljdXJyZW50ID0gZmFsc2U7CiAgICAJCX0sCiAgICAJCWQ6IGZ1bmN0aW9uIGRlc3Ryb3koZGV0YWNoaW5nKSB7CiAgICAJCQlkZXN0cm95X2NvbXBvbmVudChzcGlubmVyLCBkZXRhY2hpbmcpOwogICAgCQl9CiAgICAJfTsKCiAgICAJZGlzcGF0Y2hfZGV2KCJTdmVsdGVSZWdpc3RlckJsb2NrIiwgewogICAgCQlibG9jaywKICAgIAkJaWQ6IGNyZWF0ZV9lbHNlX2Jsb2NrJDUubmFtZSwKICAgIAkJdHlwZTogImVsc2UiLAogICAgCQlzb3VyY2U6ICIoMzY6MCkgezplbHNlfSIsCiAgICAJCWN0eAogICAgCX0pOwoKICAgIAlyZXR1cm4gYmxvY2s7CiAgICB9CgogICAgLy8gKDMwOjApIHsjaWYgc2Nhbm5lcnN9CiAgICBmdW5jdGlvbiBjcmVhdGVfaWZfYmxvY2skNShjdHgpIHsKICAgIAlsZXQgbGlzdGdyb3VwOwogICAgCWxldCBjdXJyZW50OwoKICAgIAlsaXN0Z3JvdXAgPSBuZXcgTGlzdEdyb3VwKHsKICAgIAkJCXByb3BzOiB7CiAgICAJCQkJJCRzbG90czogeyBkZWZhdWx0OiBbY3JlYXRlX2RlZmF1bHRfc2xvdF0gfSwKICAgIAkJCQkkJHNjb3BlOiB7IGN0eCB9CiAgICAJCQl9LAogICAgCQkJJCRpbmxpbmU6IHRydWUKICAgIAkJfSk7CgogICAgCWNvbnN0IGJsb2NrID0gewogICAgCQljOiBmdW5jdGlvbiBjcmVhdGUoKSB7CiAgICAJCQljcmVhdGVfY29tcG9uZW50KGxpc3Rncm91cC4kJC5mcmFnbWVudCk7CiAgICAJCX0sCiAgICAJCW06IGZ1bmN0aW9uIG1vdW50KHRhcmdldCwgYW5jaG9yKSB7CiAgICAJCQltb3VudF9jb21wb25lbnQobGlzdGdyb3VwLCB0YXJnZXQsIGFuY2hvcik7CiAgICAJCQljdXJyZW50ID0gdHJ1ZTsKICAgIAkJfSwKICAgIAkJcDogZnVuY3Rpb24gdXBkYXRlKGN0eCwgZGlydHkpIHsKICAgIAkJCWNvbnN0IGxpc3Rncm91cF9jaGFuZ2VzID0ge307CgogICAgCQkJaWYgKGRpcnR5ICYgLyokJHNjb3BlLCBzY2FubmVycywgdmFsdWUqLyA2NykgewogICAgCQkJCWxpc3Rncm91cF9jaGFuZ2VzLiQkc2NvcGUgPSB7IGRpcnR5LCBjdHggfTsKICAgIAkJCX0KCiAgICAJCQlsaXN0Z3JvdXAuJHNldChsaXN0Z3JvdXBfY2hhbmdlcyk7CiAgICAJCX0sCiAgICAJCWk6IGZ1bmN0aW9uIGludHJvKGxvY2FsKSB7CiAgICAJCQlpZiAoY3VycmVudCkgcmV0dXJuOwogICAgCQkJdHJhbnNpdGlvbl9pbihsaXN0Z3JvdXAuJCQuZnJhZ21lbnQsIGxvY2FsKTsKICAgIAkJCWN1cnJlbnQgPSB0cnVlOwogICAgCQl9LAogICAgCQlvOiBmdW5jdGlvbiBvdXRybyhsb2NhbCkgewogICAgCQkJdHJhbnNpdGlvbl9vdXQobGlzdGdyb3VwLiQkLmZyYWdtZW50LCBsb2NhbCk7CiAgICAJCQljdXJyZW50ID0gZmFsc2U7CiAgICAJCX0sCiAgICAJCWQ6IGZ1bmN0aW9uIGRlc3Ryb3koZGV0YWNoaW5nKSB7CiAgICAJCQlkZXN0cm95X2NvbXBvbmVudChsaXN0Z3JvdXAsIGRldGFjaGluZyk7CiAgICAJCX0KICAgIAl9OwoKICAgIAlkaXNwYXRjaF9kZXYoIlN2ZWx0ZVJlZ2lzdGVyQmxvY2siLCB7CiAgICAJCWJsb2NrLAogICAgCQlpZDogY3JlYXRlX2lmX2Jsb2NrJDUubmFtZSwKICAgIAkJdHlwZTogImlmIiwKICAgIAkJc291cmNlOiAiKDMwOjApIHsjaWYgc2Nhbm5lcnN9IiwKICAgIAkJY3R4CiAgICAJfSk7CgogICAgCXJldHVybiBibG9jazsKICAgIH0KCiAgICAvLyAoMzM6OCkgPExpc3RHcm91cEl0ZW0gYWN0aXZlPXtzY2FubmVyLm5hbWUgPT0gdmFsdWV9IGFjdGlvbiB0YWc9ImJ1dHRvbiIgb246Y2xpY2s9e3NlbGVjdChzY2FubmVyLm5hbWUpfT4KICAgIGZ1bmN0aW9uIGNyZWF0ZV9kZWZhdWx0X3Nsb3RfMShjdHgpIHsKICAgIAlsZXQgdF92YWx1ZSA9IC8qc2Nhbm5lciovIGN0eFszXS5uYW1lICsgIiI7CiAgICAJbGV0IHQ7CgogICAgCWNvbnN0IGJsb2NrID0gewogICAgCQljOiBmdW5jdGlvbiBjcmVhdGUoKSB7CiAgICAJCQl0ID0gdGV4dCh0X3ZhbHVlKTsKICAgIAkJfSwKICAgIAkJbTogZnVuY3Rpb24gbW91bnQodGFyZ2V0LCBhbmNob3IpIHsKICAgIAkJCWluc2VydF9kZXYodGFyZ2V0LCB0LCBhbmNob3IpOwogICAgCQl9LAogICAgCQlwOiBmdW5jdGlvbiB1cGRhdGUoY3R4LCBkaXJ0eSkgewogICAgCQkJaWYgKGRpcnR5ICYgLypzY2FubmVycyovIDEgJiYgdF92YWx1ZSAhPT0gKHRfdmFsdWUgPSAvKnNjYW5uZXIqLyBjdHhbM10ubmFtZSArICIiKSkgc2V0X2RhdGFfZGV2KHQsIHRfdmFsdWUpOwogICAgCQl9LAogICAgCQlkOiBmdW5jdGlvbiBkZXN0cm95KGRldGFjaGluZykgewogICAgCQkJaWYgKGRldGFjaGluZykgZGV0YWNoX2Rldih0KTsKICAgIAkJfQogICAgCX07CgogICAgCWRpc3BhdGNoX2RldigiU3ZlbHRlUmVnaXN0ZXJCbG9jayIsIHsKICAgIAkJYmxvY2ssCiAgICAJCWlkOiBjcmVhdGVfZGVmYXVsdF9zbG90XzEubmFtZSwKICAgIAkJdHlwZTogInNsb3QiLAogICAgCQlzb3VyY2U6ICIoMzM6OCkgPExpc3RHcm91cEl0ZW0gYWN0aXZlPXtzY2FubmVyLm5hbWUgPT0gdmFsdWV9IGFjdGlvbiB0YWc9XFxcImJ1dHRvblxcXCIgb246Y2xpY2s9e3NlbGVjdChzY2FubmVyLm5hbWUpfT4iLAogICAgCQljdHgKICAgIAl9KTsKCiAgICAJcmV0dXJuIGJsb2NrOwogICAgfQoKICAgIC8vICgzMjo0KSB7I2VhY2ggc2Nhbm5lcnMgYXMgc2Nhbm5lciB9CiAgICBmdW5jdGlvbiBjcmVhdGVfZWFjaF9ibG9jayhjdHgpIHsKICAgIAlsZXQgbGlzdGdyb3VwaXRlbTsKICAgIAlsZXQgY3VycmVudDsKCiAgICAJbGlzdGdyb3VwaXRlbSA9IG5ldyBMaXN0R3JvdXBJdGVtKHsKICAgIAkJCXByb3BzOiB7CiAgICAJCQkJYWN0aXZlOiAvKnNjYW5uZXIqLyBjdHhbM10ubmFtZSA9PSAvKnZhbHVlKi8gY3R4WzFdLAogICAgCQkJCWFjdGlvbjogdHJ1ZSwKICAgIAkJCQl0YWc6ICJidXR0b24iLAogICAgCQkJCSQkc2xvdHM6IHsgZGVmYXVsdDogW2NyZWF0ZV9kZWZhdWx0X3Nsb3RfMV0gfSwKICAgIAkJCQkkJHNjb3BlOiB7IGN0eCB9CiAgICAJCQl9LAogICAgCQkJJCRpbmxpbmU6IHRydWUKICAgIAkJfSk7CgogICAgCWxpc3Rncm91cGl0ZW0uJG9uKCJjbGljayIsIGZ1bmN0aW9uICgpIHsKICAgIAkJaWYgKGlzX2Z1bmN0aW9uKC8qc2VsZWN0Ki8gY3R4WzJdKC8qc2Nhbm5lciovIGN0eFszXS5uYW1lKSkpIC8qc2VsZWN0Ki8gY3R4WzJdKC8qc2Nhbm5lciovIGN0eFszXS5uYW1lKS5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgCX0pOwoKICAgIAljb25zdCBibG9jayA9IHsKICAgIAkJYzogZnVuY3Rpb24gY3JlYXRlKCkgewogICAgCQkJY3JlYXRlX2NvbXBvbmVudChsaXN0Z3JvdXBpdGVtLiQkLmZyYWdtZW50KTsKICAgIAkJfSwKICAgIAkJbTogZnVuY3Rpb24gbW91bnQodGFyZ2V0LCBhbmNob3IpIHsKICAgIAkJCW1vdW50X2NvbXBvbmVudChsaXN0Z3JvdXBpdGVtLCB0YXJnZXQsIGFuY2hvcik7CiAgICAJCQljdXJyZW50ID0gdHJ1ZTsKICAgIAkJfSwKICAgIAkJcDogZnVuY3Rpb24gdXBkYXRlKG5ld19jdHgsIGRpcnR5KSB7CiAgICAJCQljdHggPSBuZXdfY3R4OwogICAgCQkJY29uc3QgbGlzdGdyb3VwaXRlbV9jaGFuZ2VzID0ge307CiAgICAJCQlpZiAoZGlydHkgJiAvKnNjYW5uZXJzLCB2YWx1ZSovIDMpIGxpc3Rncm91cGl0ZW1fY2hhbmdlcy5hY3RpdmUgPSAvKnNjYW5uZXIqLyBjdHhbM10ubmFtZSA9PSAvKnZhbHVlKi8gY3R4WzFdOwoKICAgIAkJCWlmIChkaXJ0eSAmIC8qJCRzY29wZSwgc2Nhbm5lcnMqLyA2NSkgewogICAgCQkJCWxpc3Rncm91cGl0ZW1fY2hhbmdlcy4kJHNjb3BlID0geyBkaXJ0eSwgY3R4IH07CiAgICAJCQl9CgogICAgCQkJbGlzdGdyb3VwaXRlbS4kc2V0KGxpc3Rncm91cGl0ZW1fY2hhbmdlcyk7CiAgICAJCX0sCiAgICAJCWk6IGZ1bmN0aW9uIGludHJvKGxvY2FsKSB7CiAgICAJCQlpZiAoY3VycmVudCkgcmV0dXJuOwogICAgCQkJdHJhbnNpdGlvbl9pbihsaXN0Z3JvdXBpdGVtLiQkLmZyYWdtZW50LCBsb2NhbCk7CiAgICAJCQljdXJyZW50ID0gdHJ1ZTsKICAgIAkJfSwKICAgIAkJbzogZnVuY3Rpb24gb3V0cm8obG9jYWwpIHsKICAgIAkJCXRyYW5zaXRpb25fb3V0KGxpc3Rncm91cGl0ZW0uJCQuZnJhZ21lbnQsIGxvY2FsKTsKICAgIAkJCWN1cnJlbnQgPSBmYWxzZTsKICAgIAkJfSwKICAgIAkJZDogZnVuY3Rpb24gZGVzdHJveShkZXRhY2hpbmcpIHsKICAgIAkJCWRlc3Ryb3lfY29tcG9uZW50KGxpc3Rncm91cGl0ZW0sIGRldGFjaGluZyk7CiAgICAJCX0KICAgIAl9OwoKICAgIAlkaXNwYXRjaF9kZXYoIlN2ZWx0ZVJlZ2lzdGVyQmxvY2siLCB7CiAgICAJCWJsb2NrLAogICAgCQlpZDogY3JlYXRlX2VhY2hfYmxvY2submFtZSwKICAgIAkJdHlwZTogImVhY2giLAogICAgCQlzb3VyY2U6ICIoMzI6NCkgeyNlYWNoIHNjYW5uZXJzIGFzIHNjYW5uZXIgfSIsCiAgICAJCWN0eAogICAgCX0pOwoKICAgIAlyZXR1cm4gYmxvY2s7CiAgICB9CgogICAgLy8gKDMxOjQpIDxMaXN0R3JvdXA+CiAgICBmdW5jdGlvbiBjcmVhdGVfZGVmYXVsdF9zbG90KGN0eCkgewogICAgCWxldCBlYWNoXzFfYW5jaG9yOwogICAgCWxldCBjdXJyZW50OwogICAgCWxldCBlYWNoX3ZhbHVlID0gLypzY2FubmVycyovIGN0eFswXTsKICAgIAl2YWxpZGF0ZV9lYWNoX2FyZ3VtZW50KGVhY2hfdmFsdWUpOwogICAgCWxldCBlYWNoX2Jsb2NrcyA9IFtdOwoKICAgIAlmb3IgKGxldCBpID0gMDsgaSA8IGVhY2hfdmFsdWUubGVuZ3RoOyBpICs9IDEpIHsKICAgIAkJZWFjaF9ibG9ja3NbaV0gPSBjcmVhdGVfZWFjaF9ibG9jayhnZXRfZWFjaF9jb250ZXh0KGN0eCwgZWFjaF92YWx1ZSwgaSkpOwogICAgCX0KCiAgICAJY29uc3Qgb3V0ID0gaSA9PiB0cmFuc2l0aW9uX291dChlYWNoX2Jsb2Nrc1tpXSwgMSwgMSwgKCkgPT4gewogICAgCQllYWNoX2Jsb2Nrc1tpXSA9IG51bGw7CiAgICAJfSk7CgogICAgCWNvbnN0IGJsb2NrID0gewogICAgCQljOiBmdW5jdGlvbiBjcmVhdGUoKSB7CiAgICAJCQlmb3IgKGxldCBpID0gMDsgaSA8IGVhY2hfYmxvY2tzLmxlbmd0aDsgaSArPSAxKSB7CiAgICAJCQkJZWFjaF9ibG9ja3NbaV0uYygpOwogICAgCQkJfQoKICAgIAkJCWVhY2hfMV9hbmNob3IgPSBlbXB0eSgpOwogICAgCQl9LAogICAgCQltOiBmdW5jdGlvbiBtb3VudCh0YXJnZXQsIGFuY2hvcikgewogICAgCQkJZm9yIChsZXQgaSA9IDA7IGkgPCBlYWNoX2Jsb2Nrcy5sZW5ndGg7IGkgKz0gMSkgewogICAgCQkJCWVhY2hfYmxvY2tzW2ldLm0odGFyZ2V0LCBhbmNob3IpOwogICAgCQkJfQoKICAgIAkJCWluc2VydF9kZXYodGFyZ2V0LCBlYWNoXzFfYW5jaG9yLCBhbmNob3IpOwogICAgCQkJY3VycmVudCA9IHRydWU7CiAgICAJCX0sCiAgICAJCXA6IGZ1bmN0aW9uIHVwZGF0ZShjdHgsIGRpcnR5KSB7CiAgICAJCQlpZiAoZGlydHkgJiAvKnNjYW5uZXJzLCB2YWx1ZSwgc2VsZWN0Ki8gNykgewogICAgCQkJCWVhY2hfdmFsdWUgPSAvKnNjYW5uZXJzKi8gY3R4WzBdOwogICAgCQkJCXZhbGlkYXRlX2VhY2hfYXJndW1lbnQoZWFjaF92YWx1ZSk7CiAgICAJCQkJbGV0IGk7CgogICAgCQkJCWZvciAoaSA9IDA7IGkgPCBlYWNoX3ZhbHVlLmxlbmd0aDsgaSArPSAxKSB7CiAgICAJCQkJCWNvbnN0IGNoaWxkX2N0eCA9IGdldF9lYWNoX2NvbnRleHQoY3R4LCBlYWNoX3ZhbHVlLCBpKTsKCiAgICAJCQkJCWlmIChlYWNoX2Jsb2Nrc1tpXSkgewogICAgCQkJCQkJZWFjaF9ibG9ja3NbaV0ucChjaGlsZF9jdHgsIGRpcnR5KTsKICAgIAkJCQkJCXRyYW5zaXRpb25faW4oZWFjaF9ibG9ja3NbaV0sIDEpOwogICAgCQkJCQl9IGVsc2UgewogICAgCQkJCQkJZWFjaF9ibG9ja3NbaV0gPSBjcmVhdGVfZWFjaF9ibG9jayhjaGlsZF9jdHgpOwogICAgCQkJCQkJZWFjaF9ibG9ja3NbaV0uYygpOwogICAgCQkJCQkJdHJhbnNpdGlvbl9pbihlYWNoX2Jsb2Nrc1tpXSwgMSk7CiAgICAJCQkJCQllYWNoX2Jsb2Nrc1tpXS5tKGVhY2hfMV9hbmNob3IucGFyZW50Tm9kZSwgZWFjaF8xX2FuY2hvcik7CiAgICAJCQkJCX0KICAgIAkJCQl9CgogICAgCQkJCWdyb3VwX291dHJvcygpOwoKICAgIAkJCQlmb3IgKGkgPSBlYWNoX3ZhbHVlLmxlbmd0aDsgaSA8IGVhY2hfYmxvY2tzLmxlbmd0aDsgaSArPSAxKSB7CiAgICAJCQkJCW91dChpKTsKICAgIAkJCQl9CgogICAgCQkJCWNoZWNrX291dHJvcygpOwogICAgCQkJfQogICAgCQl9LAogICAgCQlpOiBmdW5jdGlvbiBpbnRybyhsb2NhbCkgewogICAgCQkJaWYgKGN1cnJlbnQpIHJldHVybjsKCiAgICAJCQlmb3IgKGxldCBpID0gMDsgaSA8IGVhY2hfdmFsdWUubGVuZ3RoOyBpICs9IDEpIHsKICAgIAkJCQl0cmFuc2l0aW9uX2luKGVhY2hfYmxvY2tzW2ldKTsKICAgIAkJCX0KCiAgICAJCQljdXJyZW50ID0gdHJ1ZTsKICAgIAkJfSwKICAgIAkJbzogZnVuY3Rpb24gb3V0cm8obG9jYWwpIHsKICAgIAkJCWVhY2hfYmxvY2tzID0gZWFjaF9ibG9ja3MuZmlsdGVyKEJvb2xlYW4pOwoKICAgIAkJCWZvciAobGV0IGkgPSAwOyBpIDwgZWFjaF9ibG9ja3MubGVuZ3RoOyBpICs9IDEpIHsKICAgIAkJCQl0cmFuc2l0aW9uX291dChlYWNoX2Jsb2Nrc1tpXSk7CiAgICAJCQl9CgogICAgCQkJY3VycmVudCA9IGZhbHNlOwogICAgCQl9LAogICAgCQlkOiBmdW5jdGlvbiBkZXN0cm95KGRldGFjaGluZykgewogICAgCQkJZGVzdHJveV9lYWNoKGVhY2hfYmxvY2tzLCBkZXRhY2hpbmcpOwogICAgCQkJaWYgKGRldGFjaGluZykgZGV0YWNoX2RldihlYWNoXzFfYW5jaG9yKTsKICAgIAkJfQogICAgCX07CgogICAgCWRpc3BhdGNoX2RldigiU3ZlbHRlUmVnaXN0ZXJCbG9jayIsIHsKICAgIAkJYmxvY2ssCiAgICAJCWlkOiBjcmVhdGVfZGVmYXVsdF9zbG90Lm5hbWUsCiAgICAJCXR5cGU6ICJzbG90IiwKICAgIAkJc291cmNlOiAiKDMxOjQpIDxMaXN0R3JvdXA+IiwKICAgIAkJY3R4CiAgICAJfSk7CgogICAgCXJldHVybiBibG9jazsKICAgIH0KCiAgICBmdW5jdGlvbiBjcmVhdGVfZnJhZ21lbnQkZyhjdHgpIHsKICAgIAlsZXQgY3VycmVudF9ibG9ja190eXBlX2luZGV4OwogICAgCWxldCBpZl9ibG9jazsKICAgIAlsZXQgaWZfYmxvY2tfYW5jaG9yOwogICAgCWxldCBjdXJyZW50OwogICAgCWNvbnN0IGlmX2Jsb2NrX2NyZWF0b3JzID0gW2NyZWF0ZV9pZl9ibG9jayQ1LCBjcmVhdGVfZWxzZV9ibG9jayQ1XTsKICAgIAljb25zdCBpZl9ibG9ja3MgPSBbXTsKCiAgICAJZnVuY3Rpb24gc2VsZWN0X2Jsb2NrX3R5cGUoY3R4LCBkaXJ0eSkgewogICAgCQlpZiAoLypzY2FubmVycyovIGN0eFswXSkgcmV0dXJuIDA7CiAgICAJCXJldHVybiAxOwogICAgCX0KCiAgICAJY3VycmVudF9ibG9ja190eXBlX2luZGV4ID0gc2VsZWN0X2Jsb2NrX3R5cGUoY3R4KTsKICAgIAlpZl9ibG9jayA9IGlmX2Jsb2Nrc1tjdXJyZW50X2Jsb2NrX3R5cGVfaW5kZXhdID0gaWZfYmxvY2tfY3JlYXRvcnNbY3VycmVudF9ibG9ja190eXBlX2luZGV4XShjdHgpOwoKICAgIAljb25zdCBibG9jayA9IHsKICAgIAkJYzogZnVuY3Rpb24gY3JlYXRlKCkgewogICAgCQkJaWZfYmxvY2suYygpOwogICAgCQkJaWZfYmxvY2tfYW5jaG9yID0gZW1wdHkoKTsKICAgIAkJfSwKICAgIAkJbDogZnVuY3Rpb24gY2xhaW0obm9kZXMpIHsKICAgIAkJCXRocm93IG5ldyBFcnJvcigib3B0aW9ucy5oeWRyYXRlIG9ubHkgd29ya3MgaWYgdGhlIGNvbXBvbmVudCB3YXMgY29tcGlsZWQgd2l0aCB0aGUgYGh5ZHJhdGFibGU6IHRydWVgIG9wdGlvbiIpOwogICAgCQl9LAogICAgCQltOiBmdW5jdGlvbiBtb3VudCh0YXJnZXQsIGFuY2hvcikgewogICAgCQkJaWZfYmxvY2tzW2N1cnJlbnRfYmxvY2tfdHlwZV9pbmRleF0ubSh0YXJnZXQsIGFuY2hvcik7CiAgICAJCQlpbnNlcnRfZGV2KHRhcmdldCwgaWZfYmxvY2tfYW5jaG9yLCBhbmNob3IpOwogICAgCQkJY3VycmVudCA9IHRydWU7CiAgICAJCX0sCiAgICAJCXA6IGZ1bmN0aW9uIHVwZGF0ZShjdHgsIFtkaXJ0eV0pIHsKICAgIAkJCWxldCBwcmV2aW91c19ibG9ja19pbmRleCA9IGN1cnJlbnRfYmxvY2tfdHlwZV9pbmRleDsKICAgIAkJCWN1cnJlbnRfYmxvY2tfdHlwZV9pbmRleCA9IHNlbGVjdF9ibG9ja190eXBlKGN0eCk7CgogICAgCQkJaWYgKGN1cnJlbnRfYmxvY2tfdHlwZV9pbmRleCA9PT0gcHJldmlvdXNfYmxvY2tfaW5kZXgpIHsKICAgIAkJCQlpZl9ibG9ja3NbY3VycmVudF9ibG9ja190eXBlX2luZGV4XS5wKGN0eCwgZGlydHkpOwogICAgCQkJfSBlbHNlIHsKICAgIAkJCQlncm91cF9vdXRyb3MoKTsKCiAgICAJCQkJdHJhbnNpdGlvbl9vdXQoaWZfYmxvY2tzW3ByZXZpb3VzX2Jsb2NrX2luZGV4XSwgMSwgMSwgKCkgPT4gewogICAgCQkJCQlpZl9ibG9ja3NbcHJldmlvdXNfYmxvY2tfaW5kZXhdID0gbnVsbDsKICAgIAkJCQl9KTsKCiAgICAJCQkJY2hlY2tfb3V0cm9zKCk7CiAgICAJCQkJaWZfYmxvY2sgPSBpZl9ibG9ja3NbY3VycmVudF9ibG9ja190eXBlX2luZGV4XTsKCiAgICAJCQkJaWYgKCFpZl9ibG9jaykgewogICAgCQkJCQlpZl9ibG9jayA9IGlmX2Jsb2Nrc1tjdXJyZW50X2Jsb2NrX3R5cGVfaW5kZXhdID0gaWZfYmxvY2tfY3JlYXRvcnNbY3VycmVudF9ibG9ja190eXBlX2luZGV4XShjdHgpOwogICAgCQkJCQlpZl9ibG9jay5jKCk7CiAgICAJCQkJfSBlbHNlIHsKICAgIAkJCQkJaWZfYmxvY2sucChjdHgsIGRpcnR5KTsKICAgIAkJCQl9CgogICAgCQkJCXRyYW5zaXRpb25faW4oaWZfYmxvY2ssIDEpOwogICAgCQkJCWlmX2Jsb2NrLm0oaWZfYmxvY2tfYW5jaG9yLnBhcmVudE5vZGUsIGlmX2Jsb2NrX2FuY2hvcik7CiAgICAJCQl9CiAgICAJCX0sCiAgICAJCWk6IGZ1bmN0aW9uIGludHJvKGxvY2FsKSB7CiAgICAJCQlpZiAoY3VycmVudCkgcmV0dXJuOwogICAgCQkJdHJhbnNpdGlvbl9pbihpZl9ibG9jayk7CiAgICAJCQljdXJyZW50ID0gdHJ1ZTsKICAgIAkJfSwKICAgIAkJbzogZnVuY3Rpb24gb3V0cm8obG9jYWwpIHsKICAgIAkJCXRyYW5zaXRpb25fb3V0KGlmX2Jsb2NrKTsKICAgIAkJCWN1cnJlbnQgPSBmYWxzZTsKICAgIAkJfSwKICAgIAkJZDogZnVuY3Rpb24gZGVzdHJveShkZXRhY2hpbmcpIHsKICAgIAkJCWlmX2Jsb2Nrc1tjdXJyZW50X2Jsb2NrX3R5cGVfaW5kZXhdLmQoZGV0YWNoaW5nKTsKICAgIAkJCWlmIChkZXRhY2hpbmcpIGRldGFjaF9kZXYoaWZfYmxvY2tfYW5jaG9yKTsKICAgIAkJfQogICAgCX07CgogICAgCWRpc3BhdGNoX2RldigiU3ZlbHRlUmVnaXN0ZXJCbG9jayIsIHsKICAgIAkJYmxvY2ssCiAgICAJCWlkOiBjcmVhdGVfZnJhZ21lbnQkZy5uYW1lLAogICAgCQl0eXBlOiAiY29tcG9uZW50IiwKICAgIAkJc291cmNlOiAiIiwKICAgIAkJY3R4CiAgICAJfSk7CgogICAgCXJldHVybiBibG9jazsKICAgIH0KCiAgICBmdW5jdGlvbiBpbnN0YW5jZSRnKCQkc2VsZiwgJCRwcm9wcywgJCRpbnZhbGlkYXRlKSB7CiAgICAJbGV0IHsgJCRzbG90czogc2xvdHMgPSB7fSwgJCRzY29wZSB9ID0gJCRwcm9wczsKICAgIAl2YWxpZGF0ZV9zbG90cygiU2Nhbm5lcnMiLCBzbG90cywgW10pOwogICAgCWxldCBzY2FubmVyczsKCiAgICAJb25Nb3VudChhc3luYyAoKSA9PiB7CiAgICAJCWF3YWl0IGZldGNoKGAvYXBpL2RldmljZXNgKS50aGVuKHIgPT4gci5qc29uKCkpLnRoZW4oZGF0YSA9PiB7CiAgICAJCQkkJGludmFsaWRhdGUoMCwgc2Nhbm5lcnMgPSBkYXRhKTsKCiAgICAJCQlpZiAoc2Nhbm5lcnMubGVuZ3RoID4gMCkgewogICAgCQkJCXNlbGVjdChzY2FubmVyc1swXS5uYW1lKTsKICAgIAkJCX0KICAgIAkJfSk7CiAgICAJfSk7CgogICAgCWZ1bmN0aW9uIHNlbGVjdChuYW1lKSB7CiAgICAJCXNjYW5uZXIuc2V0KG5hbWUpOwogICAgCQkkJGludmFsaWRhdGUoMSwgdmFsdWUgPSBuYW1lKTsKICAgIAl9CgogICAgCWxldCB2YWx1ZSA9ICIiOwogICAgCWNvbnN0IHdyaXRhYmxlX3Byb3BzID0gW107CgogICAgCU9iamVjdC5rZXlzKCQkcHJvcHMpLmZvckVhY2goa2V5ID0+IHsKICAgIAkJaWYgKCF+d3JpdGFibGVfcHJvcHMuaW5kZXhPZihrZXkpICYmIGtleS5zbGljZSgwLCAyKSAhPT0gIiQkIikgY29uc29sZS53YXJuKGA8U2Nhbm5lcnM+IHdhcyBjcmVhdGVkIHdpdGggdW5rbm93biBwcm9wICcke2tleX0nYCk7CiAgICAJfSk7CgogICAgCSQkc2VsZi4kY2FwdHVyZV9zdGF0ZSA9ICgpID0+ICh7CiAgICAJCUxpc3RHcm91cCwKICAgIAkJTGlzdEdyb3VwSXRlbSwKICAgIAkJU3Bpbm5lciwKICAgIAkJb25Nb3VudCwKICAgIAkJc2Nhbm5lcnMsCiAgICAJCXNjYW5uZXIsCiAgICAJCXNlbGVjdCwKICAgIAkJdmFsdWUKICAgIAl9KTsKCiAgICAJJCRzZWxmLiRpbmplY3Rfc3RhdGUgPSAkJHByb3BzID0+IHsKICAgIAkJaWYgKCJzY2FubmVycyIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDAsIHNjYW5uZXJzID0gJCRwcm9wcy5zY2FubmVycyk7CiAgICAJCWlmICgidmFsdWUiIGluICQkcHJvcHMpICQkaW52YWxpZGF0ZSgxLCB2YWx1ZSA9ICQkcHJvcHMudmFsdWUpOwogICAgCX07CgogICAgCWlmICgkJHByb3BzICYmICIkJGluamVjdCIgaW4gJCRwcm9wcykgewogICAgCQkkJHNlbGYuJGluamVjdF9zdGF0ZSgkJHByb3BzLiQkaW5qZWN0KTsKICAgIAl9CgogICAgCXJldHVybiBbc2Nhbm5lcnMsIHZhbHVlLCBzZWxlY3RdOwogICAgfQoKICAgIGNsYXNzIFNjYW5uZXJzIGV4dGVuZHMgU3ZlbHRlQ29tcG9uZW50RGV2IHsKICAgIAljb25zdHJ1Y3RvcihvcHRpb25zKSB7CiAgICAJCXN1cGVyKG9wdGlvbnMpOwogICAgCQlpbml0KHRoaXMsIG9wdGlvbnMsIGluc3RhbmNlJGcsIGNyZWF0ZV9mcmFnbWVudCRnLCBzYWZlX25vdF9lcXVhbCwge30pOwoKICAgIAkJZGlzcGF0Y2hfZGV2KCJTdmVsdGVSZWdpc3RlckNvbXBvbmVudCIsIHsKICAgIAkJCWNvbXBvbmVudDogdGhpcywKICAgIAkJCXRhZ05hbWU6ICJTY2FubmVycyIsCiAgICAJCQlvcHRpb25zLAogICAgCQkJaWQ6IGNyZWF0ZV9mcmFnbWVudCRnLm5hbWUKICAgIAkJfSk7CiAgICAJfQogICAgfQoKICAgIC8qIHNyYy9TY2FuUGFnZS5zdmVsdGUgZ2VuZXJhdGVkIGJ5IFN2ZWx0ZSB2My4zMS4yICovCiAgICBjb25zdCBmaWxlJGcgPSAic3JjL1NjYW5QYWdlLnN2ZWx0ZSI7CgogICAgLy8gKDY5OjIwKSA8QnV0dG9uIG91dGxpbmUgcHJpbWFyeSBvbjpjbGljaz17c2Nhbn0+CiAgICBmdW5jdGlvbiBjcmVhdGVfZGVmYXVsdF9zbG90XzkoY3R4KSB7CiAgICAJbGV0IHQ7CgogICAgCWNvbnN0IGJsb2NrID0gewogICAgCQljOiBmdW5jdGlvbiBjcmVhdGUoKSB7CiAgICAJCQl0ID0gdGV4dCgiU2NhbiIpOwogICAgCQl9LAogICAgCQltOiBmdW5jdGlvbiBtb3VudCh0YXJnZXQsIGFuY2hvcikgewogICAgCQkJaW5zZXJ0X2Rldih0YXJnZXQsIHQsIGFuY2hvcik7CiAgICAJCX0sCiAgICAJCWQ6IGZ1bmN0aW9uIGRlc3Ryb3koZGV0YWNoaW5nKSB7CiAgICAJCQlpZiAoZGV0YWNoaW5nKSBkZXRhY2hfZGV2KHQpOwogICAgCQl9CiAgICAJfTsKCiAgICAJZGlzcGF0Y2hfZGV2KCJTdmVsdGVSZWdpc3RlckJsb2NrIiwgewogICAgCQlibG9jaywKICAgIAkJaWQ6IGNyZWF0ZV9kZWZhdWx0X3Nsb3RfOS5uYW1lLAogICAgCQl0eXBlOiAic2xvdCIsCiAgICAJCXNvdXJjZTogIig2OToyMCkgPEJ1dHRvbiBvdXRsaW5lIHByaW1hcnkgb246Y2xpY2s9e3NjYW59PiIsCiAgICAJCWN0eAogICAgCX0pOwoKICAgIAlyZXR1cm4gYmxvY2s7CiAgICB9CgogICAgLy8gKDcwOjIwKSA8QnV0dG9uIG91dGxpbmUgc3VjY2VzcyBkaXNhYmxlZD17IWltYWdlU2hvd259IG9uOmNsaWNrPXtkb3dubG9hZH0+CiAgICBmdW5jdGlvbiBjcmVhdGVfZGVmYXVsdF9zbG90XzgoY3R4KSB7CiAgICAJbGV0IHQ7CgogICAgCWNvbnN0IGJsb2NrID0gewogICAgCQljOiBmdW5jdGlvbiBjcmVhdGUoKSB7CiAgICAJCQl0ID0gdGV4dCgiRG93bmxvYWQiKTsKICAgIAkJfSwKICAgIAkJbTogZnVuY3Rpb24gbW91bnQodGFyZ2V0LCBhbmNob3IpIHsKICAgIAkJCWluc2VydF9kZXYodGFyZ2V0LCB0LCBhbmNob3IpOwogICAgCQl9LAogICAgCQlkOiBmdW5jdGlvbiBkZXN0cm95KGRldGFjaGluZykgewogICAgCQkJaWYgKGRldGFjaGluZykgZGV0YWNoX2Rldih0KTsKICAgIAkJfQogICAgCX07CgogICAgCWRpc3BhdGNoX2RldigiU3ZlbHRlUmVnaXN0ZXJCbG9jayIsIHsKICAgIAkJYmxvY2ssCiAgICAJCWlkOiBjcmVhdGVfZGVmYXVsdF9zbG90XzgubmFtZSwKICAgIAkJdHlwZTogInNsb3QiLAogICAgCQlzb3VyY2U6ICIoNzA6MjApIDxCdXR0b24gb3V0bGluZSBzdWNjZXNzIGRpc2FibGVkPXshaW1hZ2VTaG93bn0gb246Y2xpY2s9e2Rvd25sb2FkfT4iLAogICAgCQljdHgKICAgIAl9KTsKCiAgICAJcmV0dXJuIGJsb2NrOwogICAgfQoKICAgIC8vICg3MToyMCkgPEJ1dHRvbiBvdXRsaW5lIG9uOmNsaWNrPXtjbGVhcn0+CiAgICBmdW5jdGlvbiBjcmVhdGVfZGVmYXVsdF9zbG90XzcoY3R4KSB7CiAgICAJbGV0IHQ7CgogICAgCWNvbnN0IGJsb2NrID0gewogICAgCQljOiBmdW5jdGlvbiBjcmVhdGUoKSB7CiAgICAJCQl0ID0gdGV4dCgiQ2xlYXIiKTsKICAgIAkJfSwKICAgIAkJbTogZnVuY3Rpb24gbW91bnQodGFyZ2V0LCBhbmNob3IpIHsKICAgIAkJCWluc2VydF9kZXYodGFyZ2V0LCB0LCBhbmNob3IpOwogICAgCQl9LAogICAgCQlkOiBmdW5jdGlvbiBkZXN0cm95KGRldGFjaGluZykgewogICAgCQkJaWYgKGRldGFjaGluZykgZGV0YWNoX2Rldih0KTsKICAgIAkJfQogICAgCX07CgogICAgCWRpc3BhdGNoX2RldigiU3ZlbHRlUmVnaXN0ZXJCbG9jayIsIHsKICAgIAkJYmxvY2ssCiAgICAJCWlkOiBjcmVhdGVfZGVmYXVsdF9zbG90XzcubmFtZSwKICAgIAkJdHlwZTogInNsb3QiLAogICAgCQlzb3VyY2U6ICIoNzE6MjApIDxCdXR0b24gb3V0bGluZSBvbjpjbGljaz17Y2xlYXJ9PiIsCiAgICAJCWN0eAogICAgCX0pOwoKICAgIAlyZXR1cm4gYmxvY2s7CiAgICB9CgogICAgLy8gKDY4OjE2KSA8QnV0dG9uR3JvdXA+CiAgICBmdW5jdGlvbiBjcmVhdGVfZGVmYXVsdF9zbG90XzYoY3R4KSB7CiAgICAJbGV0IGJ1dHRvbjA7CiAgICAJbGV0IHQwOwogICAgCWxldCBidXR0b24xOwogICAgCWxldCB0MTsKICAgIAlsZXQgYnV0dG9uMjsKICAgIAlsZXQgY3VycmVudDsKCiAgICAJYnV0dG9uMCA9IG5ldyBCdXR0b24oewogICAgCQkJcHJvcHM6IHsKICAgIAkJCQlvdXRsaW5lOiB0cnVlLAogICAgCQkJCXByaW1hcnk6IHRydWUsCiAgICAJCQkJJCRzbG90czogeyBkZWZhdWx0OiBbY3JlYXRlX2RlZmF1bHRfc2xvdF85XSB9LAogICAgCQkJCSQkc2NvcGU6IHsgY3R4IH0KICAgIAkJCX0sCiAgICAJCQkkJGlubGluZTogdHJ1ZQogICAgCQl9KTsKCiAgICAJYnV0dG9uMC4kb24oImNsaWNrIiwgLypzY2FuKi8gY3R4WzddKTsKCiAgICAJYnV0dG9uMSA9IG5ldyBCdXR0b24oewogICAgCQkJcHJvcHM6IHsKICAgIAkJCQlvdXRsaW5lOiB0cnVlLAogICAgCQkJCXN1Y2Nlc3M6IHRydWUsCiAgICAJCQkJZGlzYWJsZWQ6ICEvKmltYWdlU2hvd24qLyBjdHhbMF0sCiAgICAJCQkJJCRzbG90czogeyBkZWZhdWx0OiBbY3JlYXRlX2RlZmF1bHRfc2xvdF84XSB9LAogICAgCQkJCSQkc2NvcGU6IHsgY3R4IH0KICAgIAkJCX0sCiAgICAJCQkkJGlubGluZTogdHJ1ZQogICAgCQl9KTsKCiAgICAJYnV0dG9uMS4kb24oImNsaWNrIiwgLypkb3dubG9hZCovIGN0eFs4XSk7CgogICAgCWJ1dHRvbjIgPSBuZXcgQnV0dG9uKHsKICAgIAkJCXByb3BzOiB7CiAgICAJCQkJb3V0bGluZTogdHJ1ZSwKICAgIAkJCQkkJHNsb3RzOiB7IGRlZmF1bHQ6IFtjcmVhdGVfZGVmYXVsdF9zbG90XzddIH0sCiAgICAJCQkJJCRzY29wZTogeyBjdHggfQogICAgCQkJfSwKICAgIAkJCSQkaW5saW5lOiB0cnVlCiAgICAJCX0pOwoKICAgIAlidXR0b24yLiRvbigiY2xpY2siLCAvKmNsZWFyKi8gY3R4WzZdKTsKCiAgICAJY29uc3QgYmxvY2sgPSB7CiAgICAJCWM6IGZ1bmN0aW9uIGNyZWF0ZSgpIHsKICAgIAkJCWNyZWF0ZV9jb21wb25lbnQoYnV0dG9uMC4kJC5mcmFnbWVudCk7CiAgICAJCQl0MCA9IHNwYWNlKCk7CiAgICAJCQljcmVhdGVfY29tcG9uZW50KGJ1dHRvbjEuJCQuZnJhZ21lbnQpOwogICAgCQkJdDEgPSBzcGFjZSgpOwogICAgCQkJY3JlYXRlX2NvbXBvbmVudChidXR0b24yLiQkLmZyYWdtZW50KTsKICAgIAkJfSwKICAgIAkJbTogZnVuY3Rpb24gbW91bnQodGFyZ2V0LCBhbmNob3IpIHsKICAgIAkJCW1vdW50X2NvbXBvbmVudChidXR0b24wLCB0YXJnZXQsIGFuY2hvcik7CiAgICAJCQlpbnNlcnRfZGV2KHRhcmdldCwgdDAsIGFuY2hvcik7CiAgICAJCQltb3VudF9jb21wb25lbnQoYnV0dG9uMSwgdGFyZ2V0LCBhbmNob3IpOwogICAgCQkJaW5zZXJ0X2Rldih0YXJnZXQsIHQxLCBhbmNob3IpOwogICAgCQkJbW91bnRfY29tcG9uZW50KGJ1dHRvbjIsIHRhcmdldCwgYW5jaG9yKTsKICAgIAkJCWN1cnJlbnQgPSB0cnVlOwogICAgCQl9LAogICAgCQlwOiBmdW5jdGlvbiB1cGRhdGUoY3R4LCBkaXJ0eSkgewogICAgCQkJY29uc3QgYnV0dG9uMF9jaGFuZ2VzID0ge307CgogICAgCQkJaWYgKGRpcnR5ICYgLyokJHNjb3BlKi8gODE5MikgewogICAgCQkJCWJ1dHRvbjBfY2hhbmdlcy4kJHNjb3BlID0geyBkaXJ0eSwgY3R4IH07CiAgICAJCQl9CgogICAgCQkJYnV0dG9uMC4kc2V0KGJ1dHRvbjBfY2hhbmdlcyk7CiAgICAJCQljb25zdCBidXR0b24xX2NoYW5nZXMgPSB7fTsKICAgIAkJCWlmIChkaXJ0eSAmIC8qaW1hZ2VTaG93biovIDEpIGJ1dHRvbjFfY2hhbmdlcy5kaXNhYmxlZCA9ICEvKmltYWdlU2hvd24qLyBjdHhbMF07CgogICAgCQkJaWYgKGRpcnR5ICYgLyokJHNjb3BlKi8gODE5MikgewogICAgCQkJCWJ1dHRvbjFfY2hhbmdlcy4kJHNjb3BlID0geyBkaXJ0eSwgY3R4IH07CiAgICAJCQl9CgogICAgCQkJYnV0dG9uMS4kc2V0KGJ1dHRvbjFfY2hhbmdlcyk7CiAgICAJCQljb25zdCBidXR0b24yX2NoYW5nZXMgPSB7fTsKCiAgICAJCQlpZiAoZGlydHkgJiAvKiQkc2NvcGUqLyA4MTkyKSB7CiAgICAJCQkJYnV0dG9uMl9jaGFuZ2VzLiQkc2NvcGUgPSB7IGRpcnR5LCBjdHggfTsKICAgIAkJCX0KCiAgICAJCQlidXR0b24yLiRzZXQoYnV0dG9uMl9jaGFuZ2VzKTsKICAgIAkJfSwKICAgIAkJaTogZnVuY3Rpb24gaW50cm8obG9jYWwpIHsKICAgIAkJCWlmIChjdXJyZW50KSByZXR1cm47CiAgICAJCQl0cmFuc2l0aW9uX2luKGJ1dHRvbjAuJCQuZnJhZ21lbnQsIGxvY2FsKTsKICAgIAkJCXRyYW5zaXRpb25faW4oYnV0dG9uMS4kJC5mcmFnbWVudCwgbG9jYWwpOwogICAgCQkJdHJhbnNpdGlvbl9pbihidXR0b24yLiQkLmZyYWdtZW50LCBsb2NhbCk7CiAgICAJCQljdXJyZW50ID0gdHJ1ZTsKICAgIAkJfSwKICAgIAkJbzogZnVuY3Rpb24gb3V0cm8obG9jYWwpIHsKICAgIAkJCXRyYW5zaXRpb25fb3V0KGJ1dHRvbjAuJCQuZnJhZ21lbnQsIGxvY2FsKTsKICAgIAkJCXRyYW5zaXRpb25fb3V0KGJ1dHRvbjEuJCQuZnJhZ21lbnQsIGxvY2FsKTsKICAgIAkJCXRyYW5zaXRpb25fb3V0KGJ1dHRvbjIuJCQuZnJhZ21lbnQsIGxvY2FsKTsKICAgIAkJCWN1cnJlbnQgPSBmYWxzZTsKICAgIAkJfSwKICAgIAkJZDogZnVuY3Rpb24gZGVzdHJveShkZXRhY2hpbmcpIHsKICAgIAkJCWRlc3Ryb3lfY29tcG9uZW50KGJ1dHRvbjAsIGRldGFjaGluZyk7CiAgICAJCQlpZiAoZGV0YWNoaW5nKSBkZXRhY2hfZGV2KHQwKTsKICAgIAkJCWRlc3Ryb3lfY29tcG9uZW50KGJ1dHRvbjEsIGRldGFjaGluZyk7CiAgICAJCQlpZiAoZGV0YWNoaW5nKSBkZXRhY2hfZGV2KHQxKTsKICAgIAkJCWRlc3Ryb3lfY29tcG9uZW50KGJ1dHRvbjIsIGRldGFjaGluZyk7CiAgICAJCX0KICAgIAl9OwoKICAgIAlkaXNwYXRjaF9kZXYoIlN2ZWx0ZVJlZ2lzdGVyQmxvY2siLCB7CiAgICAJCWJsb2NrLAogICAgCQlpZDogY3JlYXRlX2RlZmF1bHRfc2xvdF82Lm5hbWUsCiAgICAJCXR5cGU6ICJzbG90IiwKICAgIAkJc291cmNlOiAiKDY4OjE2KSA8QnV0dG9uR3JvdXA+IiwKICAgIAkJY3R4CiAgICAJfSk7CgogICAgCXJldHVybiBibG9jazsKICAgIH0KCiAgICAvLyAoNjc6MTIpIDxDb2w+CiAgICBmdW5jdGlvbiBjcmVhdGVfZGVmYXVsdF9zbG90XzUoY3R4KSB7CiAgICAJbGV0IGJ1dHRvbmdyb3VwOwogICAgCWxldCBjdXJyZW50OwoKICAgIAlidXR0b25ncm91cCA9IG5ldyBCdXR0b25Hcm91cCh7CiAgICAJCQlwcm9wczogewogICAgCQkJCSQkc2xvdHM6IHsgZGVmYXVsdDogW2NyZWF0ZV9kZWZhdWx0X3Nsb3RfNl0gfSwKICAgIAkJCQkkJHNjb3BlOiB7IGN0eCB9CiAgICAJCQl9LAogICAgCQkJJCRpbmxpbmU6IHRydWUKICAgIAkJfSk7CgogICAgCWNvbnN0IGJsb2NrID0gewogICAgCQljOiBmdW5jdGlvbiBjcmVhdGUoKSB7CiAgICAJCQljcmVhdGVfY29tcG9uZW50KGJ1dHRvbmdyb3VwLiQkLmZyYWdtZW50KTsKICAgIAkJfSwKICAgIAkJbTogZnVuY3Rpb24gbW91bnQodGFyZ2V0LCBhbmNob3IpIHsKICAgIAkJCW1vdW50X2NvbXBvbmVudChidXR0b25ncm91cCwgdGFyZ2V0LCBhbmNob3IpOwogICAgCQkJY3VycmVudCA9IHRydWU7CiAgICAJCX0sCiAgICAJCXA6IGZ1bmN0aW9uIHVwZGF0ZShjdHgsIGRpcnR5KSB7CiAgICAJCQljb25zdCBidXR0b25ncm91cF9jaGFuZ2VzID0ge307CgogICAgCQkJaWYgKGRpcnR5ICYgLyokJHNjb3BlLCBpbWFnZVNob3duKi8gODE5MykgewogICAgCQkJCWJ1dHRvbmdyb3VwX2NoYW5nZXMuJCRzY29wZSA9IHsgZGlydHksIGN0eCB9OwogICAgCQkJfQoKICAgIAkJCWJ1dHRvbmdyb3VwLiRzZXQoYnV0dG9uZ3JvdXBfY2hhbmdlcyk7CiAgICAJCX0sCiAgICAJCWk6IGZ1bmN0aW9uIGludHJvKGxvY2FsKSB7CiAgICAJCQlpZiAoY3VycmVudCkgcmV0dXJuOwogICAgCQkJdHJhbnNpdGlvbl9pbihidXR0b25ncm91cC4kJC5mcmFnbWVudCwgbG9jYWwpOwogICAgCQkJY3VycmVudCA9IHRydWU7CiAgICAJCX0sCiAgICAJCW86IGZ1bmN0aW9uIG91dHJvKGxvY2FsKSB7CiAgICAJCQl0cmFuc2l0aW9uX291dChidXR0b25ncm91cC4kJC5mcmFnbWVudCwgbG9jYWwpOwogICAgCQkJY3VycmVudCA9IGZhbHNlOwogICAgCQl9LAogICAgCQlkOiBmdW5jdGlvbiBkZXN0cm95KGRldGFjaGluZykgewogICAgCQkJZGVzdHJveV9jb21wb25lbnQoYnV0dG9uZ3JvdXAsIGRldGFjaGluZyk7CiAgICAJCX0KICAgIAl9OwoKICAgIAlkaXNwYXRjaF9kZXYoIlN2ZWx0ZVJlZ2lzdGVyQmxvY2siLCB7CiAgICAJCWJsb2NrLAogICAgCQlpZDogY3JlYXRlX2RlZmF1bHRfc2xvdF81Lm5hbWUsCiAgICAJCXR5cGU6ICJzbG90IiwKICAgIAkJc291cmNlOiAiKDY3OjEyKSA8Q29sPiIsCiAgICAJCWN0eAogICAgCX0pOwoKICAgIAlyZXR1cm4gYmxvY2s7CiAgICB9CgogICAgLy8gKDY2OjgpIDxSb3c+CiAgICBmdW5jdGlvbiBjcmVhdGVfZGVmYXVsdF9zbG90XzQoY3R4KSB7CiAgICAJbGV0IGNvbDsKICAgIAlsZXQgY3VycmVudDsKCiAgICAJY29sID0gbmV3IENvbCh7CiAgICAJCQlwcm9wczogewogICAgCQkJCSQkc2xvdHM6IHsgZGVmYXVsdDogW2NyZWF0ZV9kZWZhdWx0X3Nsb3RfNV0gfSwKICAgIAkJCQkkJHNjb3BlOiB7IGN0eCB9CiAgICAJCQl9LAogICAgCQkJJCRpbmxpbmU6IHRydWUKICAgIAkJfSk7CgogICAgCWNvbnN0IGJsb2NrID0gewogICAgCQljOiBmdW5jdGlvbiBjcmVhdGUoKSB7CiAgICAJCQljcmVhdGVfY29tcG9uZW50KGNvbC4kJC5mcmFnbWVudCk7CiAgICAJCX0sCiAgICAJCW06IGZ1bmN0aW9uIG1vdW50KHRhcmdldCwgYW5jaG9yKSB7CiAgICAJCQltb3VudF9jb21wb25lbnQoY29sLCB0YXJnZXQsIGFuY2hvcik7CiAgICAJCQljdXJyZW50ID0gdHJ1ZTsKICAgIAkJfSwKICAgIAkJcDogZnVuY3Rpb24gdXBkYXRlKGN0eCwgZGlydHkpIHsKICAgIAkJCWNvbnN0IGNvbF9jaGFuZ2VzID0ge307CgogICAgCQkJaWYgKGRpcnR5ICYgLyokJHNjb3BlLCBpbWFnZVNob3duKi8gODE5MykgewogICAgCQkJCWNvbF9jaGFuZ2VzLiQkc2NvcGUgPSB7IGRpcnR5LCBjdHggfTsKICAgIAkJCX0KCiAgICAJCQljb2wuJHNldChjb2xfY2hhbmdlcyk7CiAgICAJCX0sCiAgICAJCWk6IGZ1bmN0aW9uIGludHJvKGxvY2FsKSB7CiAgICAJCQlpZiAoY3VycmVudCkgcmV0dXJuOwogICAgCQkJdHJhbnNpdGlvbl9pbihjb2wuJCQuZnJhZ21lbnQsIGxvY2FsKTsKICAgIAkJCWN1cnJlbnQgPSB0cnVlOwogICAgCQl9LAogICAgCQlvOiBmdW5jdGlvbiBvdXRybyhsb2NhbCkgewogICAgCQkJdHJhbnNpdGlvbl9vdXQoY29sLiQkLmZyYWdtZW50LCBsb2NhbCk7CiAgICAJCQljdXJyZW50ID0gZmFsc2U7CiAgICAJCX0sCiAgICAJCWQ6IGZ1bmN0aW9uIGRlc3Ryb3koZGV0YWNoaW5nKSB7CiAgICAJCQlkZXN0cm95X2NvbXBvbmVudChjb2wsIGRldGFjaGluZyk7CiAgICAJCX0KICAgIAl9OwoKICAgIAlkaXNwYXRjaF9kZXYoIlN2ZWx0ZVJlZ2lzdGVyQmxvY2siLCB7CiAgICAJCWJsb2NrLAogICAgCQlpZDogY3JlYXRlX2RlZmF1bHRfc2xvdF80Lm5hbWUsCiAgICAJCXR5cGU6ICJzbG90IiwKICAgIAkJc291cmNlOiAiKDY2OjgpIDxSb3c+IiwKICAgIAkJY3R4CiAgICAJfSk7CgogICAgCXJldHVybiBibG9jazsKICAgIH0KCiAgICAvLyAoNzY6MTIpIDxDb2w+CiAgICBmdW5jdGlvbiBjcmVhdGVfZGVmYXVsdF9zbG90XzMoY3R4KSB7CiAgICAJbGV0IGg1OwogICAgCWxldCB0MDsKICAgIAlsZXQgdDE7CiAgICAJbGV0IHQyOwogICAgCWxldCBpbWc7CiAgICAJbGV0IGltZ19jbGFzc192YWx1ZTsKICAgIAlsZXQgaW1nX3NyY192YWx1ZTsKICAgIAlsZXQgdDM7CiAgICAJbGV0IHNwaW5uZXI7CiAgICAJbGV0IGN1cnJlbnQ7CgogICAgCXNwaW5uZXIgPSBuZXcgU3Bpbm5lcih7CiAgICAJCQlwcm9wczogeyBjbGFzczogLypzcGlubmVyQ2xhc3MqLyBjdHhbNV0gfSwKICAgIAkJCSQkaW5saW5lOiB0cnVlCiAgICAJCX0pOwoKICAgIAljb25zdCBibG9jayA9IHsKICAgIAkJYzogZnVuY3Rpb24gY3JlYXRlKCkgewogICAgCQkJaDUgPSBlbGVtZW50KCJoNSIpOwogICAgCQkJdDAgPSB0ZXh0KCJJbWFnZSBmcm9tICIpOwogICAgCQkJdDEgPSB0ZXh0KC8qc2Nhbm5lck5hbWUqLyBjdHhbMl0pOwogICAgCQkJdDIgPSBzcGFjZSgpOwogICAgCQkJaW1nID0gZWxlbWVudCgiaW1nIik7CiAgICAJCQl0MyA9IHNwYWNlKCk7CiAgICAJCQljcmVhdGVfY29tcG9uZW50KHNwaW5uZXIuJCQuZnJhZ21lbnQpOwogICAgCQkJYXR0cl9kZXYoaDUsICJvYmplY3QiLCAiIik7CiAgICAJCQlhdHRyX2RldihoNSwgImNsYXNzIiwgLyppbWFnZUNsYXNzKi8gY3R4WzRdKTsKICAgIAkJCWFkZF9sb2NhdGlvbihoNSwgZmlsZSRnLCA3NiwgMTYsIDIwMjIpOwogICAgCQkJYXR0cl9kZXYoaW1nLCAiY2xhc3MiLCBpbWdfY2xhc3NfdmFsdWUgPSAiaW1nLWZsdWlkICIgKyAvKmltYWdlQ2xhc3MqLyBjdHhbNF0pOwogICAgCQkJaWYgKGltZy5zcmMgIT09IChpbWdfc3JjX3ZhbHVlID0gLyppbWFnZVNvdXJjZSovIGN0eFsxXSkpIGF0dHJfZGV2KGltZywgInNyYyIsIGltZ19zcmNfdmFsdWUpOwogICAgCQkJYWRkX2xvY2F0aW9uKGltZywgZmlsZSRnLCA3NywgMTYsIDIwOTgpOwogICAgCQl9LAogICAgCQltOiBmdW5jdGlvbiBtb3VudCh0YXJnZXQsIGFuY2hvcikgewogICAgCQkJaW5zZXJ0X2Rldih0YXJnZXQsIGg1LCBhbmNob3IpOwogICAgCQkJYXBwZW5kX2RldihoNSwgdDApOwogICAgCQkJYXBwZW5kX2RldihoNSwgdDEpOwogICAgCQkJaW5zZXJ0X2Rldih0YXJnZXQsIHQyLCBhbmNob3IpOwogICAgCQkJaW5zZXJ0X2Rldih0YXJnZXQsIGltZywgYW5jaG9yKTsKICAgIAkJCWluc2VydF9kZXYodGFyZ2V0LCB0MywgYW5jaG9yKTsKICAgIAkJCW1vdW50X2NvbXBvbmVudChzcGlubmVyLCB0YXJnZXQsIGFuY2hvcik7CiAgICAJCQljdXJyZW50ID0gdHJ1ZTsKICAgIAkJfSwKICAgIAkJcDogZnVuY3Rpb24gdXBkYXRlKGN0eCwgZGlydHkpIHsKICAgIAkJCWlmICghY3VycmVudCB8fCBkaXJ0eSAmIC8qc2Nhbm5lck5hbWUqLyA0KSBzZXRfZGF0YV9kZXYodDEsIC8qc2Nhbm5lck5hbWUqLyBjdHhbMl0pOwoKICAgIAkJCWlmICghY3VycmVudCB8fCBkaXJ0eSAmIC8qaW1hZ2VDbGFzcyovIDE2KSB7CiAgICAJCQkJYXR0cl9kZXYoaDUsICJjbGFzcyIsIC8qaW1hZ2VDbGFzcyovIGN0eFs0XSk7CiAgICAJCQl9CgogICAgCQkJaWYgKCFjdXJyZW50IHx8IGRpcnR5ICYgLyppbWFnZUNsYXNzKi8gMTYgJiYgaW1nX2NsYXNzX3ZhbHVlICE9PSAoaW1nX2NsYXNzX3ZhbHVlID0gImltZy1mbHVpZCAiICsgLyppbWFnZUNsYXNzKi8gY3R4WzRdKSkgewogICAgCQkJCWF0dHJfZGV2KGltZywgImNsYXNzIiwgaW1nX2NsYXNzX3ZhbHVlKTsKICAgIAkJCX0KCiAgICAJCQlpZiAoIWN1cnJlbnQgfHwgZGlydHkgJiAvKmltYWdlU291cmNlKi8gMiAmJiBpbWcuc3JjICE9PSAoaW1nX3NyY192YWx1ZSA9IC8qaW1hZ2VTb3VyY2UqLyBjdHhbMV0pKSB7CiAgICAJCQkJYXR0cl9kZXYoaW1nLCAic3JjIiwgaW1nX3NyY192YWx1ZSk7CiAgICAJCQl9CgogICAgCQkJY29uc3Qgc3Bpbm5lcl9jaGFuZ2VzID0ge307CiAgICAJCQlpZiAoZGlydHkgJiAvKnNwaW5uZXJDbGFzcyovIDMyKSBzcGlubmVyX2NoYW5nZXMuY2xhc3MgPSAvKnNwaW5uZXJDbGFzcyovIGN0eFs1XTsKICAgIAkJCXNwaW5uZXIuJHNldChzcGlubmVyX2NoYW5nZXMpOwogICAgCQl9LAogICAgCQlpOiBmdW5jdGlvbiBpbnRybyhsb2NhbCkgewogICAgCQkJaWYgKGN1cnJlbnQpIHJldHVybjsKICAgIAkJCXRyYW5zaXRpb25faW4oc3Bpbm5lci4kJC5mcmFnbWVudCwgbG9jYWwpOwogICAgCQkJY3VycmVudCA9IHRydWU7CiAgICAJCX0sCiAgICAJCW86IGZ1bmN0aW9uIG91dHJvKGxvY2FsKSB7CiAgICAJCQl0cmFuc2l0aW9uX291dChzcGlubmVyLiQkLmZyYWdtZW50LCBsb2NhbCk7CiAgICAJCQljdXJyZW50ID0gZmFsc2U7CiAgICAJCX0sCiAgICAJCWQ6IGZ1bmN0aW9uIGRlc3Ryb3koZGV0YWNoaW5nKSB7CiAgICAJCQlpZiAoZGV0YWNoaW5nKSBkZXRhY2hfZGV2KGg1KTsKICAgIAkJCWlmIChkZXRhY2hpbmcpIGRldGFjaF9kZXYodDIpOwogICAgCQkJaWYgKGRldGFjaGluZykgZGV0YWNoX2RldihpbWcpOwogICAgCQkJaWYgKGRldGFjaGluZykgZGV0YWNoX2Rldih0Myk7CiAgICAJCQlkZXN0cm95X2NvbXBvbmVudChzcGlubmVyLCBkZXRhY2hpbmcpOwogICAgCQl9CiAgICAJfTsKCiAgICAJZGlzcGF0Y2hfZGV2KCJTdmVsdGVSZWdpc3RlckJsb2NrIiwgewogICAgCQlibG9jaywKICAgIAkJaWQ6IGNyZWF0ZV9kZWZhdWx0X3Nsb3RfMy5uYW1lLAogICAgCQl0eXBlOiAic2xvdCIsCiAgICAJCXNvdXJjZTogIig3NjoxMikgPENvbD4iLAogICAgCQljdHgKICAgIAl9KTsKCiAgICAJcmV0dXJuIGJsb2NrOwogICAgfQoKICAgIC8vICg3NTo4KSA8Um93PgogICAgZnVuY3Rpb24gY3JlYXRlX2RlZmF1bHRfc2xvdF8yKGN0eCkgewogICAgCWxldCBjb2w7CiAgICAJbGV0IGN1cnJlbnQ7CgogICAgCWNvbCA9IG5ldyBDb2woewogICAgCQkJcHJvcHM6IHsKICAgIAkJCQkkJHNsb3RzOiB7IGRlZmF1bHQ6IFtjcmVhdGVfZGVmYXVsdF9zbG90XzNdIH0sCiAgICAJCQkJJCRzY29wZTogeyBjdHggfQogICAgCQkJfSwKICAgIAkJCSQkaW5saW5lOiB0cnVlCiAgICAJCX0pOwoKICAgIAljb25zdCBibG9jayA9IHsKICAgIAkJYzogZnVuY3Rpb24gY3JlYXRlKCkgewogICAgCQkJY3JlYXRlX2NvbXBvbmVudChjb2wuJCQuZnJhZ21lbnQpOwogICAgCQl9LAogICAgCQltOiBmdW5jdGlvbiBtb3VudCh0YXJnZXQsIGFuY2hvcikgewogICAgCQkJbW91bnRfY29tcG9uZW50KGNvbCwgdGFyZ2V0LCBhbmNob3IpOwogICAgCQkJY3VycmVudCA9IHRydWU7CiAgICAJCX0sCiAgICAJCXA6IGZ1bmN0aW9uIHVwZGF0ZShjdHgsIGRpcnR5KSB7CiAgICAJCQljb25zdCBjb2xfY2hhbmdlcyA9IHt9OwoKICAgIAkJCWlmIChkaXJ0eSAmIC8qJCRzY29wZSwgc3Bpbm5lckNsYXNzLCBpbWFnZUNsYXNzLCBpbWFnZVNvdXJjZSwgc2Nhbm5lck5hbWUqLyA4MjQ2KSB7CiAgICAJCQkJY29sX2NoYW5nZXMuJCRzY29wZSA9IHsgZGlydHksIGN0eCB9OwogICAgCQkJfQoKICAgIAkJCWNvbC4kc2V0KGNvbF9jaGFuZ2VzKTsKICAgIAkJfSwKICAgIAkJaTogZnVuY3Rpb24gaW50cm8obG9jYWwpIHsKICAgIAkJCWlmIChjdXJyZW50KSByZXR1cm47CiAgICAJCQl0cmFuc2l0aW9uX2luKGNvbC4kJC5mcmFnbWVudCwgbG9jYWwpOwogICAgCQkJY3VycmVudCA9IHRydWU7CiAgICAJCX0sCiAgICAJCW86IGZ1bmN0aW9uIG91dHJvKGxvY2FsKSB7CiAgICAJCQl0cmFuc2l0aW9uX291dChjb2wuJCQuZnJhZ21lbnQsIGxvY2FsKTsKICAgIAkJCWN1cnJlbnQgPSBmYWxzZTsKICAgIAkJfSwKICAgIAkJZDogZnVuY3Rpb24gZGVzdHJveShkZXRhY2hpbmcpIHsKICAgIAkJCWRlc3Ryb3lfY29tcG9uZW50KGNvbCwgZGV0YWNoaW5nKTsKICAgIAkJfQogICAgCX07CgogICAgCWRpc3BhdGNoX2RldigiU3ZlbHRlUmVnaXN0ZXJCbG9jayIsIHsKICAgIAkJYmxvY2ssCiAgICAJCWlkOiBjcmVhdGVfZGVmYXVsdF9zbG90XzIubmFtZSwKICAgIAkJdHlwZTogInNsb3QiLAogICAgCQlzb3VyY2U6ICIoNzU6OCkgPFJvdz4iLAogICAgCQljdHgKICAgIAl9KTsKCiAgICAJcmV0dXJuIGJsb2NrOwogICAgfQoKICAgIC8vICg2NTo0KSA8Q29sPgogICAgZnVuY3Rpb24gY3JlYXRlX2RlZmF1bHRfc2xvdF8xJDEoY3R4KSB7CiAgICAJbGV0IHJvdzA7CiAgICAJbGV0IHQ7CiAgICAJbGV0IHJvdzE7CiAgICAJbGV0IGN1cnJlbnQ7CgogICAgCXJvdzAgPSBuZXcgUm93KHsKICAgIAkJCXByb3BzOiB7CiAgICAJCQkJJCRzbG90czogeyBkZWZhdWx0OiBbY3JlYXRlX2RlZmF1bHRfc2xvdF80XSB9LAogICAgCQkJCSQkc2NvcGU6IHsgY3R4IH0KICAgIAkJCX0sCiAgICAJCQkkJGlubGluZTogdHJ1ZQogICAgCQl9KTsKCiAgICAJcm93MSA9IG5ldyBSb3coewogICAgCQkJcHJvcHM6IHsKICAgIAkJCQkkJHNsb3RzOiB7IGRlZmF1bHQ6IFtjcmVhdGVfZGVmYXVsdF9zbG90XzJdIH0sCiAgICAJCQkJJCRzY29wZTogeyBjdHggfQogICAgCQkJfSwKICAgIAkJCSQkaW5saW5lOiB0cnVlCiAgICAJCX0pOwoKICAgIAljb25zdCBibG9jayA9IHsKICAgIAkJYzogZnVuY3Rpb24gY3JlYXRlKCkgewogICAgCQkJY3JlYXRlX2NvbXBvbmVudChyb3cwLiQkLmZyYWdtZW50KTsKICAgIAkJCXQgPSBzcGFjZSgpOwogICAgCQkJY3JlYXRlX2NvbXBvbmVudChyb3cxLiQkLmZyYWdtZW50KTsKICAgIAkJfSwKICAgIAkJbTogZnVuY3Rpb24gbW91bnQodGFyZ2V0LCBhbmNob3IpIHsKICAgIAkJCW1vdW50X2NvbXBvbmVudChyb3cwLCB0YXJnZXQsIGFuY2hvcik7CiAgICAJCQlpbnNlcnRfZGV2KHRhcmdldCwgdCwgYW5jaG9yKTsKICAgIAkJCW1vdW50X2NvbXBvbmVudChyb3cxLCB0YXJnZXQsIGFuY2hvcik7CiAgICAJCQljdXJyZW50ID0gdHJ1ZTsKICAgIAkJfSwKICAgIAkJcDogZnVuY3Rpb24gdXBkYXRlKGN0eCwgZGlydHkpIHsKICAgIAkJCWNvbnN0IHJvdzBfY2hhbmdlcyA9IHt9OwoKICAgIAkJCWlmIChkaXJ0eSAmIC8qJCRzY29wZSwgaW1hZ2VTaG93biovIDgxOTMpIHsKICAgIAkJCQlyb3cwX2NoYW5nZXMuJCRzY29wZSA9IHsgZGlydHksIGN0eCB9OwogICAgCQkJfQoKICAgIAkJCXJvdzAuJHNldChyb3cwX2NoYW5nZXMpOwogICAgCQkJY29uc3Qgcm93MV9jaGFuZ2VzID0ge307CgogICAgCQkJaWYgKGRpcnR5ICYgLyokJHNjb3BlLCBzcGlubmVyQ2xhc3MsIGltYWdlQ2xhc3MsIGltYWdlU291cmNlLCBzY2FubmVyTmFtZSovIDgyNDYpIHsKICAgIAkJCQlyb3cxX2NoYW5nZXMuJCRzY29wZSA9IHsgZGlydHksIGN0eCB9OwogICAgCQkJfQoKICAgIAkJCXJvdzEuJHNldChyb3cxX2NoYW5nZXMpOwogICAgCQl9LAogICAgCQlpOiBmdW5jdGlvbiBpbnRybyhsb2NhbCkgewogICAgCQkJaWYgKGN1cnJlbnQpIHJldHVybjsKICAgIAkJCXRyYW5zaXRpb25faW4ocm93MC4kJC5mcmFnbWVudCwgbG9jYWwpOwogICAgCQkJdHJhbnNpdGlvbl9pbihyb3cxLiQkLmZyYWdtZW50LCBsb2NhbCk7CiAgICAJCQljdXJyZW50ID0gdHJ1ZTsKICAgIAkJfSwKICAgIAkJbzogZnVuY3Rpb24gb3V0cm8obG9jYWwpIHsKICAgIAkJCXRyYW5zaXRpb25fb3V0KHJvdzAuJCQuZnJhZ21lbnQsIGxvY2FsKTsKICAgIAkJCXRyYW5zaXRpb25fb3V0KHJvdzEuJCQuZnJhZ21lbnQsIGxvY2FsKTsKICAgIAkJCWN1cnJlbnQgPSBmYWxzZTsKICAgIAkJfSwKICAgIAkJZDogZnVuY3Rpb24gZGVzdHJveShkZXRhY2hpbmcpIHsKICAgIAkJCWRlc3Ryb3lfY29tcG9uZW50KHJvdzAsIGRldGFjaGluZyk7CiAgICAJCQlpZiAoZGV0YWNoaW5nKSBkZXRhY2hfZGV2KHQpOwogICAgCQkJZGVzdHJveV9jb21wb25lbnQocm93MSwgZGV0YWNoaW5nKTsKICAgIAkJfQogICAgCX07CgogICAgCWRpc3BhdGNoX2RldigiU3ZlbHRlUmVnaXN0ZXJCbG9jayIsIHsKICAgIAkJYmxvY2ssCiAgICAJCWlkOiBjcmVhdGVfZGVmYXVsdF9zbG90XzEkMS5uYW1lLAogICAgCQl0eXBlOiAic2xvdCIsCiAgICAJCXNvdXJjZTogIig2NTo0KSA8Q29sPiIsCiAgICAJCWN0eAogICAgCX0pOwoKICAgIAlyZXR1cm4gYmxvY2s7CiAgICB9CgogICAgLy8gKDY0OjApIDxSb3cgY2xhc3M9e21haW5Sb3dDbGFzc30+CiAgICBmdW5jdGlvbiBjcmVhdGVfZGVmYXVsdF9zbG90JDEoY3R4KSB7CiAgICAJbGV0IGNvbDsKICAgIAlsZXQgY3VycmVudDsKCiAgICAJY29sID0gbmV3IENvbCh7CiAgICAJCQlwcm9wczogewogICAgCQkJCSQkc2xvdHM6IHsgZGVmYXVsdDogW2NyZWF0ZV9kZWZhdWx0X3Nsb3RfMSQxXSB9LAogICAgCQkJCSQkc2NvcGU6IHsgY3R4IH0KICAgIAkJCX0sCiAgICAJCQkkJGlubGluZTogdHJ1ZQogICAgCQl9KTsKCiAgICAJY29uc3QgYmxvY2sgPSB7CiAgICAJCWM6IGZ1bmN0aW9uIGNyZWF0ZSgpIHsKICAgIAkJCWNyZWF0ZV9jb21wb25lbnQoY29sLiQkLmZyYWdtZW50KTsKICAgIAkJfSwKICAgIAkJbTogZnVuY3Rpb24gbW91bnQodGFyZ2V0LCBhbmNob3IpIHsKICAgIAkJCW1vdW50X2NvbXBvbmVudChjb2wsIHRhcmdldCwgYW5jaG9yKTsKICAgIAkJCWN1cnJlbnQgPSB0cnVlOwogICAgCQl9LAogICAgCQlwOiBmdW5jdGlvbiB1cGRhdGUoY3R4LCBkaXJ0eSkgewogICAgCQkJY29uc3QgY29sX2NoYW5nZXMgPSB7fTsKCiAgICAJCQlpZiAoZGlydHkgJiAvKiQkc2NvcGUsIHNwaW5uZXJDbGFzcywgaW1hZ2VDbGFzcywgaW1hZ2VTb3VyY2UsIHNjYW5uZXJOYW1lLCBpbWFnZVNob3duKi8gODI0NykgewogICAgCQkJCWNvbF9jaGFuZ2VzLiQkc2NvcGUgPSB7IGRpcnR5LCBjdHggfTsKICAgIAkJCX0KCiAgICAJCQljb2wuJHNldChjb2xfY2hhbmdlcyk7CiAgICAJCX0sCiAgICAJCWk6IGZ1bmN0aW9uIGludHJvKGxvY2FsKSB7CiAgICAJCQlpZiAoY3VycmVudCkgcmV0dXJuOwogICAgCQkJdHJhbnNpdGlvbl9pbihjb2wuJCQuZnJhZ21lbnQsIGxvY2FsKTsKICAgIAkJCWN1cnJlbnQgPSB0cnVlOwogICAgCQl9LAogICAgCQlvOiBmdW5jdGlvbiBvdXRybyhsb2NhbCkgewogICAgCQkJdHJhbnNpdGlvbl9vdXQoY29sLiQkLmZyYWdtZW50LCBsb2NhbCk7CiAgICAJCQljdXJyZW50ID0gZmFsc2U7CiAgICAJCX0sCiAgICAJCWQ6IGZ1bmN0aW9uIGRlc3Ryb3koZGV0YWNoaW5nKSB7CiAgICAJCQlkZXN0cm95X2NvbXBvbmVudChjb2wsIGRldGFjaGluZyk7CiAgICAJCX0KICAgIAl9OwoKICAgIAlkaXNwYXRjaF9kZXYoIlN2ZWx0ZVJlZ2lzdGVyQmxvY2siLCB7CiAgICAJCWJsb2NrLAogICAgCQlpZDogY3JlYXRlX2RlZmF1bHRfc2xvdCQxLm5hbWUsCiAgICAJCXR5cGU6ICJzbG90IiwKICAgIAkJc291cmNlOiAiKDY0OjApIDxSb3cgY2xhc3M9e21haW5Sb3dDbGFzc30+IiwKICAgIAkJY3R4CiAgICAJfSk7CgogICAgCXJldHVybiBibG9jazsKICAgIH0KCiAgICBmdW5jdGlvbiBjcmVhdGVfZnJhZ21lbnQkaChjdHgpIHsKICAgIAlsZXQgcm93OwogICAgCWxldCBjdXJyZW50OwoKICAgIAlyb3cgPSBuZXcgUm93KHsKICAgIAkJCXByb3BzOiB7CiAgICAJCQkJY2xhc3M6IC8qbWFpblJvd0NsYXNzKi8gY3R4WzNdLAogICAgCQkJCSQkc2xvdHM6IHsgZGVmYXVsdDogW2NyZWF0ZV9kZWZhdWx0X3Nsb3QkMV0gfSwKICAgIAkJCQkkJHNjb3BlOiB7IGN0eCB9CiAgICAJCQl9LAogICAgCQkJJCRpbmxpbmU6IHRydWUKICAgIAkJfSk7CgogICAgCWNvbnN0IGJsb2NrID0gewogICAgCQljOiBmdW5jdGlvbiBjcmVhdGUoKSB7CiAgICAJCQljcmVhdGVfY29tcG9uZW50KHJvdy4kJC5mcmFnbWVudCk7CiAgICAJCX0sCiAgICAJCWw6IGZ1bmN0aW9uIGNsYWltKG5vZGVzKSB7CiAgICAJCQl0aHJvdyBuZXcgRXJyb3IoIm9wdGlvbnMuaHlkcmF0ZSBvbmx5IHdvcmtzIGlmIHRoZSBjb21wb25lbnQgd2FzIGNvbXBpbGVkIHdpdGggdGhlIGBoeWRyYXRhYmxlOiB0cnVlYCBvcHRpb24iKTsKICAgIAkJfSwKICAgIAkJbTogZnVuY3Rpb24gbW91bnQodGFyZ2V0LCBhbmNob3IpIHsKICAgIAkJCW1vdW50X2NvbXBvbmVudChyb3csIHRhcmdldCwgYW5jaG9yKTsKICAgIAkJCWN1cnJlbnQgPSB0cnVlOwogICAgCQl9LAogICAgCQlwOiBmdW5jdGlvbiB1cGRhdGUoY3R4LCBbZGlydHldKSB7CiAgICAJCQljb25zdCByb3dfY2hhbmdlcyA9IHt9OwogICAgCQkJaWYgKGRpcnR5ICYgLyptYWluUm93Q2xhc3MqLyA4KSByb3dfY2hhbmdlcy5jbGFzcyA9IC8qbWFpblJvd0NsYXNzKi8gY3R4WzNdOwoKICAgIAkJCWlmIChkaXJ0eSAmIC8qJCRzY29wZSwgc3Bpbm5lckNsYXNzLCBpbWFnZUNsYXNzLCBpbWFnZVNvdXJjZSwgc2Nhbm5lck5hbWUsIGltYWdlU2hvd24qLyA4MjQ3KSB7CiAgICAJCQkJcm93X2NoYW5nZXMuJCRzY29wZSA9IHsgZGlydHksIGN0eCB9OwogICAgCQkJfQoKICAgIAkJCXJvdy4kc2V0KHJvd19jaGFuZ2VzKTsKICAgIAkJfSwKICAgIAkJaTogZnVuY3Rpb24gaW50cm8obG9jYWwpIHsKICAgIAkJCWlmIChjdXJyZW50KSByZXR1cm47CiAgICAJCQl0cmFuc2l0aW9uX2luKHJvdy4kJC5mcmFnbWVudCwgbG9jYWwpOwogICAgCQkJY3VycmVudCA9IHRydWU7CiAgICAJCX0sCiAgICAJCW86IGZ1bmN0aW9uIG91dHJvKGxvY2FsKSB7CiAgICAJCQl0cmFuc2l0aW9uX291dChyb3cuJCQuZnJhZ21lbnQsIGxvY2FsKTsKICAgIAkJCWN1cnJlbnQgPSBmYWxzZTsKICAgIAkJfSwKICAgIAkJZDogZnVuY3Rpb24gZGVzdHJveShkZXRhY2hpbmcpIHsKICAgIAkJCWRlc3Ryb3lfY29tcG9uZW50KHJvdywgZGV0YWNoaW5nKTsKICAgIAkJfQogICAgCX07CgogICAgCWRpc3BhdGNoX2RldigiU3ZlbHRlUmVnaXN0ZXJCbG9jayIsIHsKICAgIAkJYmxvY2ssCiAgICAJCWlkOiBjcmVhdGVfZnJhZ21lbnQkaC5uYW1lLAogICAgCQl0eXBlOiAiY29tcG9uZW50IiwKICAgIAkJc291cmNlOiAiIiwKICAgIAkJY3R4CiAgICAJfSk7CgogICAgCXJldHVybiBibG9jazsKICAgIH0KCiAgICBmdW5jdGlvbiBpbnN0YW5jZSRoKCQkc2VsZiwgJCRwcm9wcywgJCRpbnZhbGlkYXRlKSB7CiAgICAJbGV0IG1haW5Sb3dDbGFzczsKICAgIAlsZXQgaW1hZ2VDbGFzczsKICAgIAlsZXQgc3Bpbm5lckNsYXNzOwogICAgCWxldCB7ICQkc2xvdHM6IHNsb3RzID0ge30sICQkc2NvcGUgfSA9ICQkcHJvcHM7CiAgICAJdmFsaWRhdGVfc2xvdHMoIlNjYW5QYWdlIiwgc2xvdHMsIFtdKTsKICAgIAlsZXQgeyBzZXR0aW5ncyA9IHt9IH0gPSAkJHByb3BzOwogICAgCWxldCB7IGFjdGl2ZSB9ID0gJCRwcm9wczsKICAgIAlsZXQgaW1hZ2VTb3VyY2UgPSAiIjsKICAgIAlsZXQgaW1hZ2VTaG93biA9IGZhbHNlOwogICAgCWxldCBzcGlubmVyU2hvd24gPSBmYWxzZTsKCiAgICAJY29uc3QgY2xlYXIgPSAoKSA9PiB7CiAgICAJCSQkaW52YWxpZGF0ZSgxLCBpbWFnZVNvdXJjZSA9ICIiKTsKICAgIAkJJCRpbnZhbGlkYXRlKDAsIGltYWdlU2hvd24gPSBmYWxzZSk7CiAgICAJfTsKCiAgICAJbGV0IHNjYW5uZXJOYW1lOwoKICAgIAljb25zdCB1bnN1YnNjcmliZSA9IHNjYW5uZXIuc3Vic2NyaWJlKHZhbHVlID0+IHsKICAgIAkJJCRpbnZhbGlkYXRlKDIsIHNjYW5uZXJOYW1lID0gdmFsdWUpOwogICAgCQljbGVhcigpOwogICAgCX0pOwoKICAgIAljb25zdCBzY2FuID0gYXN5bmMgKCkgPT4gewogICAgCQkkJGludmFsaWRhdGUoMTEsIHNwaW5uZXJTaG93biA9IHRydWUpOwoKICAgIAkJYXdhaXQgZmV0Y2goYC9hcGkvZGV2aWNlcy9gICsgc2Nhbm5lck5hbWUgKyBgL3NjYW5gLCB7CiAgICAJCQltZXRob2Q6ICJQT1NUIiwKICAgIAkJCWhlYWRlcnM6IHsgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIiB9LAogICAgCQkJYm9keTogSlNPTi5zdHJpbmdpZnkoc2V0dGluZ3MpCiAgICAJCX0pLnRoZW4ociA9PiByLmJsb2IoKSkudGhlbihibG9iID0+IHsKICAgIAkJCSQkaW52YWxpZGF0ZSgxMSwgc3Bpbm5lclNob3duID0gZmFsc2UpOwogICAgCQkJJCRpbnZhbGlkYXRlKDEsIGltYWdlU291cmNlID0gKHdpbmRvdy5VUkwgfHwgd2luZG93LndlYmtpdFVSTCkuY3JlYXRlT2JqZWN0VVJMKGJsb2IpKTsKICAgIAkJCSQkaW52YWxpZGF0ZSgwLCBpbWFnZVNob3duID0gdHJ1ZSk7CiAgICAJCX0pOwogICAgCX07CgogICAgCWNvbnN0IGRvd25sb2FkID0gKCkgPT4gewogICAgCQl2YXIgYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImEiKTsKCiAgICAJCWlmICh3aW5kb3cuVVJMICYmIHdpbmRvdy5CbG9iICYmICJkb3dubG9hZCIgaW4gYSAmJiB3aW5kb3cuYXRvYikgewogICAgCQkJYS5ocmVmID0gaW1hZ2VTb3VyY2U7CiAgICAJCQlhLmRvd25sb2FkID0gInNjYW5uZWQucG5nIjsKICAgIAkJCWEuY2xpY2soKTsKICAgIAkJCXdpbmRvdy5VUkwucmV2b2tlT2JqZWN0VVJMKGltYWdlU291cmNlKTsKICAgIAkJfQogICAgCX07CgogICAgCWNvbnN0IHdyaXRhYmxlX3Byb3BzID0gWyJzZXR0aW5ncyIsICJhY3RpdmUiXTsKCiAgICAJT2JqZWN0LmtleXMoJCRwcm9wcykuZm9yRWFjaChrZXkgPT4gewogICAgCQlpZiAoIX53cml0YWJsZV9wcm9wcy5pbmRleE9mKGtleSkgJiYga2V5LnNsaWNlKDAsIDIpICE9PSAiJCQiKSBjb25zb2xlLndhcm4oYDxTY2FuUGFnZT4gd2FzIGNyZWF0ZWQgd2l0aCB1bmtub3duIHByb3AgJyR7a2V5fSdgKTsKICAgIAl9KTsKCiAgICAJJCRzZWxmLiQkc2V0ID0gJCRwcm9wcyA9PiB7CiAgICAJCWlmICgic2V0dGluZ3MiIGluICQkcHJvcHMpICQkaW52YWxpZGF0ZSg5LCBzZXR0aW5ncyA9ICQkcHJvcHMuc2V0dGluZ3MpOwogICAgCQlpZiAoImFjdGl2ZSIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDEwLCBhY3RpdmUgPSAkJHByb3BzLmFjdGl2ZSk7CiAgICAJfTsKCiAgICAJJCRzZWxmLiRjYXB0dXJlX3N0YXRlID0gKCkgPT4gKHsKICAgIAkJQ29sLAogICAgCQlSb3csCiAgICAJCUJ1dHRvbiwKICAgIAkJTWVkaWEsCiAgICAJCUJ1dHRvbkdyb3VwLAogICAgCQlTcGlubmVyLAogICAgCQlzZXR0aW5ncywKICAgIAkJYWN0aXZlLAogICAgCQlpbWFnZVNvdXJjZSwKICAgIAkJaW1hZ2VTaG93biwKICAgIAkJc3Bpbm5lclNob3duLAogICAgCQljbGVhciwKICAgIAkJc2Nhbm5lciwKICAgIAkJc2Nhbm5lck5hbWUsCiAgICAJCXVuc3Vic2NyaWJlLAogICAgCQlzY2FuLAogICAgCQlkb3dubG9hZCwKICAgIAkJbWFpblJvd0NsYXNzLAogICAgCQlpbWFnZUNsYXNzLAogICAgCQlzcGlubmVyQ2xhc3MKICAgIAl9KTsKCiAgICAJJCRzZWxmLiRpbmplY3Rfc3RhdGUgPSAkJHByb3BzID0+IHsKICAgIAkJaWYgKCJzZXR0aW5ncyIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDksIHNldHRpbmdzID0gJCRwcm9wcy5zZXR0aW5ncyk7CiAgICAJCWlmICgiYWN0aXZlIiBpbiAkJHByb3BzKSAkJGludmFsaWRhdGUoMTAsIGFjdGl2ZSA9ICQkcHJvcHMuYWN0aXZlKTsKICAgIAkJaWYgKCJpbWFnZVNvdXJjZSIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDEsIGltYWdlU291cmNlID0gJCRwcm9wcy5pbWFnZVNvdXJjZSk7CiAgICAJCWlmICgiaW1hZ2VTaG93biIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDAsIGltYWdlU2hvd24gPSAkJHByb3BzLmltYWdlU2hvd24pOwogICAgCQlpZiAoInNwaW5uZXJTaG93biIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDExLCBzcGlubmVyU2hvd24gPSAkJHByb3BzLnNwaW5uZXJTaG93bik7CiAgICAJCWlmICgic2Nhbm5lck5hbWUiIGluICQkcHJvcHMpICQkaW52YWxpZGF0ZSgyLCBzY2FubmVyTmFtZSA9ICQkcHJvcHMuc2Nhbm5lck5hbWUpOwogICAgCQlpZiAoIm1haW5Sb3dDbGFzcyIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDMsIG1haW5Sb3dDbGFzcyA9ICQkcHJvcHMubWFpblJvd0NsYXNzKTsKICAgIAkJaWYgKCJpbWFnZUNsYXNzIiBpbiAkJHByb3BzKSAkJGludmFsaWRhdGUoNCwgaW1hZ2VDbGFzcyA9ICQkcHJvcHMuaW1hZ2VDbGFzcyk7CiAgICAJCWlmICgic3Bpbm5lckNsYXNzIiBpbiAkJHByb3BzKSAkJGludmFsaWRhdGUoNSwgc3Bpbm5lckNsYXNzID0gJCRwcm9wcy5zcGlubmVyQ2xhc3MpOwogICAgCX07CgogICAgCWlmICgkJHByb3BzICYmICIkJGluamVjdCIgaW4gJCRwcm9wcykgewogICAgCQkkJHNlbGYuJGluamVjdF9zdGF0ZSgkJHByb3BzLiQkaW5qZWN0KTsKICAgIAl9CgogICAgCSQkc2VsZi4kJC51cGRhdGUgPSAoKSA9PiB7CiAgICAJCWlmICgkJHNlbGYuJCQuZGlydHkgJiAvKmFjdGl2ZSovIDEwMjQpIHsKICAgIAkJCSAkJGludmFsaWRhdGUoMywgbWFpblJvd0NsYXNzID0gYWN0aXZlID8gIiIgOiAiZC1ub25lIik7CiAgICAJCX0KCiAgICAJCWlmICgkJHNlbGYuJCQuZGlydHkgJiAvKmltYWdlU2hvd24qLyAxKSB7CiAgICAJCQkgJCRpbnZhbGlkYXRlKDQsIGltYWdlQ2xhc3MgPSBpbWFnZVNob3duID8gIiIgOiAiaW52aXNpYmxlIik7CiAgICAJCX0KCiAgICAJCWlmICgkJHNlbGYuJCQuZGlydHkgJiAvKnNwaW5uZXJTaG93biovIDIwNDgpIHsKICAgIAkJCSAkJGludmFsaWRhdGUoNSwgc3Bpbm5lckNsYXNzID0gc3Bpbm5lclNob3duID8gIiIgOiAiaW52aXNpYmxlIik7CiAgICAJCX0KICAgIAl9OwoKICAgIAlyZXR1cm4gWwogICAgCQlpbWFnZVNob3duLAogICAgCQlpbWFnZVNvdXJjZSwKICAgIAkJc2Nhbm5lck5hbWUsCiAgICAJCW1haW5Sb3dDbGFzcywKICAgIAkJaW1hZ2VDbGFzcywKICAgIAkJc3Bpbm5lckNsYXNzLAogICAgCQljbGVhciwKICAgIAkJc2NhbiwKICAgIAkJZG93bmxvYWQsCiAgICAJCXNldHRpbmdzLAogICAgCQlhY3RpdmUsCiAgICAJCXNwaW5uZXJTaG93bgogICAgCV07CiAgICB9CgogICAgY2xhc3MgU2NhblBhZ2UgZXh0ZW5kcyBTdmVsdGVDb21wb25lbnREZXYgewogICAgCWNvbnN0cnVjdG9yKG9wdGlvbnMpIHsKICAgIAkJc3VwZXIob3B0aW9ucyk7CiAgICAJCWluaXQodGhpcywgb3B0aW9ucywgaW5zdGFuY2UkaCwgY3JlYXRlX2ZyYWdtZW50JGgsIHNhZmVfbm90X2VxdWFsLCB7IHNldHRpbmdzOiA5LCBhY3RpdmU6IDEwIH0pOwoKICAgIAkJZGlzcGF0Y2hfZGV2KCJTdmVsdGVSZWdpc3RlckNvbXBvbmVudCIsIHsKICAgIAkJCWNvbXBvbmVudDogdGhpcywKICAgIAkJCXRhZ05hbWU6ICJTY2FuUGFnZSIsCiAgICAJCQlvcHRpb25zLAogICAgCQkJaWQ6IGNyZWF0ZV9mcmFnbWVudCRoLm5hbWUKICAgIAkJfSk7CgogICAgCQljb25zdCB7IGN0eCB9ID0gdGhpcy4kJDsKICAgIAkJY29uc3QgcHJvcHMgPSBvcHRpb25zLnByb3BzIHx8IHt9OwoKICAgIAkJaWYgKC8qYWN0aXZlKi8gY3R4WzEwXSA9PT0gdW5kZWZpbmVkICYmICEoImFjdGl2ZSIgaW4gcHJvcHMpKSB7CiAgICAJCQljb25zb2xlLndhcm4oIjxTY2FuUGFnZT4gd2FzIGNyZWF0ZWQgd2l0aG91dCBleHBlY3RlZCBwcm9wICdhY3RpdmUnIik7CiAgICAJCX0KICAgIAl9CgogICAgCWdldCBzZXR0aW5ncygpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8U2NhblBhZ2U+OiBQcm9wcyBjYW5ub3QgYmUgcmVhZCBkaXJlY3RseSBmcm9tIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlzZXQgc2V0dGluZ3ModmFsdWUpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8U2NhblBhZ2U+OiBQcm9wcyBjYW5ub3QgYmUgc2V0IGRpcmVjdGx5IG9uIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlnZXQgYWN0aXZlKCkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxTY2FuUGFnZT46IFByb3BzIGNhbm5vdCBiZSByZWFkIGRpcmVjdGx5IGZyb20gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCXNldCBhY3RpdmUodmFsdWUpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8U2NhblBhZ2U+OiBQcm9wcyBjYW5ub3QgYmUgc2V0IGRpcmVjdGx5IG9uIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQogICAgfQoKICAgIC8qIHNyYy9TZXR0aW5nc1BhZ2Uuc3ZlbHRlIGdlbmVyYXRlZCBieSBTdmVsdGUgdjMuMzEuMiAqLwoKICAgIGNvbnN0IHsgY29uc29sZTogY29uc29sZV8xIH0gPSBnbG9iYWxzOwogICAgY29uc3QgZmlsZSRoID0gInNyYy9TZXR0aW5nc1BhZ2Uuc3ZlbHRlIjsKCiAgICBmdW5jdGlvbiBnZXRfZWFjaF9jb250ZXh0JDEoY3R4LCBsaXN0LCBpKSB7CiAgICAJY29uc3QgY2hpbGRfY3R4ID0gY3R4LnNsaWNlKCk7CiAgICAJY2hpbGRfY3R4WzE0XSA9IGxpc3RbaV07CiAgICAJY2hpbGRfY3R4WzE1XSA9IGxpc3Q7CiAgICAJY2hpbGRfY3R4WzE2XSA9IGk7CiAgICAJcmV0dXJuIGNoaWxkX2N0eDsKICAgIH0KCiAgICBmdW5jdGlvbiBnZXRfZWFjaF9jb250ZXh0XzEoY3R4LCBsaXN0LCBpKSB7CiAgICAJY29uc3QgY2hpbGRfY3R4ID0gY3R4LnNsaWNlKCk7CiAgICAJY2hpbGRfY3R4WzE3XSA9IGxpc3RbaV07CiAgICAJcmV0dXJuIGNoaWxkX2N0eDsKICAgIH0KCiAgICAvLyAoOTA6MjApIHs6ZWxzZX0KICAgIGZ1bmN0aW9uIGNyZWF0ZV9lbHNlX2Jsb2NrJDYoY3R4KSB7CiAgICAJbGV0IHQ7CgogICAgCWNvbnN0IGJsb2NrID0gewogICAgCQljOiBmdW5jdGlvbiBjcmVhdGUoKSB7CiAgICAJCQl0ID0gdGV4dCgiVW5kZWZpbmVkIG9wdGlvbiIpOwogICAgCQl9LAogICAgCQltOiBmdW5jdGlvbiBtb3VudCh0YXJnZXQsIGFuY2hvcikgewogICAgCQkJaW5zZXJ0X2Rldih0YXJnZXQsIHQsIGFuY2hvcik7CiAgICAJCX0sCiAgICAJCXA6IG5vb3AsCiAgICAJCWk6IG5vb3AsCiAgICAJCW86IG5vb3AsCiAgICAJCWQ6IGZ1bmN0aW9uIGRlc3Ryb3koZGV0YWNoaW5nKSB7CiAgICAJCQlpZiAoZGV0YWNoaW5nKSBkZXRhY2hfZGV2KHQpOwogICAgCQl9CiAgICAJfTsKCiAgICAJZGlzcGF0Y2hfZGV2KCJTdmVsdGVSZWdpc3RlckJsb2NrIiwgewogICAgCQlibG9jaywKICAgIAkJaWQ6IGNyZWF0ZV9lbHNlX2Jsb2NrJDYubmFtZSwKICAgIAkJdHlwZTogImVsc2UiLAogICAgCQlzb3VyY2U6ICIoOTA6MjApIHs6ZWxzZX0iLAogICAgCQljdHgKICAgIAl9KTsKCiAgICAJcmV0dXJuIGJsb2NrOwogICAgfQoKICAgIC8vICg4Mzo1MCkgCiAgICBmdW5jdGlvbiBjcmVhdGVfaWZfYmxvY2tfNCQxKGN0eCkgewogICAgCWxldCBsYWJlbDsKICAgIAlsZXQgdDsKICAgIAlsZXQgaW5wdXQ7CiAgICAJbGV0IHVwZGF0aW5nX3ZhbHVlOwogICAgCWxldCBjdXJyZW50OwoKICAgIAlsYWJlbCA9IG5ldyBMYWJlbCh7CiAgICAJCQlwcm9wczogewogICAgCQkJCWZvcjogLypvcHRpb24qLyBjdHhbMTRdLm5hbWUsCiAgICAJCQkJJCRzbG90czogeyBkZWZhdWx0OiBbY3JlYXRlX2RlZmF1bHRfc2xvdF84JDFdIH0sCiAgICAJCQkJJCRzY29wZTogeyBjdHggfQogICAgCQkJfSwKICAgIAkJCSQkaW5saW5lOiB0cnVlCiAgICAJCX0pOwoKICAgIAlmdW5jdGlvbiBpbnB1dF92YWx1ZV9iaW5kaW5nXzIodmFsdWUpIHsKICAgIAkJLyppbnB1dF92YWx1ZV9iaW5kaW5nXzIqLyBjdHhbOV0uY2FsbChudWxsLCB2YWx1ZSwgLypvcHRpb24qLyBjdHhbMTRdKTsKICAgIAl9CgogICAgCWxldCBpbnB1dF9wcm9wcyA9IHsKICAgIAkJdHlwZTogInNlbGVjdCIsCiAgICAJCW5hbWU6IC8qb3B0aW9uKi8gY3R4WzE0XS5uYW1lLAogICAgCQlpZDogLypvcHRpb24qLyBjdHhbMTRdLm5hbWUsCiAgICAJCSQkc2xvdHM6IHsgZGVmYXVsdDogW2NyZWF0ZV9kZWZhdWx0X3Nsb3RfNyQxXSB9LAogICAgCQkkJHNjb3BlOiB7IGN0eCB9CiAgICAJfTsKCiAgICAJaWYgKC8qc2V0dGluZ3MqLyBjdHhbMF1bLypvcHRpb24qLyBjdHhbMTRdLm5hbWVdICE9PSB2b2lkIDApIHsKICAgIAkJaW5wdXRfcHJvcHMudmFsdWUgPSAvKnNldHRpbmdzKi8gY3R4WzBdWy8qb3B0aW9uKi8gY3R4WzE0XS5uYW1lXTsKICAgIAl9CgogICAgCWlucHV0ID0gbmV3IElucHV0KHsgcHJvcHM6IGlucHV0X3Byb3BzLCAkJGlubGluZTogdHJ1ZSB9KTsKICAgIAliaW5kaW5nX2NhbGxiYWNrcy5wdXNoKCgpID0+IGJpbmQoaW5wdXQsICJ2YWx1ZSIsIGlucHV0X3ZhbHVlX2JpbmRpbmdfMikpOwoKICAgIAljb25zdCBibG9jayA9IHsKICAgIAkJYzogZnVuY3Rpb24gY3JlYXRlKCkgewogICAgCQkJY3JlYXRlX2NvbXBvbmVudChsYWJlbC4kJC5mcmFnbWVudCk7CiAgICAJCQl0ID0gc3BhY2UoKTsKICAgIAkJCWNyZWF0ZV9jb21wb25lbnQoaW5wdXQuJCQuZnJhZ21lbnQpOwogICAgCQl9LAogICAgCQltOiBmdW5jdGlvbiBtb3VudCh0YXJnZXQsIGFuY2hvcikgewogICAgCQkJbW91bnRfY29tcG9uZW50KGxhYmVsLCB0YXJnZXQsIGFuY2hvcik7CiAgICAJCQlpbnNlcnRfZGV2KHRhcmdldCwgdCwgYW5jaG9yKTsKICAgIAkJCW1vdW50X2NvbXBvbmVudChpbnB1dCwgdGFyZ2V0LCBhbmNob3IpOwogICAgCQkJY3VycmVudCA9IHRydWU7CiAgICAJCX0sCiAgICAJCXA6IGZ1bmN0aW9uIHVwZGF0ZShuZXdfY3R4LCBkaXJ0eSkgewogICAgCQkJY3R4ID0gbmV3X2N0eDsKICAgIAkJCWNvbnN0IGxhYmVsX2NoYW5nZXMgPSB7fTsKICAgIAkJCWlmIChkaXJ0eSAmIC8qb3B0aW9ucyovIDIpIGxhYmVsX2NoYW5nZXMuZm9yID0gLypvcHRpb24qLyBjdHhbMTRdLm5hbWU7CgogICAgCQkJaWYgKGRpcnR5ICYgLyokJHNjb3BlLCBvcHRpb25zKi8gMTA0ODU3OCkgewogICAgCQkJCWxhYmVsX2NoYW5nZXMuJCRzY29wZSA9IHsgZGlydHksIGN0eCB9OwogICAgCQkJfQoKICAgIAkJCWxhYmVsLiRzZXQobGFiZWxfY2hhbmdlcyk7CiAgICAJCQljb25zdCBpbnB1dF9jaGFuZ2VzID0ge307CiAgICAJCQlpZiAoZGlydHkgJiAvKm9wdGlvbnMqLyAyKSBpbnB1dF9jaGFuZ2VzLm5hbWUgPSAvKm9wdGlvbiovIGN0eFsxNF0ubmFtZTsKICAgIAkJCWlmIChkaXJ0eSAmIC8qb3B0aW9ucyovIDIpIGlucHV0X2NoYW5nZXMuaWQgPSAvKm9wdGlvbiovIGN0eFsxNF0ubmFtZTsKCiAgICAJCQlpZiAoZGlydHkgJiAvKiQkc2NvcGUsIG9wdGlvbnMqLyAxMDQ4NTc4KSB7CiAgICAJCQkJaW5wdXRfY2hhbmdlcy4kJHNjb3BlID0geyBkaXJ0eSwgY3R4IH07CiAgICAJCQl9CgogICAgCQkJaWYgKCF1cGRhdGluZ192YWx1ZSAmJiBkaXJ0eSAmIC8qc2V0dGluZ3MsIG9wdGlvbnMqLyAzKSB7CiAgICAJCQkJdXBkYXRpbmdfdmFsdWUgPSB0cnVlOwogICAgCQkJCWlucHV0X2NoYW5nZXMudmFsdWUgPSAvKnNldHRpbmdzKi8gY3R4WzBdWy8qb3B0aW9uKi8gY3R4WzE0XS5uYW1lXTsKICAgIAkJCQlhZGRfZmx1c2hfY2FsbGJhY2soKCkgPT4gdXBkYXRpbmdfdmFsdWUgPSBmYWxzZSk7CiAgICAJCQl9CgogICAgCQkJaW5wdXQuJHNldChpbnB1dF9jaGFuZ2VzKTsKICAgIAkJfSwKICAgIAkJaTogZnVuY3Rpb24gaW50cm8obG9jYWwpIHsKICAgIAkJCWlmIChjdXJyZW50KSByZXR1cm47CiAgICAJCQl0cmFuc2l0aW9uX2luKGxhYmVsLiQkLmZyYWdtZW50LCBsb2NhbCk7CiAgICAJCQl0cmFuc2l0aW9uX2luKGlucHV0LiQkLmZyYWdtZW50LCBsb2NhbCk7CiAgICAJCQljdXJyZW50ID0gdHJ1ZTsKICAgIAkJfSwKICAgIAkJbzogZnVuY3Rpb24gb3V0cm8obG9jYWwpIHsKICAgIAkJCXRyYW5zaXRpb25fb3V0KGxhYmVsLiQkLmZyYWdtZW50LCBsb2NhbCk7CiAgICAJCQl0cmFuc2l0aW9uX291dChpbnB1dC4kJC5mcmFnbWVudCwgbG9jYWwpOwogICAgCQkJY3VycmVudCA9IGZhbHNlOwogICAgCQl9LAogICAgCQlkOiBmdW5jdGlvbiBkZXN0cm95KGRldGFjaGluZykgewogICAgCQkJZGVzdHJveV9jb21wb25lbnQobGFiZWwsIGRldGFjaGluZyk7CiAgICAJCQlpZiAoZGV0YWNoaW5nKSBkZXRhY2hfZGV2KHQpOwogICAgCQkJZGVzdHJveV9jb21wb25lbnQoaW5wdXQsIGRldGFjaGluZyk7CiAgICAJCX0KICAgIAl9OwoKICAgIAlkaXNwYXRjaF9kZXYoIlN2ZWx0ZVJlZ2lzdGVyQmxvY2siLCB7CiAgICAJCWJsb2NrLAogICAgCQlpZDogY3JlYXRlX2lmX2Jsb2NrXzQkMS5uYW1lLAogICAgCQl0eXBlOiAiaWYiLAogICAgCQlzb3VyY2U6ICIoODM6NTApICIsCiAgICAJCWN0eAogICAgCX0pOwoKICAgIAlyZXR1cm4gYmxvY2s7CiAgICB9CgogICAgLy8gKDgwOjcxKSAKICAgIGZ1bmN0aW9uIGNyZWF0ZV9pZl9ibG9ja18zJDMoY3R4KSB7CiAgICAJbGV0IGxhYmVsOwogICAgCWxldCB0OwogICAgCWxldCBpbnB1dDsKICAgIAlsZXQgdXBkYXRpbmdfdmFsdWU7CiAgICAJbGV0IGN1cnJlbnQ7CgogICAgCWxhYmVsID0gbmV3IExhYmVsKHsKICAgIAkJCXByb3BzOiB7CiAgICAJCQkJZm9yOiAvKm9wdGlvbiovIGN0eFsxNF0ubmFtZSwKICAgIAkJCQkkJHNsb3RzOiB7IGRlZmF1bHQ6IFtjcmVhdGVfZGVmYXVsdF9zbG90XzYkMV0gfSwKICAgIAkJCQkkJHNjb3BlOiB7IGN0eCB9CiAgICAJCQl9LAogICAgCQkJJCRpbmxpbmU6IHRydWUKICAgIAkJfSk7CgogICAgCWZ1bmN0aW9uIGlucHV0X3ZhbHVlX2JpbmRpbmdfMSh2YWx1ZSkgewogICAgCQkvKmlucHV0X3ZhbHVlX2JpbmRpbmdfMSovIGN0eFs4XS5jYWxsKG51bGwsIHZhbHVlLCAvKm9wdGlvbiovIGN0eFsxNF0pOwogICAgCX0KCiAgICAJbGV0IGlucHV0X3Byb3BzID0gewogICAgCQluYW1lOiAvKm9wdGlvbiovIGN0eFsxNF0ubmFtZSwKICAgIAkJaWQ6IC8qb3B0aW9uKi8gY3R4WzE0XS5uYW1lCiAgICAJfTsKCiAgICAJaWYgKC8qc2V0dGluZ3MqLyBjdHhbMF1bLypvcHRpb24qLyBjdHhbMTRdLm5hbWVdICE9PSB2b2lkIDApIHsKICAgIAkJaW5wdXRfcHJvcHMudmFsdWUgPSAvKnNldHRpbmdzKi8gY3R4WzBdWy8qb3B0aW9uKi8gY3R4WzE0XS5uYW1lXTsKICAgIAl9CgogICAgCWlucHV0ID0gbmV3IElucHV0KHsgcHJvcHM6IGlucHV0X3Byb3BzLCAkJGlubGluZTogdHJ1ZSB9KTsKICAgIAliaW5kaW5nX2NhbGxiYWNrcy5wdXNoKCgpID0+IGJpbmQoaW5wdXQsICJ2YWx1ZSIsIGlucHV0X3ZhbHVlX2JpbmRpbmdfMSkpOwoKICAgIAljb25zdCBibG9jayA9IHsKICAgIAkJYzogZnVuY3Rpb24gY3JlYXRlKCkgewogICAgCQkJY3JlYXRlX2NvbXBvbmVudChsYWJlbC4kJC5mcmFnbWVudCk7CiAgICAJCQl0ID0gc3BhY2UoKTsKICAgIAkJCWNyZWF0ZV9jb21wb25lbnQoaW5wdXQuJCQuZnJhZ21lbnQpOwogICAgCQl9LAogICAgCQltOiBmdW5jdGlvbiBtb3VudCh0YXJnZXQsIGFuY2hvcikgewogICAgCQkJbW91bnRfY29tcG9uZW50KGxhYmVsLCB0YXJnZXQsIGFuY2hvcik7CiAgICAJCQlpbnNlcnRfZGV2KHRhcmdldCwgdCwgYW5jaG9yKTsKICAgIAkJCW1vdW50X2NvbXBvbmVudChpbnB1dCwgdGFyZ2V0LCBhbmNob3IpOwogICAgCQkJY3VycmVudCA9IHRydWU7CiAgICAJCX0sCiAgICAJCXA6IGZ1bmN0aW9uIHVwZGF0ZShuZXdfY3R4LCBkaXJ0eSkgewogICAgCQkJY3R4ID0gbmV3X2N0eDsKICAgIAkJCWNvbnN0IGxhYmVsX2NoYW5nZXMgPSB7fTsKICAgIAkJCWlmIChkaXJ0eSAmIC8qb3B0aW9ucyovIDIpIGxhYmVsX2NoYW5nZXMuZm9yID0gLypvcHRpb24qLyBjdHhbMTRdLm5hbWU7CgogICAgCQkJaWYgKGRpcnR5ICYgLyokJHNjb3BlLCBvcHRpb25zKi8gMTA0ODU3OCkgewogICAgCQkJCWxhYmVsX2NoYW5nZXMuJCRzY29wZSA9IHsgZGlydHksIGN0eCB9OwogICAgCQkJfQoKICAgIAkJCWxhYmVsLiRzZXQobGFiZWxfY2hhbmdlcyk7CiAgICAJCQljb25zdCBpbnB1dF9jaGFuZ2VzID0ge307CiAgICAJCQlpZiAoZGlydHkgJiAvKm9wdGlvbnMqLyAyKSBpbnB1dF9jaGFuZ2VzLm5hbWUgPSAvKm9wdGlvbiovIGN0eFsxNF0ubmFtZTsKICAgIAkJCWlmIChkaXJ0eSAmIC8qb3B0aW9ucyovIDIpIGlucHV0X2NoYW5nZXMuaWQgPSAvKm9wdGlvbiovIGN0eFsxNF0ubmFtZTsKCiAgICAJCQlpZiAoIXVwZGF0aW5nX3ZhbHVlICYmIGRpcnR5ICYgLypzZXR0aW5ncywgb3B0aW9ucyovIDMpIHsKICAgIAkJCQl1cGRhdGluZ192YWx1ZSA9IHRydWU7CiAgICAJCQkJaW5wdXRfY2hhbmdlcy52YWx1ZSA9IC8qc2V0dGluZ3MqLyBjdHhbMF1bLypvcHRpb24qLyBjdHhbMTRdLm5hbWVdOwogICAgCQkJCWFkZF9mbHVzaF9jYWxsYmFjaygoKSA9PiB1cGRhdGluZ192YWx1ZSA9IGZhbHNlKTsKICAgIAkJCX0KCiAgICAJCQlpbnB1dC4kc2V0KGlucHV0X2NoYW5nZXMpOwogICAgCQl9LAogICAgCQlpOiBmdW5jdGlvbiBpbnRybyhsb2NhbCkgewogICAgCQkJaWYgKGN1cnJlbnQpIHJldHVybjsKICAgIAkJCXRyYW5zaXRpb25faW4obGFiZWwuJCQuZnJhZ21lbnQsIGxvY2FsKTsKICAgIAkJCXRyYW5zaXRpb25faW4oaW5wdXQuJCQuZnJhZ21lbnQsIGxvY2FsKTsKICAgIAkJCWN1cnJlbnQgPSB0cnVlOwogICAgCQl9LAogICAgCQlvOiBmdW5jdGlvbiBvdXRybyhsb2NhbCkgewogICAgCQkJdHJhbnNpdGlvbl9vdXQobGFiZWwuJCQuZnJhZ21lbnQsIGxvY2FsKTsKICAgIAkJCXRyYW5zaXRpb25fb3V0KGlucHV0LiQkLmZyYWdtZW50LCBsb2NhbCk7CiAgICAJCQljdXJyZW50ID0gZmFsc2U7CiAgICAJCX0sCiAgICAJCWQ6IGZ1bmN0aW9uIGRlc3Ryb3koZGV0YWNoaW5nKSB7CiAgICAJCQlkZXN0cm95X2NvbXBvbmVudChsYWJlbCwgZGV0YWNoaW5nKTsKICAgIAkJCWlmIChkZXRhY2hpbmcpIGRldGFjaF9kZXYodCk7CiAgICAJCQlkZXN0cm95X2NvbXBvbmVudChpbnB1dCwgZGV0YWNoaW5nKTsKICAgIAkJfQogICAgCX07CgogICAgCWRpc3BhdGNoX2RldigiU3ZlbHRlUmVnaXN0ZXJCbG9jayIsIHsKICAgIAkJYmxvY2ssCiAgICAJCWlkOiBjcmVhdGVfaWZfYmxvY2tfMyQzLm5hbWUsCiAgICAJCXR5cGU6ICJpZiIsCiAgICAJCXNvdXJjZTogIig4MDo3MSkgIiwKICAgIAkJY3R4CiAgICAJfSk7CgogICAgCXJldHVybiBibG9jazsKICAgIH0KCiAgICAvLyAoNzU6OTQpIAogICAgZnVuY3Rpb24gY3JlYXRlX2lmX2Jsb2NrXzEkNChjdHgpIHsKICAgIAlsZXQgbGFiZWw7CiAgICAJbGV0IHQ7CiAgICAJbGV0IGlucHV0OwogICAgCWxldCB1cGRhdGluZ192YWx1ZTsKICAgIAlsZXQgY3VycmVudDsKCiAgICAJbGFiZWwgPSBuZXcgTGFiZWwoewogICAgCQkJcHJvcHM6IHsKICAgIAkJCQlmb3I6IC8qb3B0aW9uKi8gY3R4WzE0XS5uYW1lLAogICAgCQkJCSQkc2xvdHM6IHsgZGVmYXVsdDogW2NyZWF0ZV9kZWZhdWx0X3Nsb3RfNSQxXSB9LAogICAgCQkJCSQkc2NvcGU6IHsgY3R4IH0KICAgIAkJCX0sCiAgICAJCQkkJGlubGluZTogdHJ1ZQogICAgCQl9KTsKCiAgICAJZnVuY3Rpb24gaW5wdXRfdmFsdWVfYmluZGluZyh2YWx1ZSkgewogICAgCQkvKmlucHV0X3ZhbHVlX2JpbmRpbmcqLyBjdHhbN10uY2FsbChudWxsLCB2YWx1ZSwgLypvcHRpb24qLyBjdHhbMTRdKTsKICAgIAl9CgogICAgCWxldCBpbnB1dF9wcm9wcyA9IHsKICAgIAkJdHlwZTogIm51bWJlciIsCiAgICAJCW5hbWU6IC8qb3B0aW9uKi8gY3R4WzE0XS5uYW1lLAogICAgCQlpZDogLypvcHRpb24qLyBjdHhbMTRdLm5hbWUKICAgIAl9OwoKICAgIAlpZiAoLypzZXR0aW5ncyovIGN0eFswXVsvKm9wdGlvbiovIGN0eFsxNF0ubmFtZV0gIT09IHZvaWQgMCkgewogICAgCQlpbnB1dF9wcm9wcy52YWx1ZSA9IC8qc2V0dGluZ3MqLyBjdHhbMF1bLypvcHRpb24qLyBjdHhbMTRdLm5hbWVdOwogICAgCX0KCiAgICAJaW5wdXQgPSBuZXcgSW5wdXQoeyBwcm9wczogaW5wdXRfcHJvcHMsICQkaW5saW5lOiB0cnVlIH0pOwogICAgCWJpbmRpbmdfY2FsbGJhY2tzLnB1c2goKCkgPT4gYmluZChpbnB1dCwgInZhbHVlIiwgaW5wdXRfdmFsdWVfYmluZGluZykpOwoKICAgIAljb25zdCBibG9jayA9IHsKICAgIAkJYzogZnVuY3Rpb24gY3JlYXRlKCkgewogICAgCQkJY3JlYXRlX2NvbXBvbmVudChsYWJlbC4kJC5mcmFnbWVudCk7CiAgICAJCQl0ID0gc3BhY2UoKTsKICAgIAkJCWNyZWF0ZV9jb21wb25lbnQoaW5wdXQuJCQuZnJhZ21lbnQpOwogICAgCQl9LAogICAgCQltOiBmdW5jdGlvbiBtb3VudCh0YXJnZXQsIGFuY2hvcikgewogICAgCQkJbW91bnRfY29tcG9uZW50KGxhYmVsLCB0YXJnZXQsIGFuY2hvcik7CiAgICAJCQlpbnNlcnRfZGV2KHRhcmdldCwgdCwgYW5jaG9yKTsKICAgIAkJCW1vdW50X2NvbXBvbmVudChpbnB1dCwgdGFyZ2V0LCBhbmNob3IpOwogICAgCQkJY3VycmVudCA9IHRydWU7CiAgICAJCX0sCiAgICAJCXA6IGZ1bmN0aW9uIHVwZGF0ZShuZXdfY3R4LCBkaXJ0eSkgewogICAgCQkJY3R4ID0gbmV3X2N0eDsKICAgIAkJCWNvbnN0IGxhYmVsX2NoYW5nZXMgPSB7fTsKICAgIAkJCWlmIChkaXJ0eSAmIC8qb3B0aW9ucyovIDIpIGxhYmVsX2NoYW5nZXMuZm9yID0gLypvcHRpb24qLyBjdHhbMTRdLm5hbWU7CgogICAgCQkJaWYgKGRpcnR5ICYgLyokJHNjb3BlLCBvcHRpb25zKi8gMTA0ODU3OCkgewogICAgCQkJCWxhYmVsX2NoYW5nZXMuJCRzY29wZSA9IHsgZGlydHksIGN0eCB9OwogICAgCQkJfQoKICAgIAkJCWxhYmVsLiRzZXQobGFiZWxfY2hhbmdlcyk7CiAgICAJCQljb25zdCBpbnB1dF9jaGFuZ2VzID0ge307CiAgICAJCQlpZiAoZGlydHkgJiAvKm9wdGlvbnMqLyAyKSBpbnB1dF9jaGFuZ2VzLm5hbWUgPSAvKm9wdGlvbiovIGN0eFsxNF0ubmFtZTsKICAgIAkJCWlmIChkaXJ0eSAmIC8qb3B0aW9ucyovIDIpIGlucHV0X2NoYW5nZXMuaWQgPSAvKm9wdGlvbiovIGN0eFsxNF0ubmFtZTsKCiAgICAJCQlpZiAoIXVwZGF0aW5nX3ZhbHVlICYmIGRpcnR5ICYgLypzZXR0aW5ncywgb3B0aW9ucyovIDMpIHsKICAgIAkJCQl1cGRhdGluZ192YWx1ZSA9IHRydWU7CiAgICAJCQkJaW5wdXRfY2hhbmdlcy52YWx1ZSA9IC8qc2V0dGluZ3MqLyBjdHhbMF1bLypvcHRpb24qLyBjdHhbMTRdLm5hbWVdOwogICAgCQkJCWFkZF9mbHVzaF9jYWxsYmFjaygoKSA9PiB1cGRhdGluZ192YWx1ZSA9IGZhbHNlKTsKICAgIAkJCX0KCiAgICAJCQlpbnB1dC4kc2V0KGlucHV0X2NoYW5nZXMpOwogICAgCQl9LAogICAgCQlpOiBmdW5jdGlvbiBpbnRybyhsb2NhbCkgewogICAgCQkJaWYgKGN1cnJlbnQpIHJldHVybjsKICAgIAkJCXRyYW5zaXRpb25faW4obGFiZWwuJCQuZnJhZ21lbnQsIGxvY2FsKTsKICAgIAkJCXRyYW5zaXRpb25faW4oaW5wdXQuJCQuZnJhZ21lbnQsIGxvY2FsKTsKICAgIAkJCWN1cnJlbnQgPSB0cnVlOwogICAgCQl9LAogICAgCQlvOiBmdW5jdGlvbiBvdXRybyhsb2NhbCkgewogICAgCQkJdHJhbnNpdGlvbl9vdXQobGFiZWwuJCQuZnJhZ21lbnQsIGxvY2FsKTsKICAgIAkJCXRyYW5zaXRpb25fb3V0KGlucHV0LiQkLmZyYWdtZW50LCBsb2NhbCk7CiAgICAJCQljdXJyZW50ID0gZmFsc2U7CiAgICAJCX0sCiAgICAJCWQ6IGZ1bmN0aW9uIGRlc3Ryb3koZGV0YWNoaW5nKSB7CiAgICAJCQlkZXN0cm95X2NvbXBvbmVudChsYWJlbCwgZGV0YWNoaW5nKTsKICAgIAkJCWlmIChkZXRhY2hpbmcpIGRldGFjaF9kZXYodCk7CiAgICAJCQlkZXN0cm95X2NvbXBvbmVudChpbnB1dCwgZGV0YWNoaW5nKTsKICAgIAkJfQogICAgCX07CgogICAgCWRpc3BhdGNoX2RldigiU3ZlbHRlUmVnaXN0ZXJCbG9jayIsIHsKICAgIAkJYmxvY2ssCiAgICAJCWlkOiBjcmVhdGVfaWZfYmxvY2tfMSQ0Lm5hbWUsCiAgICAJCXR5cGU6ICJpZiIsCiAgICAJCXNvdXJjZTogIig3NTo5NCkgIiwKICAgIAkJY3R4CiAgICAJfSk7CgogICAgCXJldHVybiBibG9jazsKICAgIH0KCiAgICAvLyAoNzA6MjApIHsjaWYgb3B0aW9uLnR5cGUgPT09IDB9CiAgICBmdW5jdGlvbiBjcmVhdGVfaWZfYmxvY2skNihjdHgpIHsKICAgIAlsZXQgbGFiZWw7CiAgICAJbGV0IGN1cnJlbnQ7CgogICAgCWxhYmVsID0gbmV3IExhYmVsKHsKICAgIAkJCXByb3BzOiB7CiAgICAJCQkJZm9yOiAvKm9wdGlvbiovIGN0eFsxNF0ubmFtZSwKICAgIAkJCQljaGVjazogdHJ1ZSwKICAgIAkJCQkkJHNsb3RzOiB7IGRlZmF1bHQ6IFtjcmVhdGVfZGVmYXVsdF9zbG90XzQkMV0gfSwKICAgIAkJCQkkJHNjb3BlOiB7IGN0eCB9CiAgICAJCQl9LAogICAgCQkJJCRpbmxpbmU6IHRydWUKICAgIAkJfSk7CgogICAgCWNvbnN0IGJsb2NrID0gewogICAgCQljOiBmdW5jdGlvbiBjcmVhdGUoKSB7CiAgICAJCQljcmVhdGVfY29tcG9uZW50KGxhYmVsLiQkLmZyYWdtZW50KTsKICAgIAkJfSwKICAgIAkJbTogZnVuY3Rpb24gbW91bnQodGFyZ2V0LCBhbmNob3IpIHsKICAgIAkJCW1vdW50X2NvbXBvbmVudChsYWJlbCwgdGFyZ2V0LCBhbmNob3IpOwogICAgCQkJY3VycmVudCA9IHRydWU7CiAgICAJCX0sCiAgICAJCXA6IGZ1bmN0aW9uIHVwZGF0ZShjdHgsIGRpcnR5KSB7CiAgICAJCQljb25zdCBsYWJlbF9jaGFuZ2VzID0ge307CiAgICAJCQlpZiAoZGlydHkgJiAvKm9wdGlvbnMqLyAyKSBsYWJlbF9jaGFuZ2VzLmZvciA9IC8qb3B0aW9uKi8gY3R4WzE0XS5uYW1lOwoKICAgIAkJCWlmIChkaXJ0eSAmIC8qJCRzY29wZSwgb3B0aW9ucywgc2V0dGluZ3MqLyAxMDQ4NTc5KSB7CiAgICAJCQkJbGFiZWxfY2hhbmdlcy4kJHNjb3BlID0geyBkaXJ0eSwgY3R4IH07CiAgICAJCQl9CgogICAgCQkJbGFiZWwuJHNldChsYWJlbF9jaGFuZ2VzKTsKICAgIAkJfSwKICAgIAkJaTogZnVuY3Rpb24gaW50cm8obG9jYWwpIHsKICAgIAkJCWlmIChjdXJyZW50KSByZXR1cm47CiAgICAJCQl0cmFuc2l0aW9uX2luKGxhYmVsLiQkLmZyYWdtZW50LCBsb2NhbCk7CiAgICAJCQljdXJyZW50ID0gdHJ1ZTsKICAgIAkJfSwKICAgIAkJbzogZnVuY3Rpb24gb3V0cm8obG9jYWwpIHsKICAgIAkJCXRyYW5zaXRpb25fb3V0KGxhYmVsLiQkLmZyYWdtZW50LCBsb2NhbCk7CiAgICAJCQljdXJyZW50ID0gZmFsc2U7CiAgICAJCX0sCiAgICAJCWQ6IGZ1bmN0aW9uIGRlc3Ryb3koZGV0YWNoaW5nKSB7CiAgICAJCQlkZXN0cm95X2NvbXBvbmVudChsYWJlbCwgZGV0YWNoaW5nKTsKICAgIAkJfQogICAgCX07CgogICAgCWRpc3BhdGNoX2RldigiU3ZlbHRlUmVnaXN0ZXJCbG9jayIsIHsKICAgIAkJYmxvY2ssCiAgICAJCWlkOiBjcmVhdGVfaWZfYmxvY2skNi5uYW1lLAogICAgCQl0eXBlOiAiaWYiLAogICAgCQlzb3VyY2U6ICIoNzA6MjApIHsjaWYgb3B0aW9uLnR5cGUgPT09IDB9IiwKICAgIAkJY3R4CiAgICAJfSk7CgogICAgCXJldHVybiBibG9jazsKICAgIH0KCiAgICAvLyAoODQ6MjQpIDxMYWJlbCBmb3I9e29wdGlvbi5uYW1lfT4KICAgIGZ1bmN0aW9uIGNyZWF0ZV9kZWZhdWx0X3Nsb3RfOCQxKGN0eCkgewogICAgCWxldCB0X3ZhbHVlID0gLypvcHRpb24qLyBjdHhbMTRdLnRpdGxlICsgIiI7CiAgICAJbGV0IHQ7CgogICAgCWNvbnN0IGJsb2NrID0gewogICAgCQljOiBmdW5jdGlvbiBjcmVhdGUoKSB7CiAgICAJCQl0ID0gdGV4dCh0X3ZhbHVlKTsKICAgIAkJfSwKICAgIAkJbTogZnVuY3Rpb24gbW91bnQodGFyZ2V0LCBhbmNob3IpIHsKICAgIAkJCWluc2VydF9kZXYodGFyZ2V0LCB0LCBhbmNob3IpOwogICAgCQl9LAogICAgCQlwOiBmdW5jdGlvbiB1cGRhdGUoY3R4LCBkaXJ0eSkgewogICAgCQkJaWYgKGRpcnR5ICYgLypvcHRpb25zKi8gMiAmJiB0X3ZhbHVlICE9PSAodF92YWx1ZSA9IC8qb3B0aW9uKi8gY3R4WzE0XS50aXRsZSArICIiKSkgc2V0X2RhdGFfZGV2KHQsIHRfdmFsdWUpOwogICAgCQl9LAogICAgCQlkOiBmdW5jdGlvbiBkZXN0cm95KGRldGFjaGluZykgewogICAgCQkJaWYgKGRldGFjaGluZykgZGV0YWNoX2Rldih0KTsKICAgIAkJfQogICAgCX07CgogICAgCWRpc3BhdGNoX2RldigiU3ZlbHRlUmVnaXN0ZXJCbG9jayIsIHsKICAgIAkJYmxvY2ssCiAgICAJCWlkOiBjcmVhdGVfZGVmYXVsdF9zbG90XzgkMS5uYW1lLAogICAgCQl0eXBlOiAic2xvdCIsCiAgICAJCXNvdXJjZTogIig4NDoyNCkgPExhYmVsIGZvcj17b3B0aW9uLm5hbWV9PiIsCiAgICAJCWN0eAogICAgCX0pOwoKICAgIAlyZXR1cm4gYmxvY2s7CiAgICB9CgogICAgLy8gKDg2OjI4KSB7I2VhY2ggb3B0aW9uLnNldCBhcyBpdGVtfQogICAgZnVuY3Rpb24gY3JlYXRlX2VhY2hfYmxvY2tfMShjdHgpIHsKICAgIAlsZXQgb3B0aW9uOwogICAgCWxldCB0X3ZhbHVlID0gLyppdGVtKi8gY3R4WzE3XSArICIiOwogICAgCWxldCB0OwogICAgCWxldCBvcHRpb25fdmFsdWVfdmFsdWU7CgogICAgCWNvbnN0IGJsb2NrID0gewogICAgCQljOiBmdW5jdGlvbiBjcmVhdGUoKSB7CiAgICAJCQlvcHRpb24gPSBlbGVtZW50KCJvcHRpb24iKTsKICAgIAkJCXQgPSB0ZXh0KHRfdmFsdWUpOwogICAgCQkJb3B0aW9uLl9fdmFsdWUgPSBvcHRpb25fdmFsdWVfdmFsdWUgPSAvKml0ZW0qLyBjdHhbMTddOwogICAgCQkJb3B0aW9uLnZhbHVlID0gb3B0aW9uLl9fdmFsdWU7CiAgICAJCQlhZGRfbG9jYXRpb24ob3B0aW9uLCBmaWxlJGgsIDg2LCAzMiwgMjgzMyk7CiAgICAJCX0sCiAgICAJCW06IGZ1bmN0aW9uIG1vdW50KHRhcmdldCwgYW5jaG9yKSB7CiAgICAJCQlpbnNlcnRfZGV2KHRhcmdldCwgb3B0aW9uLCBhbmNob3IpOwogICAgCQkJYXBwZW5kX2RldihvcHRpb24sIHQpOwogICAgCQl9LAogICAgCQlwOiBmdW5jdGlvbiB1cGRhdGUoY3R4LCBkaXJ0eSkgewogICAgCQkJaWYgKGRpcnR5ICYgLypvcHRpb25zKi8gMiAmJiB0X3ZhbHVlICE9PSAodF92YWx1ZSA9IC8qaXRlbSovIGN0eFsxN10gKyAiIikpIHNldF9kYXRhX2Rldih0LCB0X3ZhbHVlKTsKCiAgICAJCQlpZiAoZGlydHkgJiAvKm9wdGlvbnMqLyAyICYmIG9wdGlvbl92YWx1ZV92YWx1ZSAhPT0gKG9wdGlvbl92YWx1ZV92YWx1ZSA9IC8qaXRlbSovIGN0eFsxN10pKSB7CiAgICAJCQkJcHJvcF9kZXYob3B0aW9uLCAiX192YWx1ZSIsIG9wdGlvbl92YWx1ZV92YWx1ZSk7CiAgICAJCQkJb3B0aW9uLnZhbHVlID0gb3B0aW9uLl9fdmFsdWU7CiAgICAJCQl9CiAgICAJCX0sCiAgICAJCWQ6IGZ1bmN0aW9uIGRlc3Ryb3koZGV0YWNoaW5nKSB7CiAgICAJCQlpZiAoZGV0YWNoaW5nKSBkZXRhY2hfZGV2KG9wdGlvbik7CiAgICAJCX0KICAgIAl9OwoKICAgIAlkaXNwYXRjaF9kZXYoIlN2ZWx0ZVJlZ2lzdGVyQmxvY2siLCB7CiAgICAJCWJsb2NrLAogICAgCQlpZDogY3JlYXRlX2VhY2hfYmxvY2tfMS5uYW1lLAogICAgCQl0eXBlOiAiZWFjaCIsCiAgICAJCXNvdXJjZTogIig4NjoyOCkgeyNlYWNoIG9wdGlvbi5zZXQgYXMgaXRlbX0iLAogICAgCQljdHgKICAgIAl9KTsKCiAgICAJcmV0dXJuIGJsb2NrOwogICAgfQoKICAgIC8vICg4NToyNCkgPElucHV0IHR5cGU9InNlbGVjdCIgbmFtZT17b3B0aW9uLm5hbWV9IGlkPXtvcHRpb24ubmFtZX0gYmluZDp2YWx1ZT17c2V0dGluZ3Nbb3B0aW9uLm5hbWVdfT4KICAgIGZ1bmN0aW9uIGNyZWF0ZV9kZWZhdWx0X3Nsb3RfNyQxKGN0eCkgewogICAgCWxldCBlYWNoXzFfYW5jaG9yOwogICAgCWxldCBlYWNoX3ZhbHVlXzEgPSAvKm9wdGlvbiovIGN0eFsxNF0uc2V0OwogICAgCXZhbGlkYXRlX2VhY2hfYXJndW1lbnQoZWFjaF92YWx1ZV8xKTsKICAgIAlsZXQgZWFjaF9ibG9ja3MgPSBbXTsKCiAgICAJZm9yIChsZXQgaSA9IDA7IGkgPCBlYWNoX3ZhbHVlXzEubGVuZ3RoOyBpICs9IDEpIHsKICAgIAkJZWFjaF9ibG9ja3NbaV0gPSBjcmVhdGVfZWFjaF9ibG9ja18xKGdldF9lYWNoX2NvbnRleHRfMShjdHgsIGVhY2hfdmFsdWVfMSwgaSkpOwogICAgCX0KCiAgICAJY29uc3QgYmxvY2sgPSB7CiAgICAJCWM6IGZ1bmN0aW9uIGNyZWF0ZSgpIHsKICAgIAkJCWZvciAobGV0IGkgPSAwOyBpIDwgZWFjaF9ibG9ja3MubGVuZ3RoOyBpICs9IDEpIHsKICAgIAkJCQllYWNoX2Jsb2Nrc1tpXS5jKCk7CiAgICAJCQl9CgogICAgCQkJZWFjaF8xX2FuY2hvciA9IGVtcHR5KCk7CiAgICAJCX0sCiAgICAJCW06IGZ1bmN0aW9uIG1vdW50KHRhcmdldCwgYW5jaG9yKSB7CiAgICAJCQlmb3IgKGxldCBpID0gMDsgaSA8IGVhY2hfYmxvY2tzLmxlbmd0aDsgaSArPSAxKSB7CiAgICAJCQkJZWFjaF9ibG9ja3NbaV0ubSh0YXJnZXQsIGFuY2hvcik7CiAgICAJCQl9CgogICAgCQkJaW5zZXJ0X2Rldih0YXJnZXQsIGVhY2hfMV9hbmNob3IsIGFuY2hvcik7CiAgICAJCX0sCiAgICAJCXA6IGZ1bmN0aW9uIHVwZGF0ZShjdHgsIGRpcnR5KSB7CiAgICAJCQlpZiAoZGlydHkgJiAvKm9wdGlvbnMqLyAyKSB7CiAgICAJCQkJZWFjaF92YWx1ZV8xID0gLypvcHRpb24qLyBjdHhbMTRdLnNldDsKICAgIAkJCQl2YWxpZGF0ZV9lYWNoX2FyZ3VtZW50KGVhY2hfdmFsdWVfMSk7CiAgICAJCQkJbGV0IGk7CgogICAgCQkJCWZvciAoaSA9IDA7IGkgPCBlYWNoX3ZhbHVlXzEubGVuZ3RoOyBpICs9IDEpIHsKICAgIAkJCQkJY29uc3QgY2hpbGRfY3R4ID0gZ2V0X2VhY2hfY29udGV4dF8xKGN0eCwgZWFjaF92YWx1ZV8xLCBpKTsKCiAgICAJCQkJCWlmIChlYWNoX2Jsb2Nrc1tpXSkgewogICAgCQkJCQkJZWFjaF9ibG9ja3NbaV0ucChjaGlsZF9jdHgsIGRpcnR5KTsKICAgIAkJCQkJfSBlbHNlIHsKICAgIAkJCQkJCWVhY2hfYmxvY2tzW2ldID0gY3JlYXRlX2VhY2hfYmxvY2tfMShjaGlsZF9jdHgpOwogICAgCQkJCQkJZWFjaF9ibG9ja3NbaV0uYygpOwogICAgCQkJCQkJZWFjaF9ibG9ja3NbaV0ubShlYWNoXzFfYW5jaG9yLnBhcmVudE5vZGUsIGVhY2hfMV9hbmNob3IpOwogICAgCQkJCQl9CiAgICAJCQkJfQoKICAgIAkJCQlmb3IgKDsgaSA8IGVhY2hfYmxvY2tzLmxlbmd0aDsgaSArPSAxKSB7CiAgICAJCQkJCWVhY2hfYmxvY2tzW2ldLmQoMSk7CiAgICAJCQkJfQoKICAgIAkJCQllYWNoX2Jsb2Nrcy5sZW5ndGggPSBlYWNoX3ZhbHVlXzEubGVuZ3RoOwogICAgCQkJfQogICAgCQl9LAogICAgCQlkOiBmdW5jdGlvbiBkZXN0cm95KGRldGFjaGluZykgewogICAgCQkJZGVzdHJveV9lYWNoKGVhY2hfYmxvY2tzLCBkZXRhY2hpbmcpOwogICAgCQkJaWYgKGRldGFjaGluZykgZGV0YWNoX2RldihlYWNoXzFfYW5jaG9yKTsKICAgIAkJfQogICAgCX07CgogICAgCWRpc3BhdGNoX2RldigiU3ZlbHRlUmVnaXN0ZXJCbG9jayIsIHsKICAgIAkJYmxvY2ssCiAgICAJCWlkOiBjcmVhdGVfZGVmYXVsdF9zbG90XzckMS5uYW1lLAogICAgCQl0eXBlOiAic2xvdCIsCiAgICAJCXNvdXJjZTogIig4NToyNCkgPElucHV0IHR5cGU9XFxcInNlbGVjdFxcXCIgbmFtZT17b3B0aW9uLm5hbWV9IGlkPXtvcHRpb24ubmFtZX0gYmluZDp2YWx1ZT17c2V0dGluZ3Nbb3B0aW9uLm5hbWVdfT4iLAogICAgCQljdHgKICAgIAl9KTsKCiAgICAJcmV0dXJuIGJsb2NrOwogICAgfQoKICAgIC8vICg4MToyNCkgPExhYmVsIGZvcj17b3B0aW9uLm5hbWV9PgogICAgZnVuY3Rpb24gY3JlYXRlX2RlZmF1bHRfc2xvdF82JDEoY3R4KSB7CiAgICAJbGV0IHRfdmFsdWUgPSAvKm9wdGlvbiovIGN0eFsxNF0udGl0bGUgKyAiIjsKICAgIAlsZXQgdDsKCiAgICAJY29uc3QgYmxvY2sgPSB7CiAgICAJCWM6IGZ1bmN0aW9uIGNyZWF0ZSgpIHsKICAgIAkJCXQgPSB0ZXh0KHRfdmFsdWUpOwogICAgCQl9LAogICAgCQltOiBmdW5jdGlvbiBtb3VudCh0YXJnZXQsIGFuY2hvcikgewogICAgCQkJaW5zZXJ0X2Rldih0YXJnZXQsIHQsIGFuY2hvcik7CiAgICAJCX0sCiAgICAJCXA6IGZ1bmN0aW9uIHVwZGF0ZShjdHgsIGRpcnR5KSB7CiAgICAJCQlpZiAoZGlydHkgJiAvKm9wdGlvbnMqLyAyICYmIHRfdmFsdWUgIT09ICh0X3ZhbHVlID0gLypvcHRpb24qLyBjdHhbMTRdLnRpdGxlICsgIiIpKSBzZXRfZGF0YV9kZXYodCwgdF92YWx1ZSk7CiAgICAJCX0sCiAgICAJCWQ6IGZ1bmN0aW9uIGRlc3Ryb3koZGV0YWNoaW5nKSB7CiAgICAJCQlpZiAoZGV0YWNoaW5nKSBkZXRhY2hfZGV2KHQpOwogICAgCQl9CiAgICAJfTsKCiAgICAJZGlzcGF0Y2hfZGV2KCJTdmVsdGVSZWdpc3RlckJsb2NrIiwgewogICAgCQlibG9jaywKICAgIAkJaWQ6IGNyZWF0ZV9kZWZhdWx0X3Nsb3RfNiQxLm5hbWUsCiAgICAJCXR5cGU6ICJzbG90IiwKICAgIAkJc291cmNlOiAiKDgxOjI0KSA8TGFiZWwgZm9yPXtvcHRpb24ubmFtZX0+IiwKICAgIAkJY3R4CiAgICAJfSk7CgogICAgCXJldHVybiBibG9jazsKICAgIH0KCiAgICAvLyAoNzc6MjgpIHsjaWYgb3B0aW9uLnJhbmdlICE9PSBudWxsfQogICAgZnVuY3Rpb24gY3JlYXRlX2lmX2Jsb2NrXzIkMyhjdHgpIHsKICAgIAlsZXQgdDA7CiAgICAJbGV0IHQxX3ZhbHVlID0gLypvcHRpb24qLyBjdHhbMTRdLnJhbmdlLm1pbiArICIiOwogICAgCWxldCB0MTsKICAgIAlsZXQgdDI7CiAgICAJbGV0IHQzX3ZhbHVlID0gLypvcHRpb24qLyBjdHhbMTRdLnJhbmdlLm1heCArICIiOwogICAgCWxldCB0MzsKICAgIAlsZXQgdDQ7CiAgICAJbGV0IHQ1X3ZhbHVlID0gLypvcHRpb24qLyBjdHhbMTRdLnJhbmdlLnF1YW50ICsgIiI7CiAgICAJbGV0IHQ1OwogICAgCWxldCB0NjsKCiAgICAJY29uc3QgYmxvY2sgPSB7CiAgICAJCWM6IGZ1bmN0aW9uIGNyZWF0ZSgpIHsKICAgIAkJCXQwID0gdGV4dCgiKFJhbmdlOiAiKTsKICAgIAkJCXQxID0gdGV4dCh0MV92YWx1ZSk7CiAgICAJCQl0MiA9IHRleHQoIi0iKTsKICAgIAkJCXQzID0gdGV4dCh0M192YWx1ZSk7CiAgICAJCQl0NCA9IHRleHQoIiwgc3RlcDogIik7CiAgICAJCQl0NSA9IHRleHQodDVfdmFsdWUpOwogICAgCQkJdDYgPSB0ZXh0KCIpIik7CiAgICAJCX0sCiAgICAJCW06IGZ1bmN0aW9uIG1vdW50KHRhcmdldCwgYW5jaG9yKSB7CiAgICAJCQlpbnNlcnRfZGV2KHRhcmdldCwgdDAsIGFuY2hvcik7CiAgICAJCQlpbnNlcnRfZGV2KHRhcmdldCwgdDEsIGFuY2hvcik7CiAgICAJCQlpbnNlcnRfZGV2KHRhcmdldCwgdDIsIGFuY2hvcik7CiAgICAJCQlpbnNlcnRfZGV2KHRhcmdldCwgdDMsIGFuY2hvcik7CiAgICAJCQlpbnNlcnRfZGV2KHRhcmdldCwgdDQsIGFuY2hvcik7CiAgICAJCQlpbnNlcnRfZGV2KHRhcmdldCwgdDUsIGFuY2hvcik7CiAgICAJCQlpbnNlcnRfZGV2KHRhcmdldCwgdDYsIGFuY2hvcik7CiAgICAJCX0sCiAgICAJCXA6IGZ1bmN0aW9uIHVwZGF0ZShjdHgsIGRpcnR5KSB7CiAgICAJCQlpZiAoZGlydHkgJiAvKm9wdGlvbnMqLyAyICYmIHQxX3ZhbHVlICE9PSAodDFfdmFsdWUgPSAvKm9wdGlvbiovIGN0eFsxNF0ucmFuZ2UubWluICsgIiIpKSBzZXRfZGF0YV9kZXYodDEsIHQxX3ZhbHVlKTsKICAgIAkJCWlmIChkaXJ0eSAmIC8qb3B0aW9ucyovIDIgJiYgdDNfdmFsdWUgIT09ICh0M192YWx1ZSA9IC8qb3B0aW9uKi8gY3R4WzE0XS5yYW5nZS5tYXggKyAiIikpIHNldF9kYXRhX2Rldih0MywgdDNfdmFsdWUpOwogICAgCQkJaWYgKGRpcnR5ICYgLypvcHRpb25zKi8gMiAmJiB0NV92YWx1ZSAhPT0gKHQ1X3ZhbHVlID0gLypvcHRpb24qLyBjdHhbMTRdLnJhbmdlLnF1YW50ICsgIiIpKSBzZXRfZGF0YV9kZXYodDUsIHQ1X3ZhbHVlKTsKICAgIAkJfSwKICAgIAkJZDogZnVuY3Rpb24gZGVzdHJveShkZXRhY2hpbmcpIHsKICAgIAkJCWlmIChkZXRhY2hpbmcpIGRldGFjaF9kZXYodDApOwogICAgCQkJaWYgKGRldGFjaGluZykgZGV0YWNoX2Rldih0MSk7CiAgICAJCQlpZiAoZGV0YWNoaW5nKSBkZXRhY2hfZGV2KHQyKTsKICAgIAkJCWlmIChkZXRhY2hpbmcpIGRldGFjaF9kZXYodDMpOwogICAgCQkJaWYgKGRldGFjaGluZykgZGV0YWNoX2Rldih0NCk7CiAgICAJCQlpZiAoZGV0YWNoaW5nKSBkZXRhY2hfZGV2KHQ1KTsKICAgIAkJCWlmIChkZXRhY2hpbmcpIGRldGFjaF9kZXYodDYpOwogICAgCQl9CiAgICAJfTsKCiAgICAJZGlzcGF0Y2hfZGV2KCJTdmVsdGVSZWdpc3RlckJsb2NrIiwgewogICAgCQlibG9jaywKICAgIAkJaWQ6IGNyZWF0ZV9pZl9ibG9ja18yJDMubmFtZSwKICAgIAkJdHlwZTogImlmIiwKICAgIAkJc291cmNlOiAiKDc3OjI4KSB7I2lmIG9wdGlvbi5yYW5nZSAhPT0gbnVsbH0iLAogICAgCQljdHgKICAgIAl9KTsKCiAgICAJcmV0dXJuIGJsb2NrOwogICAgfQoKICAgIC8vICg3NjoyNCkgPExhYmVsIGZvcj17b3B0aW9uLm5hbWV9PgogICAgZnVuY3Rpb24gY3JlYXRlX2RlZmF1bHRfc2xvdF81JDEoY3R4KSB7CiAgICAJbGV0IHQwX3ZhbHVlID0gLypvcHRpb24qLyBjdHhbMTRdLnRpdGxlICsgIiI7CiAgICAJbGV0IHQwOwogICAgCWxldCB0MTsKICAgIAlsZXQgaWZfYmxvY2tfYW5jaG9yOwogICAgCWxldCBpZl9ibG9jayA9IC8qb3B0aW9uKi8gY3R4WzE0XS5yYW5nZSAhPT0gbnVsbCAmJiBjcmVhdGVfaWZfYmxvY2tfMiQzKGN0eCk7CgogICAgCWNvbnN0IGJsb2NrID0gewogICAgCQljOiBmdW5jdGlvbiBjcmVhdGUoKSB7CiAgICAJCQl0MCA9IHRleHQodDBfdmFsdWUpOwogICAgCQkJdDEgPSBzcGFjZSgpOwogICAgCQkJaWYgKGlmX2Jsb2NrKSBpZl9ibG9jay5jKCk7CiAgICAJCQlpZl9ibG9ja19hbmNob3IgPSBlbXB0eSgpOwogICAgCQl9LAogICAgCQltOiBmdW5jdGlvbiBtb3VudCh0YXJnZXQsIGFuY2hvcikgewogICAgCQkJaW5zZXJ0X2Rldih0YXJnZXQsIHQwLCBhbmNob3IpOwogICAgCQkJaW5zZXJ0X2Rldih0YXJnZXQsIHQxLCBhbmNob3IpOwogICAgCQkJaWYgKGlmX2Jsb2NrKSBpZl9ibG9jay5tKHRhcmdldCwgYW5jaG9yKTsKICAgIAkJCWluc2VydF9kZXYodGFyZ2V0LCBpZl9ibG9ja19hbmNob3IsIGFuY2hvcik7CiAgICAJCX0sCiAgICAJCXA6IGZ1bmN0aW9uIHVwZGF0ZShjdHgsIGRpcnR5KSB7CiAgICAJCQlpZiAoZGlydHkgJiAvKm9wdGlvbnMqLyAyICYmIHQwX3ZhbHVlICE9PSAodDBfdmFsdWUgPSAvKm9wdGlvbiovIGN0eFsxNF0udGl0bGUgKyAiIikpIHNldF9kYXRhX2Rldih0MCwgdDBfdmFsdWUpOwoKICAgIAkJCWlmICgvKm9wdGlvbiovIGN0eFsxNF0ucmFuZ2UgIT09IG51bGwpIHsKICAgIAkJCQlpZiAoaWZfYmxvY2spIHsKICAgIAkJCQkJaWZfYmxvY2sucChjdHgsIGRpcnR5KTsKICAgIAkJCQl9IGVsc2UgewogICAgCQkJCQlpZl9ibG9jayA9IGNyZWF0ZV9pZl9ibG9ja18yJDMoY3R4KTsKICAgIAkJCQkJaWZfYmxvY2suYygpOwogICAgCQkJCQlpZl9ibG9jay5tKGlmX2Jsb2NrX2FuY2hvci5wYXJlbnROb2RlLCBpZl9ibG9ja19hbmNob3IpOwogICAgCQkJCX0KICAgIAkJCX0gZWxzZSBpZiAoaWZfYmxvY2spIHsKICAgIAkJCQlpZl9ibG9jay5kKDEpOwogICAgCQkJCWlmX2Jsb2NrID0gbnVsbDsKICAgIAkJCX0KICAgIAkJfSwKICAgIAkJZDogZnVuY3Rpb24gZGVzdHJveShkZXRhY2hpbmcpIHsKICAgIAkJCWlmIChkZXRhY2hpbmcpIGRldGFjaF9kZXYodDApOwogICAgCQkJaWYgKGRldGFjaGluZykgZGV0YWNoX2Rldih0MSk7CiAgICAJCQlpZiAoaWZfYmxvY2spIGlmX2Jsb2NrLmQoZGV0YWNoaW5nKTsKICAgIAkJCWlmIChkZXRhY2hpbmcpIGRldGFjaF9kZXYoaWZfYmxvY2tfYW5jaG9yKTsKICAgIAkJfQogICAgCX07CgogICAgCWRpc3BhdGNoX2RldigiU3ZlbHRlUmVnaXN0ZXJCbG9jayIsIHsKICAgIAkJYmxvY2ssCiAgICAJCWlkOiBjcmVhdGVfZGVmYXVsdF9zbG90XzUkMS5uYW1lLAogICAgCQl0eXBlOiAic2xvdCIsCiAgICAJCXNvdXJjZTogIig3NjoyNCkgPExhYmVsIGZvcj17b3B0aW9uLm5hbWV9PiIsCiAgICAJCWN0eAogICAgCX0pOwoKICAgIAlyZXR1cm4gYmxvY2s7CiAgICB9CgogICAgLy8gKDcxOjI0KSA8TGFiZWwgZm9yPXtvcHRpb24ubmFtZX0gY2hlY2s+CiAgICBmdW5jdGlvbiBjcmVhdGVfZGVmYXVsdF9zbG90XzQkMShjdHgpIHsKICAgIAlsZXQgaW5wdXQ7CiAgICAJbGV0IHVwZGF0aW5nX2NoZWNrZWQ7CiAgICAJbGV0IHQwOwogICAgCWxldCB0MV92YWx1ZSA9IC8qb3B0aW9uKi8gY3R4WzE0XS50aXRsZSArICIiOwogICAgCWxldCB0MTsKICAgIAlsZXQgY3VycmVudDsKCiAgICAJZnVuY3Rpb24gaW5wdXRfY2hlY2tlZF9iaW5kaW5nKHZhbHVlKSB7CiAgICAJCS8qaW5wdXRfY2hlY2tlZF9iaW5kaW5nKi8gY3R4WzZdLmNhbGwobnVsbCwgdmFsdWUsIC8qb3B0aW9uKi8gY3R4WzE0XSk7CiAgICAJfQoKICAgIAlsZXQgaW5wdXRfcHJvcHMgPSB7CiAgICAJCWlkOiAvKm9wdGlvbiovIGN0eFsxNF0ubmFtZSwKICAgIAkJcGxhY2Vob2xkZXI6IC8qb3B0aW9uKi8gY3R4WzE0XS5kZXNjcmlwdGlvbiwKICAgIAkJdHlwZTogImNoZWNrYm94IgogICAgCX07CgogICAgCWlmICgvKnNldHRpbmdzKi8gY3R4WzBdWy8qb3B0aW9uKi8gY3R4WzE0XS5uYW1lXSAhPT0gdm9pZCAwKSB7CiAgICAJCWlucHV0X3Byb3BzLmNoZWNrZWQgPSAvKnNldHRpbmdzKi8gY3R4WzBdWy8qb3B0aW9uKi8gY3R4WzE0XS5uYW1lXTsKICAgIAl9CgogICAgCWlucHV0ID0gbmV3IElucHV0KHsgcHJvcHM6IGlucHV0X3Byb3BzLCAkJGlubGluZTogdHJ1ZSB9KTsKICAgIAliaW5kaW5nX2NhbGxiYWNrcy5wdXNoKCgpID0+IGJpbmQoaW5wdXQsICJjaGVja2VkIiwgaW5wdXRfY2hlY2tlZF9iaW5kaW5nKSk7CgogICAgCWNvbnN0IGJsb2NrID0gewogICAgCQljOiBmdW5jdGlvbiBjcmVhdGUoKSB7CiAgICAJCQljcmVhdGVfY29tcG9uZW50KGlucHV0LiQkLmZyYWdtZW50KTsKICAgIAkJCXQwID0gc3BhY2UoKTsKICAgIAkJCXQxID0gdGV4dCh0MV92YWx1ZSk7CiAgICAJCX0sCiAgICAJCW06IGZ1bmN0aW9uIG1vdW50KHRhcmdldCwgYW5jaG9yKSB7CiAgICAJCQltb3VudF9jb21wb25lbnQoaW5wdXQsIHRhcmdldCwgYW5jaG9yKTsKICAgIAkJCWluc2VydF9kZXYodGFyZ2V0LCB0MCwgYW5jaG9yKTsKICAgIAkJCWluc2VydF9kZXYodGFyZ2V0LCB0MSwgYW5jaG9yKTsKICAgIAkJCWN1cnJlbnQgPSB0cnVlOwogICAgCQl9LAogICAgCQlwOiBmdW5jdGlvbiB1cGRhdGUobmV3X2N0eCwgZGlydHkpIHsKICAgIAkJCWN0eCA9IG5ld19jdHg7CiAgICAJCQljb25zdCBpbnB1dF9jaGFuZ2VzID0ge307CiAgICAJCQlpZiAoZGlydHkgJiAvKm9wdGlvbnMqLyAyKSBpbnB1dF9jaGFuZ2VzLmlkID0gLypvcHRpb24qLyBjdHhbMTRdLm5hbWU7CiAgICAJCQlpZiAoZGlydHkgJiAvKm9wdGlvbnMqLyAyKSBpbnB1dF9jaGFuZ2VzLnBsYWNlaG9sZGVyID0gLypvcHRpb24qLyBjdHhbMTRdLmRlc2NyaXB0aW9uOwoKICAgIAkJCWlmICghdXBkYXRpbmdfY2hlY2tlZCAmJiBkaXJ0eSAmIC8qc2V0dGluZ3MsIG9wdGlvbnMqLyAzKSB7CiAgICAJCQkJdXBkYXRpbmdfY2hlY2tlZCA9IHRydWU7CiAgICAJCQkJaW5wdXRfY2hhbmdlcy5jaGVja2VkID0gLypzZXR0aW5ncyovIGN0eFswXVsvKm9wdGlvbiovIGN0eFsxNF0ubmFtZV07CiAgICAJCQkJYWRkX2ZsdXNoX2NhbGxiYWNrKCgpID0+IHVwZGF0aW5nX2NoZWNrZWQgPSBmYWxzZSk7CiAgICAJCQl9CgogICAgCQkJaW5wdXQuJHNldChpbnB1dF9jaGFuZ2VzKTsKICAgIAkJCWlmICgoIWN1cnJlbnQgfHwgZGlydHkgJiAvKm9wdGlvbnMqLyAyKSAmJiB0MV92YWx1ZSAhPT0gKHQxX3ZhbHVlID0gLypvcHRpb24qLyBjdHhbMTRdLnRpdGxlICsgIiIpKSBzZXRfZGF0YV9kZXYodDEsIHQxX3ZhbHVlKTsKICAgIAkJfSwKICAgIAkJaTogZnVuY3Rpb24gaW50cm8obG9jYWwpIHsKICAgIAkJCWlmIChjdXJyZW50KSByZXR1cm47CiAgICAJCQl0cmFuc2l0aW9uX2luKGlucHV0LiQkLmZyYWdtZW50LCBsb2NhbCk7CiAgICAJCQljdXJyZW50ID0gdHJ1ZTsKICAgIAkJfSwKICAgIAkJbzogZnVuY3Rpb24gb3V0cm8obG9jYWwpIHsKICAgIAkJCXRyYW5zaXRpb25fb3V0KGlucHV0LiQkLmZyYWdtZW50LCBsb2NhbCk7CiAgICAJCQljdXJyZW50ID0gZmFsc2U7CiAgICAJCX0sCiAgICAJCWQ6IGZ1bmN0aW9uIGRlc3Ryb3koZGV0YWNoaW5nKSB7CiAgICAJCQlkZXN0cm95X2NvbXBvbmVudChpbnB1dCwgZGV0YWNoaW5nKTsKICAgIAkJCWlmIChkZXRhY2hpbmcpIGRldGFjaF9kZXYodDApOwogICAgCQkJaWYgKGRldGFjaGluZykgZGV0YWNoX2Rldih0MSk7CiAgICAJCX0KICAgIAl9OwoKICAgIAlkaXNwYXRjaF9kZXYoIlN2ZWx0ZVJlZ2lzdGVyQmxvY2siLCB7CiAgICAJCWJsb2NrLAogICAgCQlpZDogY3JlYXRlX2RlZmF1bHRfc2xvdF80JDEubmFtZSwKICAgIAkJdHlwZTogInNsb3QiLAogICAgCQlzb3VyY2U6ICIoNzE6MjQpIDxMYWJlbCBmb3I9e29wdGlvbi5uYW1lfSBjaGVjaz4iLAogICAgCQljdHgKICAgIAl9KTsKCiAgICAJcmV0dXJuIGJsb2NrOwogICAgfQoKICAgIC8vICg2OToxNikgPEZvcm1Hcm91cD4KICAgIGZ1bmN0aW9uIGNyZWF0ZV9kZWZhdWx0X3Nsb3RfMyQxKGN0eCkgewogICAgCWxldCBjdXJyZW50X2Jsb2NrX3R5cGVfaW5kZXg7CiAgICAJbGV0IGlmX2Jsb2NrOwogICAgCWxldCB0OwogICAgCWxldCBjdXJyZW50OwoKICAgIAljb25zdCBpZl9ibG9ja19jcmVhdG9ycyA9IFsKICAgIAkJY3JlYXRlX2lmX2Jsb2NrJDYsCiAgICAJCWNyZWF0ZV9pZl9ibG9ja18xJDQsCiAgICAJCWNyZWF0ZV9pZl9ibG9ja18zJDMsCiAgICAJCWNyZWF0ZV9pZl9ibG9ja180JDEsCiAgICAJCWNyZWF0ZV9lbHNlX2Jsb2NrJDYKICAgIAldOwoKICAgIAljb25zdCBpZl9ibG9ja3MgPSBbXTsKCiAgICAJZnVuY3Rpb24gc2VsZWN0X2Jsb2NrX3R5cGUoY3R4LCBkaXJ0eSkgewogICAgCQlpZiAoLypvcHRpb24qLyBjdHhbMTRdLnR5cGUgPT09IDApIHJldHVybiAwOwogICAgCQlpZiAoKC8qb3B0aW9uKi8gY3R4WzE0XS50eXBlID09PSAxIHx8IC8qb3B0aW9uKi8gY3R4WzE0XS50eXBlID09PSAyKSAmJiAvKm9wdGlvbiovIGN0eFsxNF0uc2V0ID09PSBudWxsKSByZXR1cm4gMTsKICAgIAkJaWYgKC8qb3B0aW9uKi8gY3R4WzE0XS50eXBlID09PSAzICYmIC8qb3B0aW9uKi8gY3R4WzE0XS5zZXQgPT09IG51bGwpIHJldHVybiAyOwogICAgCQlpZiAoLypvcHRpb24qLyBjdHhbMTRdLnNldCAhPT0gbnVsbCkgcmV0dXJuIDM7CiAgICAJCXJldHVybiA0OwogICAgCX0KCiAgICAJY3VycmVudF9ibG9ja190eXBlX2luZGV4ID0gc2VsZWN0X2Jsb2NrX3R5cGUoY3R4KTsKICAgIAlpZl9ibG9jayA9IGlmX2Jsb2Nrc1tjdXJyZW50X2Jsb2NrX3R5cGVfaW5kZXhdID0gaWZfYmxvY2tfY3JlYXRvcnNbY3VycmVudF9ibG9ja190eXBlX2luZGV4XShjdHgpOwoKICAgIAljb25zdCBibG9jayA9IHsKICAgIAkJYzogZnVuY3Rpb24gY3JlYXRlKCkgewogICAgCQkJaWZfYmxvY2suYygpOwogICAgCQkJdCA9IHNwYWNlKCk7CiAgICAJCX0sCiAgICAJCW06IGZ1bmN0aW9uIG1vdW50KHRhcmdldCwgYW5jaG9yKSB7CiAgICAJCQlpZl9ibG9ja3NbY3VycmVudF9ibG9ja190eXBlX2luZGV4XS5tKHRhcmdldCwgYW5jaG9yKTsKICAgIAkJCWluc2VydF9kZXYodGFyZ2V0LCB0LCBhbmNob3IpOwogICAgCQkJY3VycmVudCA9IHRydWU7CiAgICAJCX0sCiAgICAJCXA6IGZ1bmN0aW9uIHVwZGF0ZShjdHgsIGRpcnR5KSB7CiAgICAJCQlsZXQgcHJldmlvdXNfYmxvY2tfaW5kZXggPSBjdXJyZW50X2Jsb2NrX3R5cGVfaW5kZXg7CiAgICAJCQljdXJyZW50X2Jsb2NrX3R5cGVfaW5kZXggPSBzZWxlY3RfYmxvY2tfdHlwZShjdHgpOwoKICAgIAkJCWlmIChjdXJyZW50X2Jsb2NrX3R5cGVfaW5kZXggPT09IHByZXZpb3VzX2Jsb2NrX2luZGV4KSB7CiAgICAJCQkJaWZfYmxvY2tzW2N1cnJlbnRfYmxvY2tfdHlwZV9pbmRleF0ucChjdHgsIGRpcnR5KTsKICAgIAkJCX0gZWxzZSB7CiAgICAJCQkJZ3JvdXBfb3V0cm9zKCk7CgogICAgCQkJCXRyYW5zaXRpb25fb3V0KGlmX2Jsb2Nrc1twcmV2aW91c19ibG9ja19pbmRleF0sIDEsIDEsICgpID0+IHsKICAgIAkJCQkJaWZfYmxvY2tzW3ByZXZpb3VzX2Jsb2NrX2luZGV4XSA9IG51bGw7CiAgICAJCQkJfSk7CgogICAgCQkJCWNoZWNrX291dHJvcygpOwogICAgCQkJCWlmX2Jsb2NrID0gaWZfYmxvY2tzW2N1cnJlbnRfYmxvY2tfdHlwZV9pbmRleF07CgogICAgCQkJCWlmICghaWZfYmxvY2spIHsKICAgIAkJCQkJaWZfYmxvY2sgPSBpZl9ibG9ja3NbY3VycmVudF9ibG9ja190eXBlX2luZGV4XSA9IGlmX2Jsb2NrX2NyZWF0b3JzW2N1cnJlbnRfYmxvY2tfdHlwZV9pbmRleF0oY3R4KTsKICAgIAkJCQkJaWZfYmxvY2suYygpOwogICAgCQkJCX0gZWxzZSB7CiAgICAJCQkJCWlmX2Jsb2NrLnAoY3R4LCBkaXJ0eSk7CiAgICAJCQkJfQoKICAgIAkJCQl0cmFuc2l0aW9uX2luKGlmX2Jsb2NrLCAxKTsKICAgIAkJCQlpZl9ibG9jay5tKHQucGFyZW50Tm9kZSwgdCk7CiAgICAJCQl9CiAgICAJCX0sCiAgICAJCWk6IGZ1bmN0aW9uIGludHJvKGxvY2FsKSB7CiAgICAJCQlpZiAoY3VycmVudCkgcmV0dXJuOwogICAgCQkJdHJhbnNpdGlvbl9pbihpZl9ibG9jayk7CiAgICAJCQljdXJyZW50ID0gdHJ1ZTsKICAgIAkJfSwKICAgIAkJbzogZnVuY3Rpb24gb3V0cm8obG9jYWwpIHsKICAgIAkJCXRyYW5zaXRpb25fb3V0KGlmX2Jsb2NrKTsKICAgIAkJCWN1cnJlbnQgPSBmYWxzZTsKICAgIAkJfSwKICAgIAkJZDogZnVuY3Rpb24gZGVzdHJveShkZXRhY2hpbmcpIHsKICAgIAkJCWlmX2Jsb2Nrc1tjdXJyZW50X2Jsb2NrX3R5cGVfaW5kZXhdLmQoZGV0YWNoaW5nKTsKICAgIAkJCWlmIChkZXRhY2hpbmcpIGRldGFjaF9kZXYodCk7CiAgICAJCX0KICAgIAl9OwoKICAgIAlkaXNwYXRjaF9kZXYoIlN2ZWx0ZVJlZ2lzdGVyQmxvY2siLCB7CiAgICAJCWJsb2NrLAogICAgCQlpZDogY3JlYXRlX2RlZmF1bHRfc2xvdF8zJDEubmFtZSwKICAgIAkJdHlwZTogInNsb3QiLAogICAgCQlzb3VyY2U6ICIoNjk6MTYpIDxGb3JtR3JvdXA+IiwKICAgIAkJY3R4CiAgICAJfSk7CgogICAgCXJldHVybiBibG9jazsKICAgIH0KCiAgICAvLyAoNjg6MTIpIHsjZWFjaCBvcHRpb25zIGFzIG9wdGlvbn0KICAgIGZ1bmN0aW9uIGNyZWF0ZV9lYWNoX2Jsb2NrJDEoY3R4KSB7CiAgICAJbGV0IGZvcm1ncm91cDsKICAgIAlsZXQgY3VycmVudDsKCiAgICAJZm9ybWdyb3VwID0gbmV3IEZvcm1Hcm91cCh7CiAgICAJCQlwcm9wczogewogICAgCQkJCSQkc2xvdHM6IHsgZGVmYXVsdDogW2NyZWF0ZV9kZWZhdWx0X3Nsb3RfMyQxXSB9LAogICAgCQkJCSQkc2NvcGU6IHsgY3R4IH0KICAgIAkJCX0sCiAgICAJCQkkJGlubGluZTogdHJ1ZQogICAgCQl9KTsKCiAgICAJY29uc3QgYmxvY2sgPSB7CiAgICAJCWM6IGZ1bmN0aW9uIGNyZWF0ZSgpIHsKICAgIAkJCWNyZWF0ZV9jb21wb25lbnQoZm9ybWdyb3VwLiQkLmZyYWdtZW50KTsKICAgIAkJfSwKICAgIAkJbTogZnVuY3Rpb24gbW91bnQodGFyZ2V0LCBhbmNob3IpIHsKICAgIAkJCW1vdW50X2NvbXBvbmVudChmb3JtZ3JvdXAsIHRhcmdldCwgYW5jaG9yKTsKICAgIAkJCWN1cnJlbnQgPSB0cnVlOwogICAgCQl9LAogICAgCQlwOiBmdW5jdGlvbiB1cGRhdGUoY3R4LCBkaXJ0eSkgewogICAgCQkJY29uc3QgZm9ybWdyb3VwX2NoYW5nZXMgPSB7fTsKCiAgICAJCQlpZiAoZGlydHkgJiAvKiQkc2NvcGUsIG9wdGlvbnMsIHNldHRpbmdzKi8gMTA0ODU3OSkgewogICAgCQkJCWZvcm1ncm91cF9jaGFuZ2VzLiQkc2NvcGUgPSB7IGRpcnR5LCBjdHggfTsKICAgIAkJCX0KCiAgICAJCQlmb3JtZ3JvdXAuJHNldChmb3JtZ3JvdXBfY2hhbmdlcyk7CiAgICAJCX0sCiAgICAJCWk6IGZ1bmN0aW9uIGludHJvKGxvY2FsKSB7CiAgICAJCQlpZiAoY3VycmVudCkgcmV0dXJuOwogICAgCQkJdHJhbnNpdGlvbl9pbihmb3JtZ3JvdXAuJCQuZnJhZ21lbnQsIGxvY2FsKTsKICAgIAkJCWN1cnJlbnQgPSB0cnVlOwogICAgCQl9LAogICAgCQlvOiBmdW5jdGlvbiBvdXRybyhsb2NhbCkgewogICAgCQkJdHJhbnNpdGlvbl9vdXQoZm9ybWdyb3VwLiQkLmZyYWdtZW50LCBsb2NhbCk7CiAgICAJCQljdXJyZW50ID0gZmFsc2U7CiAgICAJCX0sCiAgICAJCWQ6IGZ1bmN0aW9uIGRlc3Ryb3koZGV0YWNoaW5nKSB7CiAgICAJCQlkZXN0cm95X2NvbXBvbmVudChmb3JtZ3JvdXAsIGRldGFjaGluZyk7CiAgICAJCX0KICAgIAl9OwoKICAgIAlkaXNwYXRjaF9kZXYoIlN2ZWx0ZVJlZ2lzdGVyQmxvY2siLCB7CiAgICAJCWJsb2NrLAogICAgCQlpZDogY3JlYXRlX2VhY2hfYmxvY2skMS5uYW1lLAogICAgCQl0eXBlOiAiZWFjaCIsCiAgICAJCXNvdXJjZTogIig2ODoxMikgeyNlYWNoIG9wdGlvbnMgYXMgb3B0aW9ufSIsCiAgICAJCWN0eAogICAgCX0pOwoKICAgIAlyZXR1cm4gYmxvY2s7CiAgICB9CgogICAgLy8gKDY3OjgpIDxGb3JtPgogICAgZnVuY3Rpb24gY3JlYXRlX2RlZmF1bHRfc2xvdF8yJDEoY3R4KSB7CiAgICAJbGV0IGVhY2hfMV9hbmNob3I7CiAgICAJbGV0IGN1cnJlbnQ7CiAgICAJbGV0IGVhY2hfdmFsdWUgPSAvKm9wdGlvbnMqLyBjdHhbMV07CiAgICAJdmFsaWRhdGVfZWFjaF9hcmd1bWVudChlYWNoX3ZhbHVlKTsKICAgIAlsZXQgZWFjaF9ibG9ja3MgPSBbXTsKCiAgICAJZm9yIChsZXQgaSA9IDA7IGkgPCBlYWNoX3ZhbHVlLmxlbmd0aDsgaSArPSAxKSB7CiAgICAJCWVhY2hfYmxvY2tzW2ldID0gY3JlYXRlX2VhY2hfYmxvY2skMShnZXRfZWFjaF9jb250ZXh0JDEoY3R4LCBlYWNoX3ZhbHVlLCBpKSk7CiAgICAJfQoKICAgIAljb25zdCBvdXQgPSBpID0+IHRyYW5zaXRpb25fb3V0KGVhY2hfYmxvY2tzW2ldLCAxLCAxLCAoKSA9PiB7CiAgICAJCWVhY2hfYmxvY2tzW2ldID0gbnVsbDsKICAgIAl9KTsKCiAgICAJY29uc3QgYmxvY2sgPSB7CiAgICAJCWM6IGZ1bmN0aW9uIGNyZWF0ZSgpIHsKICAgIAkJCWZvciAobGV0IGkgPSAwOyBpIDwgZWFjaF9ibG9ja3MubGVuZ3RoOyBpICs9IDEpIHsKICAgIAkJCQllYWNoX2Jsb2Nrc1tpXS5jKCk7CiAgICAJCQl9CgogICAgCQkJZWFjaF8xX2FuY2hvciA9IGVtcHR5KCk7CiAgICAJCX0sCiAgICAJCW06IGZ1bmN0aW9uIG1vdW50KHRhcmdldCwgYW5jaG9yKSB7CiAgICAJCQlmb3IgKGxldCBpID0gMDsgaSA8IGVhY2hfYmxvY2tzLmxlbmd0aDsgaSArPSAxKSB7CiAgICAJCQkJZWFjaF9ibG9ja3NbaV0ubSh0YXJnZXQsIGFuY2hvcik7CiAgICAJCQl9CgogICAgCQkJaW5zZXJ0X2Rldih0YXJnZXQsIGVhY2hfMV9hbmNob3IsIGFuY2hvcik7CiAgICAJCQljdXJyZW50ID0gdHJ1ZTsKICAgIAkJfSwKICAgIAkJcDogZnVuY3Rpb24gdXBkYXRlKGN0eCwgZGlydHkpIHsKICAgIAkJCWlmIChkaXJ0eSAmIC8qb3B0aW9ucywgc2V0dGluZ3MqLyAzKSB7CiAgICAJCQkJZWFjaF92YWx1ZSA9IC8qb3B0aW9ucyovIGN0eFsxXTsKICAgIAkJCQl2YWxpZGF0ZV9lYWNoX2FyZ3VtZW50KGVhY2hfdmFsdWUpOwogICAgCQkJCWxldCBpOwoKICAgIAkJCQlmb3IgKGkgPSAwOyBpIDwgZWFjaF92YWx1ZS5sZW5ndGg7IGkgKz0gMSkgewogICAgCQkJCQljb25zdCBjaGlsZF9jdHggPSBnZXRfZWFjaF9jb250ZXh0JDEoY3R4LCBlYWNoX3ZhbHVlLCBpKTsKCiAgICAJCQkJCWlmIChlYWNoX2Jsb2Nrc1tpXSkgewogICAgCQkJCQkJZWFjaF9ibG9ja3NbaV0ucChjaGlsZF9jdHgsIGRpcnR5KTsKICAgIAkJCQkJCXRyYW5zaXRpb25faW4oZWFjaF9ibG9ja3NbaV0sIDEpOwogICAgCQkJCQl9IGVsc2UgewogICAgCQkJCQkJZWFjaF9ibG9ja3NbaV0gPSBjcmVhdGVfZWFjaF9ibG9jayQxKGNoaWxkX2N0eCk7CiAgICAJCQkJCQllYWNoX2Jsb2Nrc1tpXS5jKCk7CiAgICAJCQkJCQl0cmFuc2l0aW9uX2luKGVhY2hfYmxvY2tzW2ldLCAxKTsKICAgIAkJCQkJCWVhY2hfYmxvY2tzW2ldLm0oZWFjaF8xX2FuY2hvci5wYXJlbnROb2RlLCBlYWNoXzFfYW5jaG9yKTsKICAgIAkJCQkJfQogICAgCQkJCX0KCiAgICAJCQkJZ3JvdXBfb3V0cm9zKCk7CgogICAgCQkJCWZvciAoaSA9IGVhY2hfdmFsdWUubGVuZ3RoOyBpIDwgZWFjaF9ibG9ja3MubGVuZ3RoOyBpICs9IDEpIHsKICAgIAkJCQkJb3V0KGkpOwogICAgCQkJCX0KCiAgICAJCQkJY2hlY2tfb3V0cm9zKCk7CiAgICAJCQl9CiAgICAJCX0sCiAgICAJCWk6IGZ1bmN0aW9uIGludHJvKGxvY2FsKSB7CiAgICAJCQlpZiAoY3VycmVudCkgcmV0dXJuOwoKICAgIAkJCWZvciAobGV0IGkgPSAwOyBpIDwgZWFjaF92YWx1ZS5sZW5ndGg7IGkgKz0gMSkgewogICAgCQkJCXRyYW5zaXRpb25faW4oZWFjaF9ibG9ja3NbaV0pOwogICAgCQkJfQoKICAgIAkJCWN1cnJlbnQgPSB0cnVlOwogICAgCQl9LAogICAgCQlvOiBmdW5jdGlvbiBvdXRybyhsb2NhbCkgewogICAgCQkJZWFjaF9ibG9ja3MgPSBlYWNoX2Jsb2Nrcy5maWx0ZXIoQm9vbGVhbik7CgogICAgCQkJZm9yIChsZXQgaSA9IDA7IGkgPCBlYWNoX2Jsb2Nrcy5sZW5ndGg7IGkgKz0gMSkgewogICAgCQkJCXRyYW5zaXRpb25fb3V0KGVhY2hfYmxvY2tzW2ldKTsKICAgIAkJCX0KCiAgICAJCQljdXJyZW50ID0gZmFsc2U7CiAgICAJCX0sCiAgICAJCWQ6IGZ1bmN0aW9uIGRlc3Ryb3koZGV0YWNoaW5nKSB7CiAgICAJCQlkZXN0cm95X2VhY2goZWFjaF9ibG9ja3MsIGRldGFjaGluZyk7CiAgICAJCQlpZiAoZGV0YWNoaW5nKSBkZXRhY2hfZGV2KGVhY2hfMV9hbmNob3IpOwogICAgCQl9CiAgICAJfTsKCiAgICAJZGlzcGF0Y2hfZGV2KCJTdmVsdGVSZWdpc3RlckJsb2NrIiwgewogICAgCQlibG9jaywKICAgIAkJaWQ6IGNyZWF0ZV9kZWZhdWx0X3Nsb3RfMiQxLm5hbWUsCiAgICAJCXR5cGU6ICJzbG90IiwKICAgIAkJc291cmNlOiAiKDY3OjgpIDxGb3JtPiIsCiAgICAJCWN0eAogICAgCX0pOwoKICAgIAlyZXR1cm4gYmxvY2s7CiAgICB9CgogICAgLy8gKDY1OjQpIDxDb2w+CiAgICBmdW5jdGlvbiBjcmVhdGVfZGVmYXVsdF9zbG90XzEkMihjdHgpIHsKICAgIAlsZXQgc3Bpbm5lcjsKICAgIAlsZXQgdDsKICAgIAlsZXQgZm9ybTsKICAgIAlsZXQgY3VycmVudDsKCiAgICAJc3Bpbm5lciA9IG5ldyBTcGlubmVyKHsKICAgIAkJCXByb3BzOiB7IGNsYXNzOiAvKnNwaW5uZXJDbGFzcyovIGN0eFszXSB9LAogICAgCQkJJCRpbmxpbmU6IHRydWUKICAgIAkJfSk7CgogICAgCWZvcm0gPSBuZXcgRm9ybSh7CiAgICAJCQlwcm9wczogewogICAgCQkJCSQkc2xvdHM6IHsgZGVmYXVsdDogW2NyZWF0ZV9kZWZhdWx0X3Nsb3RfMiQxXSB9LAogICAgCQkJCSQkc2NvcGU6IHsgY3R4IH0KICAgIAkJCX0sCiAgICAJCQkkJGlubGluZTogdHJ1ZQogICAgCQl9KTsKCiAgICAJY29uc3QgYmxvY2sgPSB7CiAgICAJCWM6IGZ1bmN0aW9uIGNyZWF0ZSgpIHsKICAgIAkJCWNyZWF0ZV9jb21wb25lbnQoc3Bpbm5lci4kJC5mcmFnbWVudCk7CiAgICAJCQl0ID0gc3BhY2UoKTsKICAgIAkJCWNyZWF0ZV9jb21wb25lbnQoZm9ybS4kJC5mcmFnbWVudCk7CiAgICAJCX0sCiAgICAJCW06IGZ1bmN0aW9uIG1vdW50KHRhcmdldCwgYW5jaG9yKSB7CiAgICAJCQltb3VudF9jb21wb25lbnQoc3Bpbm5lciwgdGFyZ2V0LCBhbmNob3IpOwogICAgCQkJaW5zZXJ0X2Rldih0YXJnZXQsIHQsIGFuY2hvcik7CiAgICAJCQltb3VudF9jb21wb25lbnQoZm9ybSwgdGFyZ2V0LCBhbmNob3IpOwogICAgCQkJY3VycmVudCA9IHRydWU7CiAgICAJCX0sCiAgICAJCXA6IGZ1bmN0aW9uIHVwZGF0ZShjdHgsIGRpcnR5KSB7CiAgICAJCQljb25zdCBzcGlubmVyX2NoYW5nZXMgPSB7fTsKICAgIAkJCWlmIChkaXJ0eSAmIC8qc3Bpbm5lckNsYXNzKi8gOCkgc3Bpbm5lcl9jaGFuZ2VzLmNsYXNzID0gLypzcGlubmVyQ2xhc3MqLyBjdHhbM107CiAgICAJCQlzcGlubmVyLiRzZXQoc3Bpbm5lcl9jaGFuZ2VzKTsKICAgIAkJCWNvbnN0IGZvcm1fY2hhbmdlcyA9IHt9OwoKICAgIAkJCWlmIChkaXJ0eSAmIC8qJCRzY29wZSwgb3B0aW9ucywgc2V0dGluZ3MqLyAxMDQ4NTc5KSB7CiAgICAJCQkJZm9ybV9jaGFuZ2VzLiQkc2NvcGUgPSB7IGRpcnR5LCBjdHggfTsKICAgIAkJCX0KCiAgICAJCQlmb3JtLiRzZXQoZm9ybV9jaGFuZ2VzKTsKICAgIAkJfSwKICAgIAkJaTogZnVuY3Rpb24gaW50cm8obG9jYWwpIHsKICAgIAkJCWlmIChjdXJyZW50KSByZXR1cm47CiAgICAJCQl0cmFuc2l0aW9uX2luKHNwaW5uZXIuJCQuZnJhZ21lbnQsIGxvY2FsKTsKICAgIAkJCXRyYW5zaXRpb25faW4oZm9ybS4kJC5mcmFnbWVudCwgbG9jYWwpOwogICAgCQkJY3VycmVudCA9IHRydWU7CiAgICAJCX0sCiAgICAJCW86IGZ1bmN0aW9uIG91dHJvKGxvY2FsKSB7CiAgICAJCQl0cmFuc2l0aW9uX291dChzcGlubmVyLiQkLmZyYWdtZW50LCBsb2NhbCk7CiAgICAJCQl0cmFuc2l0aW9uX291dChmb3JtLiQkLmZyYWdtZW50LCBsb2NhbCk7CiAgICAJCQljdXJyZW50ID0gZmFsc2U7CiAgICAJCX0sCiAgICAJCWQ6IGZ1bmN0aW9uIGRlc3Ryb3koZGV0YWNoaW5nKSB7CiAgICAJCQlkZXN0cm95X2NvbXBvbmVudChzcGlubmVyLCBkZXRhY2hpbmcpOwogICAgCQkJaWYgKGRldGFjaGluZykgZGV0YWNoX2Rldih0KTsKICAgIAkJCWRlc3Ryb3lfY29tcG9uZW50KGZvcm0sIGRldGFjaGluZyk7CiAgICAJCX0KICAgIAl9OwoKICAgIAlkaXNwYXRjaF9kZXYoIlN2ZWx0ZVJlZ2lzdGVyQmxvY2siLCB7CiAgICAJCWJsb2NrLAogICAgCQlpZDogY3JlYXRlX2RlZmF1bHRfc2xvdF8xJDIubmFtZSwKICAgIAkJdHlwZTogInNsb3QiLAogICAgCQlzb3VyY2U6ICIoNjU6NCkgPENvbD4iLAogICAgCQljdHgKICAgIAl9KTsKCiAgICAJcmV0dXJuIGJsb2NrOwogICAgfQoKICAgIC8vICg2NDowKSA8Um93IGNsYXNzPXttYWluUm93Q2xhc3N9PgogICAgZnVuY3Rpb24gY3JlYXRlX2RlZmF1bHRfc2xvdCQyKGN0eCkgewogICAgCWxldCBjb2w7CiAgICAJbGV0IGN1cnJlbnQ7CgogICAgCWNvbCA9IG5ldyBDb2woewogICAgCQkJcHJvcHM6IHsKICAgIAkJCQkkJHNsb3RzOiB7IGRlZmF1bHQ6IFtjcmVhdGVfZGVmYXVsdF9zbG90XzEkMl0gfSwKICAgIAkJCQkkJHNjb3BlOiB7IGN0eCB9CiAgICAJCQl9LAogICAgCQkJJCRpbmxpbmU6IHRydWUKICAgIAkJfSk7CgogICAgCWNvbnN0IGJsb2NrID0gewogICAgCQljOiBmdW5jdGlvbiBjcmVhdGUoKSB7CiAgICAJCQljcmVhdGVfY29tcG9uZW50KGNvbC4kJC5mcmFnbWVudCk7CiAgICAJCX0sCiAgICAJCW06IGZ1bmN0aW9uIG1vdW50KHRhcmdldCwgYW5jaG9yKSB7CiAgICAJCQltb3VudF9jb21wb25lbnQoY29sLCB0YXJnZXQsIGFuY2hvcik7CiAgICAJCQljdXJyZW50ID0gdHJ1ZTsKICAgIAkJfSwKICAgIAkJcDogZnVuY3Rpb24gdXBkYXRlKGN0eCwgZGlydHkpIHsKICAgIAkJCWNvbnN0IGNvbF9jaGFuZ2VzID0ge307CgogICAgCQkJaWYgKGRpcnR5ICYgLyokJHNjb3BlLCBvcHRpb25zLCBzZXR0aW5ncywgc3Bpbm5lckNsYXNzKi8gMTA0ODU4NykgewogICAgCQkJCWNvbF9jaGFuZ2VzLiQkc2NvcGUgPSB7IGRpcnR5LCBjdHggfTsKICAgIAkJCX0KCiAgICAJCQljb2wuJHNldChjb2xfY2hhbmdlcyk7CiAgICAJCX0sCiAgICAJCWk6IGZ1bmN0aW9uIGludHJvKGxvY2FsKSB7CiAgICAJCQlpZiAoY3VycmVudCkgcmV0dXJuOwogICAgCQkJdHJhbnNpdGlvbl9pbihjb2wuJCQuZnJhZ21lbnQsIGxvY2FsKTsKICAgIAkJCWN1cnJlbnQgPSB0cnVlOwogICAgCQl9LAogICAgCQlvOiBmdW5jdGlvbiBvdXRybyhsb2NhbCkgewogICAgCQkJdHJhbnNpdGlvbl9vdXQoY29sLiQkLmZyYWdtZW50LCBsb2NhbCk7CiAgICAJCQljdXJyZW50ID0gZmFsc2U7CiAgICAJCX0sCiAgICAJCWQ6IGZ1bmN0aW9uIGRlc3Ryb3koZGV0YWNoaW5nKSB7CiAgICAJCQlkZXN0cm95X2NvbXBvbmVudChjb2wsIGRldGFjaGluZyk7CiAgICAJCX0KICAgIAl9OwoKICAgIAlkaXNwYXRjaF9kZXYoIlN2ZWx0ZVJlZ2lzdGVyQmxvY2siLCB7CiAgICAJCWJsb2NrLAogICAgCQlpZDogY3JlYXRlX2RlZmF1bHRfc2xvdCQyLm5hbWUsCiAgICAJCXR5cGU6ICJzbG90IiwKICAgIAkJc291cmNlOiAiKDY0OjApIDxSb3cgY2xhc3M9e21haW5Sb3dDbGFzc30+IiwKICAgIAkJY3R4CiAgICAJfSk7CgogICAgCXJldHVybiBibG9jazsKICAgIH0KCiAgICBmdW5jdGlvbiBjcmVhdGVfZnJhZ21lbnQkaShjdHgpIHsKICAgIAlsZXQgcm93OwogICAgCWxldCBjdXJyZW50OwoKICAgIAlyb3cgPSBuZXcgUm93KHsKICAgIAkJCXByb3BzOiB7CiAgICAJCQkJY2xhc3M6IC8qbWFpblJvd0NsYXNzKi8gY3R4WzJdLAogICAgCQkJCSQkc2xvdHM6IHsgZGVmYXVsdDogW2NyZWF0ZV9kZWZhdWx0X3Nsb3QkMl0gfSwKICAgIAkJCQkkJHNjb3BlOiB7IGN0eCB9CiAgICAJCQl9LAogICAgCQkJJCRpbmxpbmU6IHRydWUKICAgIAkJfSk7CgogICAgCWNvbnN0IGJsb2NrID0gewogICAgCQljOiBmdW5jdGlvbiBjcmVhdGUoKSB7CiAgICAJCQljcmVhdGVfY29tcG9uZW50KHJvdy4kJC5mcmFnbWVudCk7CiAgICAJCX0sCiAgICAJCWw6IGZ1bmN0aW9uIGNsYWltKG5vZGVzKSB7CiAgICAJCQl0aHJvdyBuZXcgRXJyb3IoIm9wdGlvbnMuaHlkcmF0ZSBvbmx5IHdvcmtzIGlmIHRoZSBjb21wb25lbnQgd2FzIGNvbXBpbGVkIHdpdGggdGhlIGBoeWRyYXRhYmxlOiB0cnVlYCBvcHRpb24iKTsKICAgIAkJfSwKICAgIAkJbTogZnVuY3Rpb24gbW91bnQodGFyZ2V0LCBhbmNob3IpIHsKICAgIAkJCW1vdW50X2NvbXBvbmVudChyb3csIHRhcmdldCwgYW5jaG9yKTsKICAgIAkJCWN1cnJlbnQgPSB0cnVlOwogICAgCQl9LAogICAgCQlwOiBmdW5jdGlvbiB1cGRhdGUoY3R4LCBbZGlydHldKSB7CiAgICAJCQljb25zdCByb3dfY2hhbmdlcyA9IHt9OwogICAgCQkJaWYgKGRpcnR5ICYgLyptYWluUm93Q2xhc3MqLyA0KSByb3dfY2hhbmdlcy5jbGFzcyA9IC8qbWFpblJvd0NsYXNzKi8gY3R4WzJdOwoKICAgIAkJCWlmIChkaXJ0eSAmIC8qJCRzY29wZSwgb3B0aW9ucywgc2V0dGluZ3MsIHNwaW5uZXJDbGFzcyovIDEwNDg1ODcpIHsKICAgIAkJCQlyb3dfY2hhbmdlcy4kJHNjb3BlID0geyBkaXJ0eSwgY3R4IH07CiAgICAJCQl9CgogICAgCQkJcm93LiRzZXQocm93X2NoYW5nZXMpOwogICAgCQl9LAogICAgCQlpOiBmdW5jdGlvbiBpbnRybyhsb2NhbCkgewogICAgCQkJaWYgKGN1cnJlbnQpIHJldHVybjsKICAgIAkJCXRyYW5zaXRpb25faW4ocm93LiQkLmZyYWdtZW50LCBsb2NhbCk7CiAgICAJCQljdXJyZW50ID0gdHJ1ZTsKICAgIAkJfSwKICAgIAkJbzogZnVuY3Rpb24gb3V0cm8obG9jYWwpIHsKICAgIAkJCXRyYW5zaXRpb25fb3V0KHJvdy4kJC5mcmFnbWVudCwgbG9jYWwpOwogICAgCQkJY3VycmVudCA9IGZhbHNlOwogICAgCQl9LAogICAgCQlkOiBmdW5jdGlvbiBkZXN0cm95KGRldGFjaGluZykgewogICAgCQkJZGVzdHJveV9jb21wb25lbnQocm93LCBkZXRhY2hpbmcpOwogICAgCQl9CiAgICAJfTsKCiAgICAJZGlzcGF0Y2hfZGV2KCJTdmVsdGVSZWdpc3RlckJsb2NrIiwgewogICAgCQlibG9jaywKICAgIAkJaWQ6IGNyZWF0ZV9mcmFnbWVudCRpLm5hbWUsCiAgICAJCXR5cGU6ICJjb21wb25lbnQiLAogICAgCQlzb3VyY2U6ICIiLAogICAgCQljdHgKICAgIAl9KTsKCiAgICAJcmV0dXJuIGJsb2NrOwogICAgfQoKICAgIGZ1bmN0aW9uIGluc3RhbmNlJGkoJCRzZWxmLCAkJHByb3BzLCAkJGludmFsaWRhdGUpIHsKICAgIAlsZXQgbWFpblJvd0NsYXNzOwogICAgCWxldCBzcGlubmVyQ2xhc3M7CiAgICAJbGV0IHsgJCRzbG90czogc2xvdHMgPSB7fSwgJCRzY29wZSB9ID0gJCRwcm9wczsKICAgIAl2YWxpZGF0ZV9zbG90cygiU2V0dGluZ3NQYWdlIiwgc2xvdHMsIFtdKTsKICAgIAlsZXQgeyBhY3RpdmUgfSA9ICQkcHJvcHM7CiAgICAJbGV0IHNwaW5uZXJTaG93biA9IGZhbHNlOwogICAgCWxldCBvcHRpb25zID0gW107CiAgICAJbGV0IHsgc2V0dGluZ3MgPSB7fSB9ID0gJCRwcm9wczsKCiAgICAJY29uc3QgY2xlYXIgPSAoKSA9PiB7CiAgICAJCSQkaW52YWxpZGF0ZSgxLCBvcHRpb25zID0gW10pOwogICAgCX07CgogICAgCWNvbnN0IGxvYWQgPSBhc3luYyBkYXRhID0+IHsKICAgIAkJY2xlYXIoKTsKICAgIAkJJCRpbnZhbGlkYXRlKDUsIHNwaW5uZXJTaG93biA9IHRydWUpOwoKICAgIAkJYXdhaXQgZmV0Y2goYC9hcGkvZGV2aWNlcy9gICsgc2Nhbm5lck5hbWUgKyBgL29wdGlvbnNgLCB7CiAgICAJCQltZXRob2Q6ICJHRVQiLAogICAgCQkJYm9keTogSlNPTi5zdHJpbmdpZnkoZGF0YSkKICAgIAkJfSkudGhlbihyID0+IHIuanNvbigpKS50aGVuKGRhdGEgPT4gewogICAgCQkJJCRpbnZhbGlkYXRlKDUsIHNwaW5uZXJTaG93biA9IGZhbHNlKTsKICAgIAkJCSQkaW52YWxpZGF0ZSgxLCBvcHRpb25zID0gZGF0YSk7CiAgICAJCQljb25zb2xlLmxvZyhvcHRpb25zKTsKCiAgICAJCQlvcHRpb25zLmZvckVhY2goZnVuY3Rpb24gKG9wdGlvbikgewogICAgCQkJCSQkaW52YWxpZGF0ZSgwLCBzZXR0aW5nc1tvcHRpb24ubmFtZV0gPSBvcHRpb24uZGVmYXVsdCwgc2V0dGluZ3MpOwogICAgCQkJfSk7CiAgICAJCX0pOwogICAgCX07CgogICAgCWxldCBzY2FubmVyTmFtZTsKCiAgICAJY29uc3QgdW5zdWJzY3JpYmUgPSBzY2FubmVyLnN1YnNjcmliZSh2YWx1ZSA9PiB7CiAgICAJCXNjYW5uZXJOYW1lID0gdmFsdWU7CgogICAgCQlpZiAoc2Nhbm5lck5hbWUgIT09ICIiKSB7CiAgICAJCQlsb2FkKCk7CiAgICAJCX0KICAgIAl9KTsKCiAgICAJb25Nb3VudChhc3luYyAoKSA9PiB7CiAgICAJCWlmIChzY2FubmVyTmFtZSAhPT0gIiIpIHsKICAgIAkJCWF3YWl0IGxvYWQoKTsKICAgIAkJfQogICAgCX0pOwoKICAgIAljb25zdCB3cml0YWJsZV9wcm9wcyA9IFsiYWN0aXZlIiwgInNldHRpbmdzIl07CgogICAgCU9iamVjdC5rZXlzKCQkcHJvcHMpLmZvckVhY2goa2V5ID0+IHsKICAgIAkJaWYgKCF+d3JpdGFibGVfcHJvcHMuaW5kZXhPZihrZXkpICYmIGtleS5zbGljZSgwLCAyKSAhPT0gIiQkIikgY29uc29sZV8xLndhcm4oYDxTZXR0aW5nc1BhZ2U+IHdhcyBjcmVhdGVkIHdpdGggdW5rbm93biBwcm9wICcke2tleX0nYCk7CiAgICAJfSk7CgogICAgCWZ1bmN0aW9uIGlucHV0X2NoZWNrZWRfYmluZGluZyh2YWx1ZSwgb3B0aW9uKSB7CiAgICAJCXNldHRpbmdzW29wdGlvbi5uYW1lXSA9IHZhbHVlOwogICAgCQkkJGludmFsaWRhdGUoMCwgc2V0dGluZ3MpOwogICAgCX0KCiAgICAJZnVuY3Rpb24gaW5wdXRfdmFsdWVfYmluZGluZyh2YWx1ZSwgb3B0aW9uKSB7CiAgICAJCXNldHRpbmdzW29wdGlvbi5uYW1lXSA9IHZhbHVlOwogICAgCQkkJGludmFsaWRhdGUoMCwgc2V0dGluZ3MpOwogICAgCX0KCiAgICAJZnVuY3Rpb24gaW5wdXRfdmFsdWVfYmluZGluZ18xKHZhbHVlLCBvcHRpb24pIHsKICAgIAkJc2V0dGluZ3Nbb3B0aW9uLm5hbWVdID0gdmFsdWU7CiAgICAJCSQkaW52YWxpZGF0ZSgwLCBzZXR0aW5ncyk7CiAgICAJfQoKICAgIAlmdW5jdGlvbiBpbnB1dF92YWx1ZV9iaW5kaW5nXzIodmFsdWUsIG9wdGlvbikgewogICAgCQlzZXR0aW5nc1tvcHRpb24ubmFtZV0gPSB2YWx1ZTsKICAgIAkJJCRpbnZhbGlkYXRlKDAsIHNldHRpbmdzKTsKICAgIAl9CgogICAgCSQkc2VsZi4kJHNldCA9ICQkcHJvcHMgPT4gewogICAgCQlpZiAoImFjdGl2ZSIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDQsIGFjdGl2ZSA9ICQkcHJvcHMuYWN0aXZlKTsKICAgIAkJaWYgKCJzZXR0aW5ncyIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDAsIHNldHRpbmdzID0gJCRwcm9wcy5zZXR0aW5ncyk7CiAgICAJfTsKCiAgICAJJCRzZWxmLiRjYXB0dXJlX3N0YXRlID0gKCkgPT4gKHsKICAgIAkJQ29sLAogICAgCQlSb3csCiAgICAJCVNwaW5uZXIsCiAgICAJCUZvcm0sCiAgICAJCUZvcm1Hcm91cCwKICAgIAkJSW5wdXQsCiAgICAJCUxhYmVsLAogICAgCQlvbk1vdW50LAogICAgCQlzY2FubmVyLAogICAgCQlhY3RpdmUsCiAgICAJCXNwaW5uZXJTaG93biwKICAgIAkJb3B0aW9ucywKICAgIAkJc2V0dGluZ3MsCiAgICAJCWNsZWFyLAogICAgCQlsb2FkLAogICAgCQlzY2FubmVyTmFtZSwKICAgIAkJdW5zdWJzY3JpYmUsCiAgICAJCW1haW5Sb3dDbGFzcywKICAgIAkJc3Bpbm5lckNsYXNzCiAgICAJfSk7CgogICAgCSQkc2VsZi4kaW5qZWN0X3N0YXRlID0gJCRwcm9wcyA9PiB7CiAgICAJCWlmICgiYWN0aXZlIiBpbiAkJHByb3BzKSAkJGludmFsaWRhdGUoNCwgYWN0aXZlID0gJCRwcm9wcy5hY3RpdmUpOwogICAgCQlpZiAoInNwaW5uZXJTaG93biIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDUsIHNwaW5uZXJTaG93biA9ICQkcHJvcHMuc3Bpbm5lclNob3duKTsKICAgIAkJaWYgKCJvcHRpb25zIiBpbiAkJHByb3BzKSAkJGludmFsaWRhdGUoMSwgb3B0aW9ucyA9ICQkcHJvcHMub3B0aW9ucyk7CiAgICAJCWlmICgic2V0dGluZ3MiIGluICQkcHJvcHMpICQkaW52YWxpZGF0ZSgwLCBzZXR0aW5ncyA9ICQkcHJvcHMuc2V0dGluZ3MpOwogICAgCQlpZiAoInNjYW5uZXJOYW1lIiBpbiAkJHByb3BzKSBzY2FubmVyTmFtZSA9ICQkcHJvcHMuc2Nhbm5lck5hbWU7CiAgICAJCWlmICgibWFpblJvd0NsYXNzIiBpbiAkJHByb3BzKSAkJGludmFsaWRhdGUoMiwgbWFpblJvd0NsYXNzID0gJCRwcm9wcy5tYWluUm93Q2xhc3MpOwogICAgCQlpZiAoInNwaW5uZXJDbGFzcyIgaW4gJCRwcm9wcykgJCRpbnZhbGlkYXRlKDMsIHNwaW5uZXJDbGFzcyA9ICQkcHJvcHMuc3Bpbm5lckNsYXNzKTsKICAgIAl9OwoKICAgIAlpZiAoJCRwcm9wcyAmJiAiJCRpbmplY3QiIGluICQkcHJvcHMpIHsKICAgIAkJJCRzZWxmLiRpbmplY3Rfc3RhdGUoJCRwcm9wcy4kJGluamVjdCk7CiAgICAJfQoKICAgIAkkJHNlbGYuJCQudXBkYXRlID0gKCkgPT4gewogICAgCQlpZiAoJCRzZWxmLiQkLmRpcnR5ICYgLyphY3RpdmUqLyAxNikgewogICAgCQkJICQkaW52YWxpZGF0ZSgyLCBtYWluUm93Q2xhc3MgPSBhY3RpdmUgPyAiIiA6ICJkLW5vbmUiKTsKICAgIAkJfQoKICAgIAkJaWYgKCQkc2VsZi4kJC5kaXJ0eSAmIC8qc3Bpbm5lclNob3duKi8gMzIpIHsKICAgIAkJCSAkJGludmFsaWRhdGUoMywgc3Bpbm5lckNsYXNzID0gc3Bpbm5lclNob3duID8gIiIgOiAiZC1ub25lIik7CiAgICAJCX0KICAgIAl9OwoKICAgIAlyZXR1cm4gWwogICAgCQlzZXR0aW5ncywKICAgIAkJb3B0aW9ucywKICAgIAkJbWFpblJvd0NsYXNzLAogICAgCQlzcGlubmVyQ2xhc3MsCiAgICAJCWFjdGl2ZSwKICAgIAkJc3Bpbm5lclNob3duLAogICAgCQlpbnB1dF9jaGVja2VkX2JpbmRpbmcsCiAgICAJCWlucHV0X3ZhbHVlX2JpbmRpbmcsCiAgICAJCWlucHV0X3ZhbHVlX2JpbmRpbmdfMSwKICAgIAkJaW5wdXRfdmFsdWVfYmluZGluZ18yCiAgICAJXTsKICAgIH0KCiAgICBjbGFzcyBTZXR0aW5nc1BhZ2UgZXh0ZW5kcyBTdmVsdGVDb21wb25lbnREZXYgewogICAgCWNvbnN0cnVjdG9yKG9wdGlvbnMpIHsKICAgIAkJc3VwZXIob3B0aW9ucyk7CiAgICAJCWluaXQodGhpcywgb3B0aW9ucywgaW5zdGFuY2UkaSwgY3JlYXRlX2ZyYWdtZW50JGksIHNhZmVfbm90X2VxdWFsLCB7IGFjdGl2ZTogNCwgc2V0dGluZ3M6IDAgfSk7CgogICAgCQlkaXNwYXRjaF9kZXYoIlN2ZWx0ZVJlZ2lzdGVyQ29tcG9uZW50IiwgewogICAgCQkJY29tcG9uZW50OiB0aGlzLAogICAgCQkJdGFnTmFtZTogIlNldHRpbmdzUGFnZSIsCiAgICAJCQlvcHRpb25zLAogICAgCQkJaWQ6IGNyZWF0ZV9mcmFnbWVudCRpLm5hbWUKICAgIAkJfSk7CgogICAgCQljb25zdCB7IGN0eCB9ID0gdGhpcy4kJDsKICAgIAkJY29uc3QgcHJvcHMgPSBvcHRpb25zLnByb3BzIHx8IHt9OwoKICAgIAkJaWYgKC8qYWN0aXZlKi8gY3R4WzRdID09PSB1bmRlZmluZWQgJiYgISgiYWN0aXZlIiBpbiBwcm9wcykpIHsKICAgIAkJCWNvbnNvbGVfMS53YXJuKCI8U2V0dGluZ3NQYWdlPiB3YXMgY3JlYXRlZCB3aXRob3V0IGV4cGVjdGVkIHByb3AgJ2FjdGl2ZSciKTsKICAgIAkJfQogICAgCX0KCiAgICAJZ2V0IGFjdGl2ZSgpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8U2V0dGluZ3NQYWdlPjogUHJvcHMgY2Fubm90IGJlIHJlYWQgZGlyZWN0bHkgZnJvbSB0aGUgY29tcG9uZW50IGluc3RhbmNlIHVubGVzcyBjb21waWxpbmcgd2l0aCAnYWNjZXNzb3JzOiB0cnVlJyBvciAnPHN2ZWx0ZTpvcHRpb25zIGFjY2Vzc29ycy8+JyIpOwogICAgCX0KCiAgICAJc2V0IGFjdGl2ZSh2YWx1ZSkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxTZXR0aW5nc1BhZ2U+OiBQcm9wcyBjYW5ub3QgYmUgc2V0IGRpcmVjdGx5IG9uIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQoKICAgIAlnZXQgc2V0dGluZ3MoKSB7CiAgICAJCXRocm93IG5ldyBFcnJvcigiPFNldHRpbmdzUGFnZT46IFByb3BzIGNhbm5vdCBiZSByZWFkIGRpcmVjdGx5IGZyb20gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCXNldCBzZXR0aW5ncyh2YWx1ZSkgewogICAgCQl0aHJvdyBuZXcgRXJyb3IoIjxTZXR0aW5nc1BhZ2U+OiBQcm9wcyBjYW5ub3QgYmUgc2V0IGRpcmVjdGx5IG9uIHRoZSBjb21wb25lbnQgaW5zdGFuY2UgdW5sZXNzIGNvbXBpbGluZyB3aXRoICdhY2Nlc3NvcnM6IHRydWUnIG9yICc8c3ZlbHRlOm9wdGlvbnMgYWNjZXNzb3JzLz4nIik7CiAgICAJfQogICAgfQoKICAgIC8qIHNyYy9TY2FubmVyLnN2ZWx0ZSBnZW5lcmF0ZWQgYnkgU3ZlbHRlIHYzLjMxLjIgKi8KCiAgICAvLyAoMzA6OCkgPENvbCBzbT0iNiIgbWQ9IjIiPgogICAgZnVuY3Rpb24gY3JlYXRlX2RlZmF1bHRfc2xvdF8xMChjdHgpIHsKICAgIAlsZXQgc2Nhbm5lcnM7CiAgICAJbGV0IGN1cnJlbnQ7CiAgICAJc2Nhbm5lcnMgPSBuZXcgU2Nhbm5lcnMoeyAkJGlubGluZTogdHJ1ZSB9KTsKCiAgICAJY29uc3QgYmxvY2sgPSB7CiAgICAJCWM6IGZ1bmN0aW9uIGNyZWF0ZSgpIHsKICAgIAkJCWNyZWF0ZV9jb21wb25lbnQoc2Nhbm5lcnMuJCQuZnJhZ21lbnQpOwogICAgCQl9LAogICAgCQltOiBmdW5jdGlvbiBtb3VudCh0YXJnZXQsIGFuY2hvcikgewogICAgCQkJbW91bnRfY29tcG9uZW50KHNjYW5uZXJzLCB0YXJnZXQsIGFuY2hvcik7CiAgICAJCQljdXJyZW50ID0gdHJ1ZTsKICAgIAkJfSwKICAgIAkJaTogZnVuY3Rpb24gaW50cm8obG9jYWwpIHsKICAgIAkJCWlmIChjdXJyZW50KSByZXR1cm47CiAgICAJCQl0cmFuc2l0aW9uX2luKHNjYW5uZXJzLiQkLmZyYWdtZW50LCBsb2NhbCk7CiAgICAJCQljdXJyZW50ID0gdHJ1ZTsKICAgIAkJfSwKICAgIAkJbzogZnVuY3Rpb24gb3V0cm8obG9jYWwpIHsKICAgIAkJCXRyYW5zaXRpb25fb3V0KHNjYW5uZXJzLiQkLmZyYWdtZW50LCBsb2NhbCk7CiAgICAJCQljdXJyZW50ID0gZmFsc2U7CiAgICAJCX0sCiAgICAJCWQ6IGZ1bmN0aW9uIGRlc3Ryb3koZGV0YWNoaW5nKSB7CiAgICAJCQlkZXN0cm95X2NvbXBvbmVudChzY2FubmVycywgZGV0YWNoaW5nKTsKICAgIAkJfQogICAgCX07CgogICAgCWRpc3BhdGNoX2RldigiU3ZlbHRlUmVnaXN0ZXJCbG9jayIsIHsKICAgIAkJYmxvY2ssCiAgICAJCWlkOiBjcmVhdGVfZGVmYXVsdF9zbG90XzEwLm5hbWUsCiAgICAJCXR5cGU6ICJzbG90IiwKICAgIAkJc291cmNlOiAiKDMwOjgpIDxDb2wgc209XFxcIjZcXFwiIG1kPVxcXCIyXFxcIj4iLAogICAgCQljdHgKICAgIAl9KTsKCiAgICAJcmV0dXJuIGJsb2NrOwogICAgfQoKICAgIC8vICgzODoyOCkgPE5hdkxpbmsgYWN0aXZlPXsic2NhbiIgPT09IGFjdGl2ZVRhYn0gb246Y2xpY2s9e3NlbGVjdFRhYigic2NhbiIpfT4KICAgIGZ1bmN0aW9uIGNyZWF0ZV9kZWZhdWx0X3Nsb3RfOSQxKGN0eCkgewogICAgCWxldCB0OwoKICAgIAljb25zdCBibG9jayA9IHsKICAgIAkJYzogZnVuY3Rpb24gY3JlYXRlKCkgewogICAgCQkJdCA9IHRleHQoIlNjYW4iKTsKICAgIAkJfSwKICAgIAkJbTogZnVuY3Rpb24gbW91bnQodGFyZ2V0LCBhbmNob3IpIHsKICAgIAkJCWluc2VydF9kZXYodGFyZ2V0LCB0LCBhbmNob3IpOwogICAgCQl9LAogICAgCQlkOiBmdW5jdGlvbiBkZXN0cm95KGRldGFjaGluZykgewogICAgCQkJaWYgKGRldGFjaGluZykgZGV0YWNoX2Rldih0KTsKICAgIAkJfQogICAgCX07CgogICAgCWRpc3BhdGNoX2RldigiU3ZlbHRlUmVnaXN0ZXJCbG9jayIsIHsKICAgIAkJYmxvY2ssCiAgICAJCWlkOiBjcmVhdGVfZGVmYXVsdF9zbG90XzkkMS5uYW1lLAogICAgCQl0eXBlOiAic2xvdCIsCiAgICAJCXNvdXJjZTogIigzODoyOCkgPE5hdkxpbmsgYWN0aXZlPXtcXFwic2NhblxcXCIgPT09IGFjdGl2ZVRhYn0gb246Y2xpY2s9e3NlbGVjdFRhYihcXFwic2NhblxcXCIpfT4iLAogICAgCQljdHgKICAgIAl9KTsKCiAgICAJcmV0dXJuIGJsb2NrOwogICAgfQoKICAgIC8vICgzNzoyNCkgPE5hdkl0ZW0+CiAgICBmdW5jdGlvbiBjcmVhdGVfZGVmYXVsdF9zbG90XzgkMihjdHgpIHsKICAgIAlsZXQgbmF2bGluazsKICAgIAlsZXQgY3VycmVudDsKCiAgICAJbmF2bGluayA9IG5ldyBOYXZMaW5rKHsKICAgIAkJCXByb3BzOiB7CiAgICAJCQkJYWN0aXZlOiAic2NhbiIgPT09IC8qYWN0aXZlVGFiKi8gY3R4WzBdLAogICAgCQkJCSQkc2xvdHM6IHsgZGVmYXVsdDogW2NyZWF0ZV9kZWZhdWx0X3Nsb3RfOSQxXSB9LAogICAgCQkJCSQkc2NvcGU6IHsgY3R4IH0KICAgIAkJCX0sCiAgICAJCQkkJGlubGluZTogdHJ1ZQogICAgCQl9KTsKCiAgICAJbmF2bGluay4kb24oImNsaWNrIiwgLypzZWxlY3RUYWIqLyBjdHhbMl0oInNjYW4iKSk7CgogICAgCWNvbnN0IGJsb2NrID0gewogICAgCQljOiBmdW5jdGlvbiBjcmVhdGUoKSB7CiAgICAJCQljcmVhdGVfY29tcG9uZW50KG5hdmxpbmsuJCQuZnJhZ21lbnQpOwogICAgCQl9LAogICAgCQltOiBmdW5jdGlvbiBtb3VudCh0YXJnZXQsIGFuY2hvcikgewogICAgCQkJbW91bnRfY29tcG9uZW50KG5hdmxpbmssIHRhcmdldCwgYW5jaG9yKTsKICAgIAkJCWN1cnJlbnQgPSB0cnVlOwogICAgCQl9LAogICAgCQlwOiBmdW5jdGlvbiB1cGRhdGUoY3R4LCBkaXJ0eSkgewogICAgCQkJY29uc3QgbmF2bGlua19jaGFuZ2VzID0ge307CiAgICAJCQlpZiAoZGlydHkgJiAvKmFjdGl2ZVRhYiovIDEpIG5hdmxpbmtfY2hhbmdlcy5hY3RpdmUgPSAic2NhbiIgPT09IC8qYWN0aXZlVGFiKi8gY3R4WzBdOwoKICAgIAkJCWlmIChkaXJ0eSAmIC8qJCRzY29wZSovIDY0KSB7CiAgICAJCQkJbmF2bGlua19jaGFuZ2VzLiQkc2NvcGUgPSB7IGRpcnR5LCBjdHggfTsKICAgIAkJCX0KCiAgICAJCQluYXZsaW5rLiRzZXQobmF2bGlua19jaGFuZ2VzKTsKICAgIAkJfSwKICAgIAkJaTogZnVuY3Rpb24gaW50cm8obG9jYWwpIHsKICAgIAkJCWlmIChjdXJyZW50KSByZXR1cm47CiAgICAJCQl0cmFuc2l0aW9uX2luKG5hdmxpbmsuJCQuZnJhZ21lbnQsIGxvY2FsKTsKICAgIAkJCWN1cnJlbnQgPSB0cnVlOwogICAgCQl9LAogICAgCQlvOiBmdW5jdGlvbiBvdXRybyhsb2NhbCkgewogICAgCQkJdHJhbnNpdGlvbl9vdXQobmF2bGluay4kJC5mcmFnbWVudCwgbG9jYWwpOwogICAgCQkJY3VycmVudCA9IGZhbHNlOwogICAgCQl9LAogICAgCQlkOiBmdW5jdGlvbiBkZXN0cm95KGRldGFjaGluZykgewogICAgCQkJZGVzdHJveV9jb21wb25lbnQobmF2bGluaywgZGV0YWNoaW5nKTsKICAgIAkJfQogICAgCX07CgogICAgCWRpc3BhdGNoX2RldigiU3ZlbHRlUmVnaXN0ZXJCbG9jayIsIHsKICAgIAkJYmxvY2ssCiAgICAJCWlkOiBjcmVhdGVfZGVmYXVsdF9zbG90XzgkMi5uYW1lLAogICAgCQl0eXBlOiAic2xvdCIsCiAgICAJCXNvdXJjZTogIigzNzoyNCkgPE5hdkl0ZW0+IiwKICAgIAkJY3R4CiAgICAJfSk7CgogICAgCXJldHVybiBibG9jazsKICAgIH0KCiAgICAvLyAoNDE6MjgpIDxOYXZMaW5rIGFjdGl2ZT17InNldHRpbmdzIiA9PT0gYWN0aXZlVGFifSBvbjpjbGljaz17c2VsZWN0VGFiKCJzZXR0aW5ncyIpfT4KICAgIGZ1bmN0aW9uIGNyZWF0ZV9kZWZhdWx0X3Nsb3RfNyQyKGN0eCkgewogICAgCWxldCB0OwoKICAgIAljb25zdCBibG9jayA9IHsKICAgIAkJYzogZnVuY3Rpb24gY3JlYXRlKCkgewogICAgCQkJdCA9IHRleHQoIlNldHRpbmdzIik7CiAgICAJCX0sCiAgICAJCW06IGZ1bmN0aW9uIG1vdW50KHRhcmdldCwgYW5jaG9yKSB7CiAgICAJCQlpbnNlcnRfZGV2KHRhcmdldCwgdCwgYW5jaG9yKTsKICAgIAkJfSwKICAgIAkJZDogZnVuY3Rpb24gZGVzdHJveShkZXRhY2hpbmcpIHsKICAgIAkJCWlmIChkZXRhY2hpbmcpIGRldGFjaF9kZXYodCk7CiAgICAJCX0KICAgIAl9OwoKICAgIAlkaXNwYXRjaF9kZXYoIlN2ZWx0ZVJlZ2lzdGVyQmxvY2siLCB7CiAgICAJCWJsb2NrLAogICAgCQlpZDogY3JlYXRlX2RlZmF1bHRfc2xvdF83JDIubmFtZSwKICAgIAkJdHlwZTogInNsb3QiLAogICAgCQlzb3VyY2U6ICIoNDE6MjgpIDxOYXZMaW5rIGFjdGl2ZT17XFxcInNldHRpbmdzXFxcIiA9PT0gYWN0aXZlVGFifSBvbjpjbGljaz17c2VsZWN0VGFiKFxcXCJzZXR0aW5nc1xcXCIpfT4iLAogICAgCQljdHgKICAgIAl9KTsKCiAgICAJcmV0dXJuIGJsb2NrOwogICAgfQoKICAgIC8vICg0MDoyNCkgPE5hdkl0ZW0+CiAgICBmdW5jdGlvbiBjcmVhdGVfZGVmYXVsdF9zbG90XzYkMihjdHgpIHsKICAgIAlsZXQgbmF2bGluazsKICAgIAlsZXQgY3VycmVudDsKCiAgICAJbmF2bGluayA9IG5ldyBOYXZMaW5rKHsKICAgIAkJCXByb3BzOiB7CiAgICAJCQkJYWN0aXZlOiAic2V0dGluZ3MiID09PSAvKmFjdGl2ZVRhYiovIGN0eFswXSwKICAgIAkJCQkkJHNsb3RzOiB7IGRlZmF1bHQ6IFtjcmVhdGVfZGVmYXVsdF9zbG90XzckMl0gfSwKICAgIAkJCQkkJHNjb3BlOiB7IGN0eCB9CiAgICAJCQl9LAogICAgCQkJJCRpbmxpbmU6IHRydWUKICAgIAkJfSk7CgogICAgCW5hdmxpbmsuJG9uKCJjbGljayIsIC8qc2VsZWN0VGFiKi8gY3R4WzJdKCJzZXR0aW5ncyIpKTsKCiAgICAJY29uc3QgYmxvY2sgPSB7CiAgICAJCWM6IGZ1bmN0aW9uIGNyZWF0ZSgpIHsKICAgIAkJCWNyZWF0ZV9jb21wb25lbnQobmF2bGluay4kJC5mcmFnbWVudCk7CiAgICAJCX0sCiAgICAJCW06IGZ1bmN0aW9uIG1vdW50KHRhcmdldCwgYW5jaG9yKSB7CiAgICAJCQltb3VudF9jb21wb25lbnQobmF2bGluaywgdGFyZ2V0LCBhbmNob3IpOwogICAgCQkJY3VycmVudCA9IHRydWU7CiAgICAJCX0sCiAgICAJCXA6IGZ1bmN0aW9uIHVwZGF0ZShjdHgsIGRpcnR5KSB7CiAgICAJCQljb25zdCBuYXZsaW5rX2NoYW5nZXMgPSB7fTsKICAgIAkJCWlmIChkaXJ0eSAmIC8qYWN0aXZlVGFiKi8gMSkgbmF2bGlua19jaGFuZ2VzLmFjdGl2ZSA9ICJzZXR0aW5ncyIgPT09IC8qYWN0aXZlVGFiKi8gY3R4WzBdOwoKICAgIAkJCWlmIChkaXJ0eSAmIC8qJCRzY29wZSovIDY0KSB7CiAgICAJCQkJbmF2bGlua19jaGFuZ2VzLiQkc2NvcGUgPSB7IGRpcnR5LCBjdHggfTsKICAgIAkJCX0KCiAgICAJCQluYXZsaW5rLiRzZXQobmF2bGlua19jaGFuZ2VzKTsKICAgIAkJfSwKICAgIAkJaTogZnVuY3Rpb24gaW50cm8obG9jYWwpIHsKICAgIAkJCWlmIChjdXJyZW50KSByZXR1cm47CiAgICAJCQl0cmFuc2l0aW9uX2luKG5hdmxpbmsuJCQuZnJhZ21lbnQsIGxvY2FsKTsKICAgIAkJCWN1cnJlbnQgPSB0cnVlOwogICAgCQl9LAogICAgCQlvOiBmdW5jdGlvbiBvdXRybyhsb2NhbCkgewogICAgCQkJdHJhbnNpdGlvbl9vdXQobmF2bGluay4kJC5mcmFnbWVudCwgbG9jYWwpOwogICAgCQkJY3VycmVudCA9IGZhbHNlOwogICAgCQl9LAogICAgCQlkOiBmdW5jdGlvbiBkZXN0cm95KGRldGFjaGluZykgewogICAgCQkJZGVzdHJveV9jb21wb25lbnQobmF2bGluaywgZGV0YWNoaW5nKTsKICAgIAkJfQogICAgCX07CgogICAgCWRpc3BhdGNoX2RldigiU3ZlbHRlUmVnaXN0ZXJCbG9jayIsIHsKICAgIAkJYmxvY2ssCiAgICAJCWlkOiBjcmVhdGVfZGVmYXVsdF9zbG90XzYkMi5uYW1lLAogICAgCQl0eXBlOiAic2xvdCIsCiAgICAJCXNvdXJjZTogIig0MDoyNCkgPE5hdkl0ZW0+IiwKICAgIAkJY3R4CiAgICAJfSk7CgogICAgCXJldHVybiBibG9jazsKICAgIH0KCiAgICAvLyAoMzY6MjApIDxOYXYgdGFicz4KICAgIGZ1bmN0aW9uIGNyZWF0ZV9kZWZhdWx0X3Nsb3RfNSQyKGN0eCkgewogICAgCWxldCBuYXZpdGVtMDsKICAgIAlsZXQgdDsKICAgIAlsZXQgbmF2aXRlbTE7CiAgICAJbGV0IGN1cnJlbnQ7CgogICAgCW5hdml0ZW0wID0gbmV3IE5hdkl0ZW0oewogICAgCQkJcHJvcHM6IHsKICAgIAkJCQkkJHNsb3RzOiB7IGRlZmF1bHQ6IFtjcmVhdGVfZGVmYXVsdF9zbG90XzgkMl0gfSwKICAgIAkJCQkkJHNjb3BlOiB7IGN0eCB9CiAgICAJCQl9LAogICAgCQkJJCRpbmxpbmU6IHRydWUKICAgIAkJfSk7CgogICAgCW5hdml0ZW0xID0gbmV3IE5hdkl0ZW0oewogICAgCQkJcHJvcHM6IHsKICAgIAkJCQkkJHNsb3RzOiB7IGRlZmF1bHQ6IFtjcmVhdGVfZGVmYXVsdF9zbG90XzYkMl0gfSwKICAgIAkJCQkkJHNjb3BlOiB7IGN0eCB9CiAgICAJCQl9LAogICAgCQkJJCRpbmxpbmU6IHRydWUKICAgIAkJfSk7CgogICAgCWNvbnN0IGJsb2NrID0gewogICAgCQljOiBmdW5jdGlvbiBjcmVhdGUoKSB7CiAgICAJCQljcmVhdGVfY29tcG9uZW50KG5hdml0ZW0wLiQkLmZyYWdtZW50KTsKICAgIAkJCXQgPSBzcGFjZSgpOwogICAgCQkJY3JlYXRlX2NvbXBvbmVudChuYXZpdGVtMS4kJC5mcmFnbWVudCk7CiAgICAJCX0sCiAgICAJCW06IGZ1bmN0aW9uIG1vdW50KHRhcmdldCwgYW5jaG9yKSB7CiAgICAJCQltb3VudF9jb21wb25lbnQobmF2aXRlbTAsIHRhcmdldCwgYW5jaG9yKTsKICAgIAkJCWluc2VydF9kZXYodGFyZ2V0LCB0LCBhbmNob3IpOwogICAgCQkJbW91bnRfY29tcG9uZW50KG5hdml0ZW0xLCB0YXJnZXQsIGFuY2hvcik7CiAgICAJCQljdXJyZW50ID0gdHJ1ZTsKICAgIAkJfSwKICAgIAkJcDogZnVuY3Rpb24gdXBkYXRlKGN0eCwgZGlydHkpIHsKICAgIAkJCWNvbnN0IG5hdml0ZW0wX2NoYW5nZXMgPSB7fTsKCiAgICAJCQlpZiAoZGlydHkgJiAvKiQkc2NvcGUsIGFjdGl2ZVRhYiovIDY1KSB7CiAgICAJCQkJbmF2aXRlbTBfY2hhbmdlcy4kJHNjb3BlID0geyBkaXJ0eSwgY3R4IH07CiAgICAJCQl9CgogICAgCQkJbmF2aXRlbTAuJHNldChuYXZpdGVtMF9jaGFuZ2VzKTsKICAgIAkJCWNvbnN0IG5hdml0ZW0xX2NoYW5nZXMgPSB7fTsKCiAgICAJCQlpZiAoZGlydHkgJiAvKiQkc2NvcGUsIGFjdGl2ZVRhYiovIDY1KSB7CiAgICAJCQkJbmF2aXRlbTFfY2hhbmdlcy4kJHNjb3BlID0geyBkaXJ0eSwgY3R4IH07CiAgICAJCQl9CgogICAgCQkJbmF2aXRlbTEuJHNldChuYXZpdGVtMV9jaGFuZ2VzKTsKICAgIAkJfSwKICAgIAkJaTogZnVuY3Rpb24gaW50cm8obG9jYWwpIHsKICAgIAkJCWlmIChjdXJyZW50KSByZXR1cm47CiAgICAJCQl0cmFuc2l0aW9uX2luKG5hdml0ZW0wLiQkLmZyYWdtZW50LCBsb2NhbCk7CiAgICAJCQl0cmFuc2l0aW9uX2luKG5hdml0ZW0xLiQkLmZyYWdtZW50LCBsb2NhbCk7CiAgICAJCQljdXJyZW50ID0gdHJ1ZTsKICAgIAkJfSwKICAgIAkJbzogZnVuY3Rpb24gb3V0cm8obG9jYWwpIHsKICAgIAkJCXRyYW5zaXRpb25fb3V0KG5hdml0ZW0wLiQkLmZyYWdtZW50LCBsb2NhbCk7CiAgICAJCQl0cmFuc2l0aW9uX291dChuYXZpdGVtMS4kJC5mcmFnbWVudCwgbG9jYWwpOwogICAgCQkJY3VycmVudCA9IGZhbHNlOwogICAgCQl9LAogICAgCQlkOiBmdW5jdGlvbiBkZXN0cm95KGRldGFjaGluZykgewogICAgCQkJZGVzdHJveV9jb21wb25lbnQobmF2aXRlbTAsIGRldGFjaGluZyk7CiAgICAJCQlpZiAoZGV0YWNoaW5nKSBkZXRhY2hfZGV2KHQpOwogICAgCQkJZGVzdHJveV9jb21wb25lbnQobmF2aXRlbTEsIGRldGFjaGluZyk7CiAgICAJCX0KICAgIAl9OwoKICAgIAlkaXNwYXRjaF9kZXYoIlN2ZWx0ZVJlZ2lzdGVyQmxvY2siLCB7CiAgICAJCWJsb2NrLAogICAgCQlpZDogY3JlYXRlX2RlZmF1bHRfc2xvdF81JDIubmFtZSwKICAgIAkJdHlwZTogInNsb3QiLAogICAgCQlzb3VyY2U6ICIoMzY6MjApIDxOYXYgdGFicz4iLAogICAgCQljdHgKICAgIAl9KTsKCiAgICAJcmV0dXJuIGJsb2NrOwogICAgfQoKICAgIC8vICgzNToxNikgPENvbD4KICAgIGZ1bmN0aW9uIGNyZWF0ZV9kZWZhdWx0X3Nsb3RfNCQyKGN0eCkgewogICAgCWxldCBuYXY7CiAgICAJbGV0IGN1cnJlbnQ7CgogICAgCW5hdiA9IG5ldyBOYXYoewogICAgCQkJcHJvcHM6IHsKICAgIAkJCQl0YWJzOiB0cnVlLAogICAgCQkJCSQkc2xvdHM6IHsgZGVmYXVsdDogW2NyZWF0ZV9kZWZhdWx0X3Nsb3RfNSQyXSB9LAogICAgCQkJCSQkc2NvcGU6IHsgY3R4IH0KICAgIAkJCX0sCiAgICAJCQkkJGlubGluZTogdHJ1ZQogICAgCQl9KTsKCiAgICAJY29uc3QgYmxvY2sgPSB7CiAgICAJCWM6IGZ1bmN0aW9uIGNyZWF0ZSgpIHsKICAgIAkJCWNyZWF0ZV9jb21wb25lbnQobmF2LiQkLmZyYWdtZW50KTsKICAgIAkJfSwKICAgIAkJbTogZnVuY3Rpb24gbW91bnQodGFyZ2V0LCBhbmNob3IpIHsKICAgIAkJCW1vdW50X2NvbXBvbmVudChuYXYsIHRhcmdldCwgYW5jaG9yKTsKICAgIAkJCWN1cnJlbnQgPSB0cnVlOwogICAgCQl9LAogICAgCQlwOiBmdW5jdGlvbiB1cGRhdGUoY3R4LCBkaXJ0eSkgewogICAgCQkJY29uc3QgbmF2X2NoYW5nZXMgPSB7fTsKCiAgICAJCQlpZiAoZGlydHkgJiAvKiQkc2NvcGUsIGFjdGl2ZVRhYiovIDY1KSB7CiAgICAJCQkJbmF2X2NoYW5nZXMuJCRzY29wZSA9IHsgZGlydHksIGN0eCB9OwogICAgCQkJfQoKICAgIAkJCW5hdi4kc2V0KG5hdl9jaGFuZ2VzKTsKICAgIAkJfSwKICAgIAkJaTogZnVuY3Rpb24gaW50cm8obG9jYWwpIHsKICAgIAkJCWlmIChjdXJyZW50KSByZXR1cm47CiAgICAJCQl0cmFuc2l0aW9uX2luKG5hdi4kJC5mcmFnbWVudCwgbG9jYWwpOwogICAgCQkJY3VycmVudCA9IHRydWU7CiAgICAJCX0sCiAgICAJCW86IGZ1bmN0aW9uIG91dHJvKGxvY2FsKSB7CiAgICAJCQl0cmFuc2l0aW9uX291dChuYXYuJCQuZnJhZ21lbnQsIGxvY2FsKTsKICAgIAkJCWN1cnJlbnQgPSBmYWxzZTsKICAgIAkJfSwKICAgIAkJZDogZnVuY3Rpb24gZGVzdHJveShkZXRhY2hpbmcpIHsKICAgIAkJCWRlc3Ryb3lfY29tcG9uZW50KG5hdiwgZGV0YWNoaW5nKTsKICAgIAkJfQogICAgCX07CgogICAgCWRpc3BhdGNoX2RldigiU3ZlbHRlUmVnaXN0ZXJCbG9jayIsIHsKICAgIAkJYmxvY2ssCiAgICAJCWlkOiBjcmVhdGVfZGVmYXVsdF9zbG90XzQkMi5uYW1lLAogICAgCQl0eXBlOiAic2xvdCIsCiAgICAJCXNvdXJjZTogIigzNToxNikgPENvbD4iLAogICAgCQljdHgKICAgIAl9KTsKCiAgICAJcmV0dXJuIGJsb2NrOwogICAgfQoKICAgIC8vICgzNDoxMikgPFJvdz4KICAgIGZ1bmN0aW9uIGNyZWF0ZV9kZWZhdWx0X3Nsb3RfMyQyKGN0eCkgewogICAgCWxldCBjb2w7CiAgICAJbGV0IGN1cnJlbnQ7CgogICAgCWNvbCA9IG5ldyBDb2woewogICAgCQkJcHJvcHM6IHsKICAgIAkJCQkkJHNsb3RzOiB7IGRlZmF1bHQ6IFtjcmVhdGVfZGVmYXVsdF9zbG90XzQkMl0gfSwKICAgIAkJCQkkJHNjb3BlOiB7IGN0eCB9CiAgICAJCQl9LAogICAgCQkJJCRpbmxpbmU6IHRydWUKICAgIAkJfSk7CgogICAgCWNvbnN0IGJsb2NrID0gewogICAgCQljOiBmdW5jdGlvbiBjcmVhdGUoKSB7CiAgICAJCQljcmVhdGVfY29tcG9uZW50KGNvbC4kJC5mcmFnbWVudCk7CiAgICAJCX0sCiAgICAJCW06IGZ1bmN0aW9uIG1vdW50KHRhcmdldCwgYW5jaG9yKSB7CiAgICAJCQltb3VudF9jb21wb25lbnQoY29sLCB0YXJnZXQsIGFuY2hvcik7CiAgICAJCQljdXJyZW50ID0gdHJ1ZTsKICAgIAkJfSwKICAgIAkJcDogZnVuY3Rpb24gdXBkYXRlKGN0eCwgZGlydHkpIHsKICAgIAkJCWNvbnN0IGNvbF9jaGFuZ2VzID0ge307CgogICAgCQkJaWYgKGRpcnR5ICYgLyokJHNjb3BlLCBhY3RpdmVUYWIqLyA2NSkgewogICAgCQkJCWNvbF9jaGFuZ2VzLiQkc2NvcGUgPSB7IGRpcnR5LCBjdHggfTsKICAgIAkJCX0KCiAgICAJCQljb2wuJHNldChjb2xfY2hhbmdlcyk7CiAgICAJCX0sCiAgICAJCWk6IGZ1bmN0aW9uIGludHJvKGxvY2FsKSB7CiAgICAJCQlpZiAoY3VycmVudCkgcmV0dXJuOwogICAgCQkJdHJhbnNpdGlvbl9pbihjb2wuJCQuZnJhZ21lbnQsIGxvY2FsKTsKICAgIAkJCWN1cnJlbnQgPSB0cnVlOwogICAgCQl9LAogICAgCQlvOiBmdW5jdGlvbiBvdXRybyhsb2NhbCkgewogICAgCQkJdHJhbnNpdGlvbl9vdXQoY29sLiQkLmZyYWdtZW50LCBsb2NhbCk7CiAgICAJCQljdXJyZW50ID0gZmFsc2U7CiAgICAJCX0sCiAgICAJCWQ6IGZ1bmN0aW9uIGRlc3Ryb3koZGV0YWNoaW5nKSB7CiAgICAJCQlkZXN0cm95X2NvbXBvbmVudChjb2wsIGRldGFjaGluZyk7CiAgICAJCX0KICAgIAl9OwoKICAgIAlkaXNwYXRjaF9kZXYoIlN2ZWx0ZVJlZ2lzdGVyQmxvY2siLCB7CiAgICAJCWJsb2NrLAogICAgCQlpZDogY3JlYXRlX2RlZmF1bHRfc2xvdF8zJDIubmFtZSwKICAgIAkJdHlwZTogInNsb3QiLAogICAgCQlzb3VyY2U6ICIoMzQ6MTIpIDxSb3c+IiwKICAgIAkJY3R4CiAgICAJfSk7CgogICAgCXJldHVybiBibG9jazsKICAgIH0KCiAgICAvLyAoMzM6OCkgPENvbCBzbT0iNiIgbWQ9IjEwIj4KICAgIGZ1bmN0aW9uIGNyZWF0ZV9kZWZhdWx0X3Nsb3RfMiQyKGN0eCkgewogICAgCWxldCByb3c7CiAgICAJbGV0IHQwOwogICAgCWxldCBzY2FucGFnZTsKICAgIAlsZXQgdDE7CiAgICAJbGV0IHNldHRpbmdzcGFnZTsKICAgIAlsZXQgdXBkYXRpbmdfc2V0dGluZ3M7CiAgICAJbGV0IGN1cnJlbnQ7CgogICAgCXJvdyA9IG5ldyBSb3coewogICAgCQkJcHJvcHM6IHsKICAgIAkJCQkkJHNsb3RzOiB7IGRlZmF1bHQ6IFtjcmVhdGVfZGVmYXVsdF9zbG90XzMkMl0gfSwKICAgIAkJCQkkJHNjb3BlOiB7IGN0eCB9CiAgICAJCQl9LAogICAgCQkJJCRpbmxpbmU6IHRydWUKICAgIAkJfSk7CgogICAgCXNjYW5wYWdlID0gbmV3IFNjYW5QYWdlKHsKICAgIAkJCXByb3BzOiB7CiAgICAJCQkJYWN0aXZlOiAic2NhbiIgPT09IC8qYWN0aXZlVGFiKi8gY3R4WzBdLAogICAgCQkJCXNldHRpbmdzOiAvKnNldHRpbmdzKi8gY3R4WzFdCiAgICAJCQl9LAogICAgCQkJJCRpbmxpbmU6IHRydWUKICAgIAkJfSk7CgogICAgCWZ1bmN0aW9uIHNldHRpbmdzcGFnZV9zZXR0aW5nc19iaW5kaW5nKHZhbHVlKSB7CiAgICAJCS8qc2V0dGluZ3NwYWdlX3NldHRpbmdzX2JpbmRpbmcqLyBjdHhbM10uY2FsbChudWxsLCB2YWx1ZSk7CiAgICAJfQoKICAgIAlsZXQgc2V0dGluZ3NwYWdlX3Byb3BzID0gewogICAgCQlhY3RpdmU6ICJzZXR0aW5ncyIgPT09IC8qYWN0aXZlVGFiKi8gY3R4WzBdCiAgICAJfTsKCiAgICAJaWYgKC8qc2V0dGluZ3MqLyBjdHhbMV0gIT09IHZvaWQgMCkgewogICAgCQlzZXR0aW5nc3BhZ2VfcHJvcHMuc2V0dGluZ3MgPSAvKnNldHRpbmdzKi8gY3R4WzFdOwogICAgCX0KCiAgICAJc2V0dGluZ3NwYWdlID0gbmV3IFNldHRpbmdzUGFnZSh7CiAgICAJCQlwcm9wczogc2V0dGluZ3NwYWdlX3Byb3BzLAogICAgCQkJJCRpbmxpbmU6IHRydWUKICAgIAkJfSk7CgogICAgCWJpbmRpbmdfY2FsbGJhY2tzLnB1c2goKCkgPT4gYmluZChzZXR0aW5nc3BhZ2UsICJzZXR0aW5ncyIsIHNldHRpbmdzcGFnZV9zZXR0aW5nc19iaW5kaW5nKSk7CgogICAgCWNvbnN0IGJsb2NrID0gewogICAgCQljOiBmdW5jdGlvbiBjcmVhdGUoKSB7CiAgICAJCQljcmVhdGVfY29tcG9uZW50KHJvdy4kJC5mcmFnbWVudCk7CiAgICAJCQl0MCA9IHNwYWNlKCk7CiAgICAJCQljcmVhdGVfY29tcG9uZW50KHNjYW5wYWdlLiQkLmZyYWdtZW50KTsKICAgIAkJCXQxID0gc3BhY2UoKTsKICAgIAkJCWNyZWF0ZV9jb21wb25lbnQoc2V0dGluZ3NwYWdlLiQkLmZyYWdtZW50KTsKICAgIAkJfSwKICAgIAkJbTogZnVuY3Rpb24gbW91bnQodGFyZ2V0LCBhbmNob3IpIHsKICAgIAkJCW1vdW50X2NvbXBvbmVudChyb3csIHRhcmdldCwgYW5jaG9yKTsKICAgIAkJCWluc2VydF9kZXYodGFyZ2V0LCB0MCwgYW5jaG9yKTsKICAgIAkJCW1vdW50X2NvbXBvbmVudChzY2FucGFnZSwgdGFyZ2V0LCBhbmNob3IpOwogICAgCQkJaW5zZXJ0X2Rldih0YXJnZXQsIHQxLCBhbmNob3IpOwogICAgCQkJbW91bnRfY29tcG9uZW50KHNldHRpbmdzcGFnZSwgdGFyZ2V0LCBhbmNob3IpOwogICAgCQkJY3VycmVudCA9IHRydWU7CiAgICAJCX0sCiAgICAJCXA6IGZ1bmN0aW9uIHVwZGF0ZShjdHgsIGRpcnR5KSB7CiAgICAJCQljb25zdCByb3dfY2hhbmdlcyA9IHt9OwoKICAgIAkJCWlmIChkaXJ0eSAmIC8qJCRzY29wZSwgYWN0aXZlVGFiKi8gNjUpIHsKICAgIAkJCQlyb3dfY2hhbmdlcy4kJHNjb3BlID0geyBkaXJ0eSwgY3R4IH07CiAgICAJCQl9CgogICAgCQkJcm93LiRzZXQocm93X2NoYW5nZXMpOwogICAgCQkJY29uc3Qgc2NhbnBhZ2VfY2hhbmdlcyA9IHt9OwogICAgCQkJaWYgKGRpcnR5ICYgLyphY3RpdmVUYWIqLyAxKSBzY2FucGFnZV9jaGFuZ2VzLmFjdGl2ZSA9ICJzY2FuIiA9PT0gLyphY3RpdmVUYWIqLyBjdHhbMF07CiAgICAJCQlpZiAoZGlydHkgJiAvKnNldHRpbmdzKi8gMikgc2NhbnBhZ2VfY2hhbmdlcy5zZXR0aW5ncyA9IC8qc2V0dGluZ3MqLyBjdHhbMV07CiAgICAJCQlzY2FucGFnZS4kc2V0KHNjYW5wYWdlX2NoYW5nZXMpOwogICAgCQkJY29uc3Qgc2V0dGluZ3NwYWdlX2NoYW5nZXMgPSB7fTsKICAgIAkJCWlmIChkaXJ0eSAmIC8qYWN0aXZlVGFiKi8gMSkgc2V0dGluZ3NwYWdlX2NoYW5nZXMuYWN0aXZlID0gInNldHRpbmdzIiA9PT0gLyphY3RpdmVUYWIqLyBjdHhbMF07CgogICAgCQkJaWYgKCF1cGRhdGluZ19zZXR0aW5ncyAmJiBkaXJ0eSAmIC8qc2V0dGluZ3MqLyAyKSB7CiAgICAJCQkJdXBkYXRpbmdfc2V0dGluZ3MgPSB0cnVlOwogICAgCQkJCXNldHRpbmdzcGFnZV9jaGFuZ2VzLnNldHRpbmdzID0gLypzZXR0aW5ncyovIGN0eFsxXTsKICAgIAkJCQlhZGRfZmx1c2hfY2FsbGJhY2soKCkgPT4gdXBkYXRpbmdfc2V0dGluZ3MgPSBmYWxzZSk7CiAgICAJCQl9CgogICAgCQkJc2V0dGluZ3NwYWdlLiRzZXQoc2V0dGluZ3NwYWdlX2NoYW5nZXMpOwogICAgCQl9LAogICAgCQlpOiBmdW5jdGlvbiBpbnRybyhsb2NhbCkgewogICAgCQkJaWYgKGN1cnJlbnQpIHJldHVybjsKICAgIAkJCXRyYW5zaXRpb25faW4ocm93LiQkLmZyYWdtZW50LCBsb2NhbCk7CiAgICAJCQl0cmFuc2l0aW9uX2luKHNjYW5wYWdlLiQkLmZyYWdtZW50LCBsb2NhbCk7CiAgICAJCQl0cmFuc2l0aW9uX2luKHNldHRpbmdzcGFnZS4kJC5mcmFnbWVudCwgbG9jYWwpOwogICAgCQkJY3VycmVudCA9IHRydWU7CiAgICAJCX0sCiAgICAJCW86IGZ1bmN0aW9uIG91dHJvKGxvY2FsKSB7CiAgICAJCQl0cmFuc2l0aW9uX291dChyb3cuJCQuZnJhZ21lbnQsIGxvY2FsKTsKICAgIAkJCXRyYW5zaXRpb25fb3V0KHNjYW5wYWdlLiQkLmZyYWdtZW50LCBsb2NhbCk7CiAgICAJCQl0cmFuc2l0aW9uX291dChzZXR0aW5nc3BhZ2UuJCQuZnJhZ21lbnQsIGxvY2FsKTsKICAgIAkJCWN1cnJlbnQgPSBmYWxzZTsKICAgIAkJfSwKICAgIAkJZDogZnVuY3Rpb24gZGVzdHJveShkZXRhY2hpbmcpIHsKICAgIAkJCWRlc3Ryb3lfY29tcG9uZW50KHJvdywgZGV0YWNoaW5nKTsKICAgIAkJCWlmIChkZXRhY2hpbmcpIGRldGFjaF9kZXYodDApOwogICAgCQkJZGVzdHJveV9jb21wb25lbnQoc2NhbnBhZ2UsIGRldGFjaGluZyk7CiAgICAJCQlpZiAoZGV0YWNoaW5nKSBkZXRhY2hfZGV2KHQxKTsKICAgIAkJCWRlc3Ryb3lfY29tcG9uZW50KHNldHRpbmdzcGFnZSwgZGV0YWNoaW5nKTsKICAgIAkJfQogICAgCX07CgogICAgCWRpc3BhdGNoX2RldigiU3ZlbHRlUmVnaXN0ZXJCbG9jayIsIHsKICAgIAkJYmxvY2ssCiAgICAJCWlkOiBjcmVhdGVfZGVmYXVsdF9zbG90XzIkMi5uYW1lLAogICAgCQl0eXBlOiAic2xvdCIsCiAgICAJCXNvdXJjZTogIigzMzo4KSA8Q29sIHNtPVxcXCI2XFxcIiBtZD1cXFwiMTBcXFwiPiIsCiAgICAJCWN0eAogICAgCX0pOwoKICAgIAlyZXR1cm4gYmxvY2s7CiAgICB9CgogICAgLy8gKDI5OjQpIDxSb3c+CiAgICBmdW5jdGlvbiBjcmVhdGVfZGVmYXVsdF9zbG90XzEkMyhjdHgpIHsKICAgIAlsZXQgY29sMDsKICAgIAlsZXQgdDsKICAgIAlsZXQgY29sMTsKICAgIAlsZXQgY3VycmVudDsKCiAgICAJY29sMCA9IG5ldyBDb2woewogICAgCQkJcHJvcHM6IHsKICAgIAkJCQlzbTogIjYiLAogICAgCQkJCW1kOiAiMiIsCiAgICAJCQkJJCRzbG90czogeyBkZWZhdWx0OiBbY3JlYXRlX2RlZmF1bHRfc2xvdF8xMF0gfSwKICAgIAkJCQkkJHNjb3BlOiB7IGN0eCB9CiAgICAJCQl9LAogICAgCQkJJCRpbmxpbmU6IHRydWUKICAgIAkJfSk7CgogICAgCWNvbDEgPSBuZXcgQ29sKHsKICAgIAkJCXByb3BzOiB7CiAgICAJCQkJc206ICI2IiwKICAgIAkJCQltZDogIjEwIiwKICAgIAkJCQkkJHNsb3RzOiB7IGRlZmF1bHQ6IFtjcmVhdGVfZGVmYXVsdF9zbG90XzIkMl0gfSwKICAgIAkJCQkkJHNjb3BlOiB7IGN0eCB9CiAgICAJCQl9LAogICAgCQkJJCRpbmxpbmU6IHRydWUKICAgIAkJfSk7CgogICAgCWNvbnN0IGJsb2NrID0gewogICAgCQljOiBmdW5jdGlvbiBjcmVhdGUoKSB7CiAgICAJCQljcmVhdGVfY29tcG9uZW50KGNvbDAuJCQuZnJhZ21lbnQpOwogICAgCQkJdCA9IHNwYWNlKCk7CiAgICAJCQljcmVhdGVfY29tcG9uZW50KGNvbDEuJCQuZnJhZ21lbnQpOwogICAgCQl9LAogICAgCQltOiBmdW5jdGlvbiBtb3VudCh0YXJnZXQsIGFuY2hvcikgewogICAgCQkJbW91bnRfY29tcG9uZW50KGNvbDAsIHRhcmdldCwgYW5jaG9yKTsKICAgIAkJCWluc2VydF9kZXYodGFyZ2V0LCB0LCBhbmNob3IpOwogICAgCQkJbW91bnRfY29tcG9uZW50KGNvbDEsIHRhcmdldCwgYW5jaG9yKTsKICAgIAkJCWN1cnJlbnQgPSB0cnVlOwogICAgCQl9LAogICAgCQlwOiBmdW5jdGlvbiB1cGRhdGUoY3R4LCBkaXJ0eSkgewogICAgCQkJY29uc3QgY29sMF9jaGFuZ2VzID0ge307CgogICAgCQkJaWYgKGRpcnR5ICYgLyokJHNjb3BlKi8gNjQpIHsKICAgIAkJCQljb2wwX2NoYW5nZXMuJCRzY29wZSA9IHsgZGlydHksIGN0eCB9OwogICAgCQkJfQoKICAgIAkJCWNvbDAuJHNldChjb2wwX2NoYW5nZXMpOwogICAgCQkJY29uc3QgY29sMV9jaGFuZ2VzID0ge307CgogICAgCQkJaWYgKGRpcnR5ICYgLyokJHNjb3BlLCBhY3RpdmVUYWIsIHNldHRpbmdzKi8gNjcpIHsKICAgIAkJCQljb2wxX2NoYW5nZXMuJCRzY29wZSA9IHsgZGlydHksIGN0eCB9OwogICAgCQkJfQoKICAgIAkJCWNvbDEuJHNldChjb2wxX2NoYW5nZXMpOwogICAgCQl9LAogICAgCQlpOiBmdW5jdGlvbiBpbnRybyhsb2NhbCkgewogICAgCQkJaWYgKGN1cnJlbnQpIHJldHVybjsKICAgIAkJCXRyYW5zaXRpb25faW4oY29sMC4kJC5mcmFnbWVudCwgbG9jYWwpOwogICAgCQkJdHJhbnNpdGlvbl9pbihjb2wxLiQkLmZyYWdtZW50LCBsb2NhbCk7CiAgICAJCQljdXJyZW50ID0gdHJ1ZTsKICAgIAkJfSwKICAgIAkJbzogZnVuY3Rpb24gb3V0cm8obG9jYWwpIHsKICAgIAkJCXRyYW5zaXRpb25fb3V0KGNvbDAuJCQuZnJhZ21lbnQsIGxvY2FsKTsKICAgIAkJCXRyYW5zaXRpb25fb3V0KGNvbDEuJCQuZnJhZ21lbnQsIGxvY2FsKTsKICAgIAkJCWN1cnJlbnQgPSBmYWxzZTsKICAgIAkJfSwKICAgIAkJZDogZnVuY3Rpb24gZGVzdHJveShkZXRhY2hpbmcpIHsKICAgIAkJCWRlc3Ryb3lfY29tcG9uZW50KGNvbDAsIGRldGFjaGluZyk7CiAgICAJCQlpZiAoZGV0YWNoaW5nKSBkZXRhY2hfZGV2KHQpOwogICAgCQkJZGVzdHJveV9jb21wb25lbnQoY29sMSwgZGV0YWNoaW5nKTsKICAgIAkJfQogICAgCX07CgogICAgCWRpc3BhdGNoX2RldigiU3ZlbHRlUmVnaXN0ZXJCbG9jayIsIHsKICAgIAkJYmxvY2ssCiAgICAJCWlkOiBjcmVhdGVfZGVmYXVsdF9zbG90XzEkMy5uYW1lLAogICAgCQl0eXBlOiAic2xvdCIsCiAgICAJCXNvdXJjZTogIigyOTo0KSA8Um93PiIsCiAgICAJCWN0eAogICAgCX0pOwoKICAgIAlyZXR1cm4gYmxvY2s7CiAgICB9CgogICAgLy8gKDI4OjApIDxDb250YWluZXI+CiAgICBmdW5jdGlvbiBjcmVhdGVfZGVmYXVsdF9zbG90JDMoY3R4KSB7CiAgICAJbGV0IHJvdzsKICAgIAlsZXQgY3VycmVudDsKCiAgICAJcm93ID0gbmV3IFJvdyh7CiAgICAJCQlwcm9wczogewogICAgCQkJCSQkc2xvdHM6IHsgZGVmYXVsdDogW2NyZWF0ZV9kZWZhdWx0X3Nsb3RfMSQzXSB9LAogICAgCQkJCSQkc2NvcGU6IHsgY3R4IH0KICAgIAkJCX0sCiAgICAJCQkkJGlubGluZTogdHJ1ZQogICAgCQl9KTsKCiAgICAJY29uc3QgYmxvY2sgPSB7CiAgICAJCWM6IGZ1bmN0aW9uIGNyZWF0ZSgpIHsKICAgIAkJCWNyZWF0ZV9jb21wb25lbnQocm93LiQkLmZyYWdtZW50KTsKICAgIAkJfSwKICAgIAkJbTogZnVuY3Rpb24gbW91bnQodGFyZ2V0LCBhbmNob3IpIHsKICAgIAkJCW1vdW50X2NvbXBvbmVudChyb3csIHRhcmdldCwgYW5jaG9yKTsKICAgIAkJCWN1cnJlbnQgPSB0cnVlOwogICAgCQl9LAogICAgCQlwOiBmdW5jdGlvbiB1cGRhdGUoY3R4LCBkaXJ0eSkgewogICAgCQkJY29uc3Qgcm93X2NoYW5nZXMgPSB7fTsKCiAgICAJCQlpZiAoZGlydHkgJiAvKiQkc2NvcGUsIGFjdGl2ZVRhYiwgc2V0dGluZ3MqLyA2NykgewogICAgCQkJCXJvd19jaGFuZ2VzLiQkc2NvcGUgPSB7IGRpcnR5LCBjdHggfTsKICAgIAkJCX0KCiAgICAJCQlyb3cuJHNldChyb3dfY2hhbmdlcyk7CiAgICAJCX0sCiAgICAJCWk6IGZ1bmN0aW9uIGludHJvKGxvY2FsKSB7CiAgICAJCQlpZiAoY3VycmVudCkgcmV0dXJuOwogICAgCQkJdHJhbnNpdGlvbl9pbihyb3cuJCQuZnJhZ21lbnQsIGxvY2FsKTsKICAgIAkJCWN1cnJlbnQgPSB0cnVlOwogICAgCQl9LAogICAgCQlvOiBmdW5jdGlvbiBvdXRybyhsb2NhbCkgewogICAgCQkJdHJhbnNpdGlvbl9vdXQocm93LiQkLmZyYWdtZW50LCBsb2NhbCk7CiAgICAJCQljdXJyZW50ID0gZmFsc2U7CiAgICAJCX0sCiAgICAJCWQ6IGZ1bmN0aW9uIGRlc3Ryb3koZGV0YWNoaW5nKSB7CiAgICAJCQlkZXN0cm95X2NvbXBvbmVudChyb3csIGRldGFjaGluZyk7CiAgICAJCX0KICAgIAl9OwoKICAgIAlkaXNwYXRjaF9kZXYoIlN2ZWx0ZVJlZ2lzdGVyQmxvY2siLCB7CiAgICAJCWJsb2NrLAogICAgCQlpZDogY3JlYXRlX2RlZmF1bHRfc2xvdCQzLm5hbWUsCiAgICAJCXR5cGU6ICJzbG90IiwKICAgIAkJc291cmNlOiAiKDI4OjApIDxDb250YWluZXI+IiwKICAgIAkJY3R4CiAgICAJfSk7CgogICAgCXJldHVybiBibG9jazsKICAgIH0KCiAgICBmdW5jdGlvbiBjcmVhdGVfZnJhZ21lbnQkaihjdHgpIHsKICAgIAlsZXQgY29udGFpbmVyOwogICAgCWxldCBjdXJyZW50OwoKICAgIAljb250YWluZXIgPSBuZXcgQ29udGFpbmVyKHsKICAgIAkJCXByb3BzOiB7CiAgICAJCQkJJCRzbG90czogeyBkZWZhdWx0OiBbY3JlYXRlX2RlZmF1bHRfc2xvdCQzXSB9LAogICAgCQkJCSQkc2NvcGU6IHsgY3R4IH0KICAgIAkJCX0sCiAgICAJCQkkJGlubGluZTogdHJ1ZQogICAgCQl9KTsKCiAgICAJY29uc3QgYmxvY2sgPSB7CiAgICAJCWM6IGZ1bmN0aW9uIGNyZWF0ZSgpIHsKICAgIAkJCWNyZWF0ZV9jb21wb25lbnQoY29udGFpbmVyLiQkLmZyYWdtZW50KTsKICAgIAkJfSwKICAgIAkJbDogZnVuY3Rpb24gY2xhaW0obm9kZXMpIHsKICAgIAkJCXRocm93IG5ldyBFcnJvcigib3B0aW9ucy5oeWRyYXRlIG9ubHkgd29ya3MgaWYgdGhlIGNvbXBvbmVudCB3YXMgY29tcGlsZWQgd2l0aCB0aGUgYGh5ZHJhdGFibGU6IHRydWVgIG9wdGlvbiIpOwogICAgCQl9LAogICAgCQltOiBmdW5jdGlvbiBtb3VudCh0YXJnZXQsIGFuY2hvcikgewogICAgCQkJbW91bnRfY29tcG9uZW50KGNvbnRhaW5lciwgdGFyZ2V0LCBhbmNob3IpOwogICAgCQkJY3VycmVudCA9IHRydWU7CiAgICAJCX0sCiAgICAJCXA6IGZ1bmN0aW9uIHVwZGF0ZShjdHgsIFtkaXJ0eV0pIHsKICAgIAkJCWNvbnN0IGNvbnRhaW5lcl9jaGFuZ2VzID0ge307CgogICAgCQkJaWYgKGRpcnR5ICYgLyokJHNjb3BlLCBhY3RpdmVUYWIsIHNldHRpbmdzKi8gNjcpIHsKICAgIAkJCQljb250YWluZXJfY2hhbmdlcy4kJHNjb3BlID0geyBkaXJ0eSwgY3R4IH07CiAgICAJCQl9CgogICAgCQkJY29udGFpbmVyLiRzZXQoY29udGFpbmVyX2NoYW5nZXMpOwogICAgCQl9LAogICAgCQlpOiBmdW5jdGlvbiBpbnRybyhsb2NhbCkgewogICAgCQkJaWYgKGN1cnJlbnQpIHJldHVybjsKICAgIAkJCXRyYW5zaXRpb25faW4oY29udGFpbmVyLiQkLmZyYWdtZW50LCBsb2NhbCk7CiAgICAJCQljdXJyZW50ID0gdHJ1ZTsKICAgIAkJfSwKICAgIAkJbzogZnVuY3Rpb24gb3V0cm8obG9jYWwpIHsKICAgIAkJCXRyYW5zaXRpb25fb3V0KGNvbnRhaW5lci4kJC5mcmFnbWVudCwgbG9jYWwpOwogICAgCQkJY3VycmVudCA9IGZhbHNlOwogICAgCQl9LAogICAgCQlkOiBmdW5jdGlvbiBkZXN0cm95KGRldGFjaGluZykgewogICAgCQkJZGVzdHJveV9jb21wb25lbnQoY29udGFpbmVyLCBkZXRhY2hpbmcpOwogICAgCQl9CiAgICAJfTsKCiAgICAJZGlzcGF0Y2hfZGV2KCJTdmVsdGVSZWdpc3RlckJsb2NrIiwgewogICAgCQlibG9jaywKICAgIAkJaWQ6IGNyZWF0ZV9mcmFnbWVudCRqLm5hbWUsCiAgICAJCXR5cGU6ICJjb21wb25lbnQiLAogICAgCQlzb3VyY2U6ICIiLAogICAgCQljdHgKICAgIAl9KTsKCiAgICAJcmV0dXJuIGJsb2NrOwogICAgfQoKICAgIGZ1bmN0aW9uIGluc3RhbmNlJGooJCRzZWxmLCAkJHByb3BzLCAkJGludmFsaWRhdGUpIHsKICAgIAlsZXQgeyAkJHNsb3RzOiBzbG90cyA9IHt9LCAkJHNjb3BlIH0gPSAkJHByb3BzOwogICAgCXZhbGlkYXRlX3Nsb3RzKCJTY2FubmVyIiwgc2xvdHMsIFtdKTsKICAgIAlsZXQgc2Nhbm5lck5hbWU7CiAgICAJbGV0IHNldHRpbmdzID0ge307CgogICAgCWNvbnN0IHVuc3Vic2NyaWJlID0gc2Nhbm5lci5zdWJzY3JpYmUodmFsdWUgPT4gewogICAgCQlzY2FubmVyTmFtZSA9IHZhbHVlOwogICAgCX0pOwoKICAgIAlsZXQgeyBhY3RpdmVUYWIgPSAic2NhbiIgfSA9ICQkcHJvcHM7CiAgICAJY29uc3Qgc2VsZWN0VGFiID0gbmFtZSA9PiAoKSA9PiAkJGludmFsaWRhdGUoMCwgYWN0aXZlVGFiID0gbmFtZSk7CiAgICAJY29uc3Qgd3JpdGFibGVfcHJvcHMgPSBbImFjdGl2ZVRhYiJdOwoKICAgIAlPYmplY3Qua2V5cygkJHByb3BzKS5mb3JFYWNoKGtleSA9PiB7CiAgICAJCWlmICghfndyaXRhYmxlX3Byb3BzLmluZGV4T2Yoa2V5KSAmJiBrZXkuc2xpY2UoMCwgMikgIT09ICIkJCIpIGNvbnNvbGUud2FybihgPFNjYW5uZXI+IHdhcyBjcmVhdGVkIHdpdGggdW5rbm93biBwcm9wICcke2tleX0nYCk7CiAgICAJfSk7CgogICAgCWZ1bmN0aW9uIHNldHRpbmdzcGFnZV9zZXR0aW5nc19iaW5kaW5nKHZhbHVlKSB7CiAgICAJCXNldHRpbmdzID0gdmFsdWU7CiAgICAJCSQkaW52YWxpZGF0ZSgxLCBzZXR0aW5ncyk7CiAgICAJfQoKICAgIAkkJHNlbGYuJCRzZXQgPSAkJHByb3BzID0+IHsKICAgIAkJaWYgKCJhY3RpdmVUYWIiIGluICQkcHJvcHMpICQkaW52YWxpZGF0ZSgwLCBhY3RpdmVUYWIgPSAkJHByb3BzLmFjdGl2ZVRhYik7CiAgICAJfTsKCiAgICAJJCRzZWxmLiRjYXB0dXJlX3N0YXRlID0gKCkgPT4gKHsKICAgIAkJQ29sLAogICAgCQlDb250YWluZXIsCiAgICAJCVJvdywKICAgIAkJTmF2LAogICAgCQlOYXZJdGVtLAogICAgCQlOYXZMaW5rLAogICAgCQlTY2FubmVycywKICAgIAkJU2NhblBhZ2UsCiAgICAJCVNldHRpbmdzUGFnZSwKICAgIAkJc2Nhbm5lck5hbWUsCiAgICAJCXNldHRpbmdzLAogICAgCQlzY2FubmVyLAogICAgCQl1bnN1YnNjcmliZSwKICAgIAkJYWN0aXZlVGFiLAogICAgCQlzZWxlY3RUYWIKICAgIAl9KTsKCiAgICAJJCRzZWxmLiRpbmplY3Rfc3RhdGUgPSAkJHByb3BzID0+IHsKICAgIAkJaWYgKCJzY2FubmVyTmFtZSIgaW4gJCRwcm9wcykgc2Nhbm5lck5hbWUgPSAkJHByb3BzLnNjYW5uZXJOYW1lOwogICAgCQlpZiAoInNldHRpbmdzIiBpbiAkJHByb3BzKSAkJGludmFsaWRhdGUoMSwgc2V0dGluZ3MgPSAkJHByb3BzLnNldHRpbmdzKTsKICAgIAkJaWYgKCJhY3RpdmVUYWIiIGluICQkcHJvcHMpICQkaW52YWxpZGF0ZSgwLCBhY3RpdmVUYWIgPSAkJHByb3BzLmFjdGl2ZVRhYik7CiAgICAJfTsKCiAgICAJaWYgKCQkcHJvcHMgJiYgIiQkaW5qZWN0IiBpbiAkJHByb3BzKSB7CiAgICAJCSQkc2VsZi4kaW5qZWN0X3N0YXRlKCQkcHJvcHMuJCRpbmplY3QpOwogICAgCX0KCiAgICAJcmV0dXJuIFthY3RpdmVUYWIsIHNldHRpbmdzLCBzZWxlY3RUYWIsIHNldHRpbmdzcGFnZV9zZXR0aW5nc19iaW5kaW5nXTsKICAgIH0KCiAgICBjbGFzcyBTY2FubmVyIGV4dGVuZHMgU3ZlbHRlQ29tcG9uZW50RGV2IHsKICAgIAljb25zdHJ1Y3RvcihvcHRpb25zKSB7CiAgICAJCXN1cGVyKG9wdGlvbnMpOwogICAgCQlpbml0KHRoaXMsIG9wdGlvbnMsIGluc3RhbmNlJGosIGNyZWF0ZV9mcmFnbWVudCRqLCBzYWZlX25vdF9lcXVhbCwgeyBhY3RpdmVUYWI6IDAgfSk7CgogICAgCQlkaXNwYXRjaF9kZXYoIlN2ZWx0ZVJlZ2lzdGVyQ29tcG9uZW50IiwgewogICAgCQkJY29tcG9uZW50OiB0aGlzLAogICAgCQkJdGFnTmFtZTogIlNjYW5uZXIiLAogICAgCQkJb3B0aW9ucywKICAgIAkJCWlkOiBjcmVhdGVfZnJhZ21lbnQkai5uYW1lCiAgICAJCX0pOwogICAgCX0KCiAgICAJZ2V0IGFjdGl2ZVRhYigpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8U2Nhbm5lcj46IFByb3BzIGNhbm5vdCBiZSByZWFkIGRpcmVjdGx5IGZyb20gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CgogICAgCXNldCBhY3RpdmVUYWIodmFsdWUpIHsKICAgIAkJdGhyb3cgbmV3IEVycm9yKCI8U2Nhbm5lcj46IFByb3BzIGNhbm5vdCBiZSBzZXQgZGlyZWN0bHkgb24gdGhlIGNvbXBvbmVudCBpbnN0YW5jZSB1bmxlc3MgY29tcGlsaW5nIHdpdGggJ2FjY2Vzc29yczogdHJ1ZScgb3IgJzxzdmVsdGU6b3B0aW9ucyBhY2Nlc3NvcnMvPiciKTsKICAgIAl9CiAgICB9CgogICAgLyogc3JjL0FwcC5zdmVsdGUgZ2VuZXJhdGVkIGJ5IFN2ZWx0ZSB2My4zMS4yICovCiAgICBjb25zdCBmaWxlJGkgPSAic3JjL0FwcC5zdmVsdGUiOwoKICAgIGZ1bmN0aW9uIGNyZWF0ZV9mcmFnbWVudCRrKGN0eCkgewogICAgCWxldCBtYWluOwogICAgCWxldCBzY2FubmVyOwogICAgCWxldCBjdXJyZW50OwogICAgCXNjYW5uZXIgPSBuZXcgU2Nhbm5lcih7ICQkaW5saW5lOiB0cnVlIH0pOwoKICAgIAljb25zdCBibG9jayA9IHsKICAgIAkJYzogZnVuY3Rpb24gY3JlYXRlKCkgewogICAgCQkJbWFpbiA9IGVsZW1lbnQoIm1haW4iKTsKICAgIAkJCWNyZWF0ZV9jb21wb25lbnQoc2Nhbm5lci4kJC5mcmFnbWVudCk7CiAgICAJCQlhZGRfbG9jYXRpb24obWFpbiwgZmlsZSRpLCA0LCAwLCA2MSk7CiAgICAJCX0sCiAgICAJCWw6IGZ1bmN0aW9uIGNsYWltKG5vZGVzKSB7CiAgICAJCQl0aHJvdyBuZXcgRXJyb3IoIm9wdGlvbnMuaHlkcmF0ZSBvbmx5IHdvcmtzIGlmIHRoZSBjb21wb25lbnQgd2FzIGNvbXBpbGVkIHdpdGggdGhlIGBoeWRyYXRhYmxlOiB0cnVlYCBvcHRpb24iKTsKICAgIAkJfSwKICAgIAkJbTogZnVuY3Rpb24gbW91bnQodGFyZ2V0LCBhbmNob3IpIHsKICAgIAkJCWluc2VydF9kZXYodGFyZ2V0LCBtYWluLCBhbmNob3IpOwogICAgCQkJbW91bnRfY29tcG9uZW50KHNjYW5uZXIsIG1haW4sIG51bGwpOwogICAgCQkJY3VycmVudCA9IHRydWU7CiAgICAJCX0sCiAgICAJCXA6IG5vb3AsCiAgICAJCWk6IGZ1bmN0aW9uIGludHJvKGxvY2FsKSB7CiAgICAJCQlpZiAoY3VycmVudCkgcmV0dXJuOwogICAgCQkJdHJhbnNpdGlvbl9pbihzY2FubmVyLiQkLmZyYWdtZW50LCBsb2NhbCk7CiAgICAJCQljdXJyZW50ID0gdHJ1ZTsKICAgIAkJfSwKICAgIAkJbzogZnVuY3Rpb24gb3V0cm8obG9jYWwpIHsKICAgIAkJCXRyYW5zaXRpb25fb3V0KHNjYW5uZXIuJCQuZnJhZ21lbnQsIGxvY2FsKTsKICAgIAkJCWN1cnJlbnQgPSBmYWxzZTsKICAgIAkJfSwKICAgIAkJZDogZnVuY3Rpb24gZGVzdHJveShkZXRhY2hpbmcpIHsKICAgIAkJCWlmIChkZXRhY2hpbmcpIGRldGFjaF9kZXYobWFpbik7CiAgICAJCQlkZXN0cm95X2NvbXBvbmVudChzY2FubmVyKTsKICAgIAkJfQogICAgCX07CgogICAgCWRpc3BhdGNoX2RldigiU3ZlbHRlUmVnaXN0ZXJCbG9jayIsIHsKICAgIAkJYmxvY2ssCiAgICAJCWlkOiBjcmVhdGVfZnJhZ21lbnQkay5uYW1lLAogICAgCQl0eXBlOiAiY29tcG9uZW50IiwKICAgIAkJc291cmNlOiAiIiwKICAgIAkJY3R4CiAgICAJfSk7CgogICAgCXJldHVybiBibG9jazsKICAgIH0KCiAgICBmdW5jdGlvbiBpbnN0YW5jZSRrKCQkc2VsZiwgJCRwcm9wcywgJCRpbnZhbGlkYXRlKSB7CiAgICAJbGV0IHsgJCRzbG90czogc2xvdHMgPSB7fSwgJCRzY29wZSB9ID0gJCRwcm9wczsKICAgIAl2YWxpZGF0ZV9zbG90cygiQXBwIiwgc2xvdHMsIFtdKTsKICAgIAljb25zdCB3cml0YWJsZV9wcm9wcyA9IFtdOwoKICAgIAlPYmplY3Qua2V5cygkJHByb3BzKS5mb3JFYWNoKGtleSA9PiB7CiAgICAJCWlmICghfndyaXRhYmxlX3Byb3BzLmluZGV4T2Yoa2V5KSAmJiBrZXkuc2xpY2UoMCwgMikgIT09ICIkJCIpIGNvbnNvbGUud2FybihgPEFwcD4gd2FzIGNyZWF0ZWQgd2l0aCB1bmtub3duIHByb3AgJyR7a2V5fSdgKTsKICAgIAl9KTsKCiAgICAJJCRzZWxmLiRjYXB0dXJlX3N0YXRlID0gKCkgPT4gKHsgU2Nhbm5lciB9KTsKICAgIAlyZXR1cm4gW107CiAgICB9CgogICAgY2xhc3MgQXBwIGV4dGVuZHMgU3ZlbHRlQ29tcG9uZW50RGV2IHsKICAgIAljb25zdHJ1Y3RvcihvcHRpb25zKSB7CiAgICAJCXN1cGVyKG9wdGlvbnMpOwogICAgCQlpbml0KHRoaXMsIG9wdGlvbnMsIGluc3RhbmNlJGssIGNyZWF0ZV9mcmFnbWVudCRrLCBzYWZlX25vdF9lcXVhbCwge30pOwoKICAgIAkJZGlzcGF0Y2hfZGV2KCJTdmVsdGVSZWdpc3RlckNvbXBvbmVudCIsIHsKICAgIAkJCWNvbXBvbmVudDogdGhpcywKICAgIAkJCXRhZ05hbWU6ICJBcHAiLAogICAgCQkJb3B0aW9ucywKICAgIAkJCWlkOiBjcmVhdGVfZnJhZ21lbnQkay5uYW1lCiAgICAJCX0pOwogICAgCX0KICAgIH0KCiAgICBjb25zdCBhcHAgPSBuZXcgQXBwKHsKICAgIAl0YXJnZXQ6IGRvY3VtZW50LmJvZHksCiAgICAJcHJvcHM6IHsKICAgIAkJbmFtZTogJ3dvcmxkJwogICAgCX0KICAgIH0pOwoKICAgIHJldHVybiBhcHA7Cgp9KCkpOwovLyMgc291cmNlTWFwcGluZ1VSTD1idW5kbGUuanMubWFwCg==\"")
	packr.PackJSONBytes("../../web/public", "build/bundle.js.map", "\"\"")
	packr.PackJSONBytes("../../web/public", "favicon.png", "\"iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAACXBIWXMAAAsSAAALEgHS3X78AAAL6UlEQVR4nO1dCY4TRxStwMCwD4hNIEQmdQEmJ8jkBMwNmJwg5AQMNxhOEDhBhhswJwhcoGIQYkcwYt+jZ+oHx9hj99+q2vaTWiyS2+2uV3//v3748uVLmGF6sWO29tONGQGmHDMCTDlmBJhyzE37CxiGlNJiCGEpX4fzn8NwM4TwPP95M8bYqe4HDcHMC8jIC74SQljO14LgdlshhBv52qiZEFNPgJTSaggB1y+GX3MrhLCeyfDc8HsaYyoJkFKCSL+YL8lObwpIho0QwlotUmHqCJBSwqKvOS/8IFyrgQhTQ4CU0nIWw+cqeBwCJMJ6jHGt1ANMPAGyuMcL/r2CxxkG2AirMcab3l880XGAlNJKds1qXvyQpdLfWT25YiIlQN71V0MI5yt4nKaAbXDRy1uYOAJUZORJAJWw7EGCiSFADuRcNfbnPeFCgomwAVJK2PH/TNDih2wX3MjqzAytlgCVunbaMJUErUwGebt2O3bsCPPz82Fubq579eLz58/h/fv34d27d92/G+BcVm0rFjdvnQTIrh12/Y+W34OFXlhYCHv37g27d+8e6zMfP34Mb968Ca9fvw6vXr3SfqTLFgGj1hDAy7XDgh85ciTs2bNHdB+QYWtrK7x48UJTMvwaY7yhdbPQFgJ4uHbY8SdOnBAvfD9AhGfPnnWJoIDbqEvQtAeqJoCXawdRj10PXW+Ft2/fhgcPHmhIgysxRrWIYbUEyK7dJcvvgG7Hrh9Xx0uBxb93717XaBRCTRVURwAP1w47nXa9N5RIsBljXNZ49GoI4OXawcg7fvz4d+6cJ5RIoCIFqogEemTtsOux8KdOnSq6+PQsp0+flqoeFZewqATwcu3279/fXXxLI48DSABIAoFh+JO0oqjYG8muXcdy8bHTT5482b1qW/yQjVChHSL2BtwlgNeu93DttHD37l2uPbAVYxQli1zfTkppKdfKmy0+dhX069GjR1ux+MCxY8e4H13I75QNN2uoZ/HNonnY8SVcOykQfQRxmVKADGgWXAhgvfg1uHZSQGU9fvyYcxdRPMD8jVkuPkQ8djxengcQ10dMHxf+ju8H+Q4cOND1NCTA55kEEIXJTY3AbPB1LBYfLwx63mvXI6GDa7vnkbqa9+/f76aTGfiZW1Ju/fbUdz4FdKQ7blxALz969Gikfkb+H/48Ak1cwBZgEmCRaweYESAnc1Tj+Z6uHRYTOx45/XGBxYN6OHjwIOs7BZHBpdxz2BgmBMh6Xy2TZ5WrHwakbrHroeebAoThEmDnzp3mv60fVhLgqtaNPF077PqnT5+KijckCR6BPcMOBqkTIPfbi0W/d64eOhxWuFFh51gQEIAdDLKQAOIsFUQoDD0PQMxj1xsUcbYCqgTIu19UrQvXzsuvh76Goae96zudTtdL2bdvXyNvRaFSqDG0JYAoO+UV1MGuh7hnulwjAUJRwAhiHRINv2uU9yIgIrswRI0A2fJn6368JA9jb1RARxtUFYyLfuMwXf/hwwe35yJoSoBV9kPMzXVFvyXGDehYAhIBtgakwSCJgIYSb2gSgN26BGvfKrjDCehYgp4HZOiPbQhUUlkVkMU/y/hDMsUqwCMJ6FgDz4RyMIpu4t8CG4BdFqYlAdgpSQu9jxcJI68Nrh0kE3a+IAq4JakL1CIAKxCBII/27q8hoNMUQrtENFhKiwCLnA9xY+aDYO3aVQxWEoigRQBWUQL0vwasAjotgag5pGgNlTTO77Xr4abu2rXru///9OlTUbcS3cLS2YJiAuRevsaQ7n6FpoqhwIIjhIsLJB3louJZQEJ4Hc6G57r0BsUkgNTvV2q1/h9AykOHDjWuNgJJcMGlo7pBqCUHlSROuxcjgET8U1Gm5rOgNl/DI4H0oJwGSGBIhGsagyJaWUetqXetCk6oYhmejpGdotIcOrUE8OolwP1RKIqaA8Vw9GWtMfPFCCAR4YLqWfdeAgKSXVA1zNr/XmxpGH8EDQKw3BAJAWCkcVK63r0E/aDAl5AEqsfOiFNw3IfBYEUusJOaWOrY9dQmXrp9DCQQpr4v5OFZKtDKwd5q+gFYxhIpAP09jicBUX/27Fm3RpJxgGcSPo/awEgtArAMEollTGNWhulyGHk1t4kL28hWtIZIa8lDVs8/KmAkCSG8QCwwjDpE4HobNr3KybmgFreHDx9y7rCQC3DEgSCtrcFKSNCiSYGXSfV2kAi1Lz4BakAQElcZHq1CgJyQYDm5tZRqlYIgCHVeQw1oKkdWXlo7rNs2IKYh8EzEwyKLE4D68WoHlXejhx8XfHmlAdASj0A0HyhoD4hIKXW4xaHw0Wty1Qijqoo1ehgR2sakMAbEI2O1/SO2VYodVZsqgJF6586dbe0UqkuQPLuAPOKAkDYB1rnGIHaaRY6fAywm3DNc4zwPVSFLwPQGxKemqBIgh4XZRYqWVT7jArsd4rhpZQ+CWiVmA0jDwqoEyA9zQXIPDZHK/V4sPAxSLgEl5WACT6AeAmhNBqHFQI2dNcjIE4xrbTU0u4OXNY92oZn6loOhtFvH2jKatheauVGTM/Dp5K1hHbUcWE0FqdGNHQXN5lCzg516fXG8ZE68H/fAghud6dd9JkmtQSkXWEsCuJx73zt5ozfrh2tQcyUGLkCvU92+FajSSAIBAUS1gVoEMDnWdDvQji7ZAaxZX8itkJIWh2p0Bq20/Kx+FjTrCyGhmK6nOJWqIQFUji9rCyxmFQuSSqK+wDAjQDNYuaQCNVYFAViTwZD9I3esdljOKhbWQ4jPDRQRQHJeDYlQWPKlp3dtB+tZxcKRdWUJwI1D92a+4MKdOXPmPz+/liEPHrOK8ZsFu/9WDc2hLAkwSJRSI6XiUesseLWOQeIJd79K3qVIm8yw3Dd0LSxsLEAJIng1jFLtgxCi2UAE6S9VaU7oBxEBfjZF/ixtBM9jaCjJJQz9Xq+lO5g9Hm4c0DHvNHkD7pK210C9el7H0CicGh5q6w5uDM7LhlTQmioWjF27QUDqWankbVPj2HiClAAdyyxgP7Q8hNoPnxoB1bS7BgEaA7uBs/Oku3UCjqG5prn7QxtHxMBQaxo6JVvC8/Apg1nFWxZp9yISAKlP7m6mTuBx4X2usOHU0lXNySCEIgSQWMEQ31jQUXX41DquOY94OxhPLb0SY1Tx+/shJQArGyV9SVhULDBcwkH+tKdrF+yPoYHPb1ZxJe4N5PYDIv6vYYxBHZBEwYLDRvAS9zBmnzx5YhmkwuidZQvRT9B4Uzc4zSDQlRpnA9JMX084HUNjvvhBqTGEPR2kjePdsevRRDIJix+UVADyASwF6HkusBSOx9DA12efwNYUWnMCr3M+K8yHuwHJKLSJGy8+RMpvnosfFHsD2S6KQlrUDCAnTQMxVlebSKzFGNVOXR8XahNCUkrPueXhNaoCpwqlbnSvxMITNB1ldoqydBVQL6gz2eEMIqjNxZKLH5QlwOEcGWTXUsEt9Irc9QOLTWFcY9zOYV3VpA4XahIgG4OiQgXNyVtNQK6dw+Jfybq+isUPBlPCDufwsGh2jZdNQCPqHEh3K+96cSOHNlQJEL71Cv4lvY91Fs/phNHu4Q4xRpPZCRpQJ0D4SoINzvDoQdCu3oG4h6h3OGF0M+96leJNK1gRQEUV9ALGoWQQNMT8y5cvPRa+uGvXBCYECN/axv7Wvi8Vh4II8/PzAw92RAAHFwpPsOOx6E55h+tWhRtWMCNA+EoChDX/LP0jHVCVa9cEphUTWQz+YfkdFaA6164JTCUAIaV0VTpAskJU69o1gQsBwlcSwBW65PJltqjetWsCNwKEybAJWuHaNYErAcK3iaIbLRss1SrXrgncCRC+xQk2PNvKBGida9cERQhASCldzL1uNUqD1rp2TVB0unGMcT23mF8r+RwD0GrXrgmKSoBeZNtgrbBaABHXJsnIG4VqCEDIh06s5fGzXqph6haeUB0BCNlQXMmXSmaxDwjkrGsfx942VEuAfuQ6g6U8mXSJIR02c4by5rQvei9aQ4B+ZAlBM4oWB8wsJAOuM42ifVy0lgAz6KB9h9zMoIoZAaYcMwJMM0II/wJv+riuzREqgwAAAABJRU5ErkJggg==\"")
	packr.PackJSONBytes("../../web/public", "global.css", "\"Ym9keSB7Cgljb2xvcjogIzMzMzsKCW1hcmdpbjogMDsKCXBhZGRpbmc6IDhweDsKCWJveC1zaXppbmc6IGJvcmRlci1ib3g7Cn0KCi5yb3cgewoJcGFkZGluZy1ib3R0b206IDNweDsKfQ==\"")
	packr.PackJSONBytes("../../web/public", "index.html", "\"PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KPGhlYWQ+Cgk8bWV0YSBjaGFyc2V0PSd1dGYtOCc+Cgk8bWV0YSBuYW1lPSd2aWV3cG9ydCcgY29udGVudD0nd2lkdGg9ZGV2aWNlLXdpZHRoLGluaXRpYWwtc2NhbGU9MSc+CgoJPHRpdGxlPnNjYW48L3RpdGxlPgoKCTxsaW5rIHJlbD0nc3R5bGVzaGVldCcgaHJlZj0nL2dsb2JhbC5jc3MnPgoJPGxpbmsgcmVsPSdzdHlsZXNoZWV0JyBocmVmPScvYnVpbGQvYnVuZGxlLmNzcyc+CgoJPHNjcmlwdCBkZWZlciBzcmM9Jy9idWlsZC9idW5kbGUuanMnPjwvc2NyaXB0Pgo8L2hlYWQ+Cgo8Ym9keT4KPC9ib2R5Pgo8L2h0bWw+Cg==\"")
}
